// To parse this data:
//
//   import { Convert, DeleteApisAPIIDResponse401, DeleteApisAPIIDResponse403, DeleteApisAPIIDResponse404, DeleteApisAPIIDResponse422, DeleteApisAPIIDResponse500, DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400, DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401, DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403, DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404, DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422, DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500, DeleteApisAPIIDVersionsVersionIDResponse400, DeleteApisAPIIDVersionsVersionIDResponse401, DeleteApisAPIIDVersionsVersionIDResponse403, DeleteApisAPIIDVersionsVersionIDResponse404, DeleteApisAPIIDVersionsVersionIDResponse500, DeleteCollectionsCollectionIDFoldersFolderIDResponse, DeleteCollectionsCollectionIDFoldersFolderIDResponse401, DeleteCollectionsCollectionIDFoldersFolderIDResponse404, DeleteCollectionsCollectionIDFoldersFolderIDResponse500, DeleteCollectionsCollectionIDRequestsRequestIDResponse, DeleteCollectionsCollectionIDRequestsRequestIDResponse401, DeleteCollectionsCollectionIDRequestsRequestIDResponse404, DeleteCollectionsCollectionIDRequestsRequestIDResponse500, DeleteCollectionsCollectionIDResponse, DeleteCollectionsCollectionIDResponse401, DeleteCollectionsCollectionIDResponse404, DeleteCollectionsCollectionIDResponse429, DeleteCollectionsCollectionIDResponse500, DeleteCollectionsCollectionIDResponsesResponseIDResponse, DeleteCollectionsCollectionIDResponsesResponseIDResponse401, DeleteCollectionsCollectionIDResponsesResponseIDResponse404, DeleteCollectionsCollectionIDResponsesResponseIDResponse500, DeleteEnvironmentsEnvironmentIDResponse, DeleteEnvironmentsEnvironmentIDResponse401, DeleteEnvironmentsEnvironmentIDResponse404, DeleteEnvironmentsEnvironmentIDResponse429, DeleteEnvironmentsEnvironmentIDResponse500, DeleteMocksMockIDResponse, DeleteMocksMockIDResponse400, DeleteMocksMockIDResponse401, DeleteMocksMockIDResponse404, DeleteMocksMockIDResponse429, DeleteMocksMockIDResponse500, DeleteMocksMockIDServerResponsesServerResponseIDResponse, DeleteMocksMockIDServerResponsesServerResponseIDResponse400, DeleteMocksMockIDServerResponsesServerResponseIDResponse401, DeleteMocksMockIDServerResponsesServerResponseIDResponse404, DeleteMocksMockIDServerResponsesServerResponseIDResponse429, DeleteMocksMockIDServerResponsesServerResponseIDResponse500, DeleteMocksMockIDUnpublishResponse, DeleteMocksMockIDUnpublishResponse400, DeleteMocksMockIDUnpublishResponse401, DeleteMocksMockIDUnpublishResponse404, DeleteMocksMockIDUnpublishResponse429, DeleteMocksMockIDUnpublishResponse500, DeleteMonitorsMonitorIDResponse, DeleteMonitorsMonitorIDResponse400, DeleteMonitorsMonitorIDResponse401, DeleteMonitorsMonitorIDResponse429, DeleteMonitorsMonitorIDResponse500, DeleteNetworkPrivateElementTypeElementIDResponse, DeleteNetworkPrivateElementTypeElementIDResponse400, DeleteNetworkPrivateElementTypeElementIDResponse401, DeleteNetworkPrivateElementTypeElementIDResponse403, DeleteNetworkPrivateElementTypeElementIDResponse404, DeleteNetworkPrivateElementTypeElementIDResponse429, DeleteNetworkPrivateElementTypeElementIDResponse500, DeleteScimV2GroupsGroupIDResponse400, DeleteScimV2GroupsGroupIDResponse401, DeleteScimV2GroupsGroupIDResponse403, DeleteScimV2GroupsGroupIDResponse404, DeleteScimV2GroupsGroupIDResponse429, DeleteScimV2GroupsGroupIDResponse500, DeleteWorkspacesWorkspaceIDResponse, DeleteWorkspacesWorkspaceIDResponse400, DeleteWorkspacesWorkspaceIDResponse401, DeleteWorkspacesWorkspaceIDResponse429, DeleteWorkspacesWorkspaceIDResponse500, GetApisAPIIDCollectionsCollectionIDResponse, GetApisAPIIDCollectionsCollectionIDResponse400, GetApisAPIIDCollectionsCollectionIDResponse401, GetApisAPIIDCollectionsCollectionIDResponse403, GetApisAPIIDCollectionsCollectionIDResponse404, GetApisAPIIDCollectionsCollectionIDResponse500, GetApisAPIIDResponse401, GetApisAPIIDResponse404, GetApisAPIIDResponse422, GetApisAPIIDResponse500, GetApisAPIIDSchemasSchemaIDFilesFilePathResponse, GetApisAPIIDSchemasSchemaIDFilesFilePathResponse400, GetApisAPIIDSchemasSchemaIDFilesFilePathResponse401, GetApisAPIIDSchemasSchemaIDFilesFilePathResponse404, GetApisAPIIDSchemasSchemaIDFilesFilePathResponse422, GetApisAPIIDSchemasSchemaIDFilesFilePathResponse500, GetApisAPIIDSchemasSchemaIDFilesResponse, GetApisAPIIDSchemasSchemaIDFilesResponse400, GetApisAPIIDSchemasSchemaIDFilesResponse401, GetApisAPIIDSchemasSchemaIDFilesResponse404, GetApisAPIIDSchemasSchemaIDFilesResponse422, GetApisAPIIDSchemasSchemaIDFilesResponse500, GetApisAPIIDSchemasSchemaIDResponse400, GetApisAPIIDSchemasSchemaIDResponse401, GetApisAPIIDSchemasSchemaIDResponse403, GetApisAPIIDSchemasSchemaIDResponse404, GetApisAPIIDSchemasSchemaIDResponse422, GetApisAPIIDSchemasSchemaIDResponse500, GetApisAPIIDTagsResponse, GetApisAPIIDTagsResponse401, GetApisAPIIDTagsResponse403, GetApisAPIIDTagsResponse404, GetApisAPIIDTagsResponse500, GetApisAPIIDTasksTaskIDResponse, GetApisAPIIDTasksTaskIDResponse400, GetApisAPIIDTasksTaskIDResponse401, GetApisAPIIDTasksTaskIDResponse403, GetApisAPIIDTasksTaskIDResponse404, GetApisAPIIDVersionsResponse, GetApisAPIIDVersionsResponse401, GetApisAPIIDVersionsResponse404, GetApisAPIIDVersionsResponse422, GetApisAPIIDVersionsResponse500, GetApisAPIIDVersionsVersionIDResponse, GetApisAPIIDVersionsVersionIDResponse401, GetApisAPIIDVersionsVersionIDResponse404, GetApisAPIIDVersionsVersionIDResponse500, GetApisResponse, GetApisResponse401, GetApisResponse404, GetApisResponse422, GetApisResponse500, GetAuditLogsResponse, GetAuditLogsResponse401, GetAuditLogsResponse429, GetAuditLogsResponse500, GetCollectionsCollectionIDFoldersFolderIDResponse, GetCollectionsCollectionIDFoldersFolderIDResponse401, GetCollectionsCollectionIDFoldersFolderIDResponse404, GetCollectionsCollectionIDFoldersFolderIDResponse500, GetCollectionsCollectionIDRequestsRequestIDResponse, GetCollectionsCollectionIDRequestsRequestIDResponse401, GetCollectionsCollectionIDRequestsRequestIDResponse404, GetCollectionsCollectionIDRequestsRequestIDResponse500, GetCollectionsCollectionIDResponse, GetCollectionsCollectionIDResponse400, GetCollectionsCollectionIDResponse401, GetCollectionsCollectionIDResponse429, GetCollectionsCollectionIDResponse500, GetCollectionsCollectionIDResponsesResponseIDResponse, GetCollectionsCollectionIDResponsesResponseIDResponse401, GetCollectionsCollectionIDResponsesResponseIDResponse404, GetCollectionsCollectionIDResponsesResponseIDResponse500, GetCollectionsCollectionIDTagsResponse, GetCollectionsCollectionIDTagsResponse401, GetCollectionsCollectionIDTagsResponse403, GetCollectionsCollectionIDTagsResponse500, GetCollectionsCollectionIDTransformationsResponse, GetCollectionsCollectionIDTransformationsResponse401, GetCollectionsCollectionIDTransformationsResponse404, GetCollectionsCollectionIDTransformationsResponse500, GetCollectionsResponse, GetCollectionsResponse401, GetCollectionsResponse429, GetCollectionsResponse500, GetDetectedSecretsSecretIDLocationsResponse, GetDetectedSecretsSecretIDLocationsResponse400, GetDetectedSecretsSecretIDLocationsResponse401, GetDetectedSecretsSecretIDLocationsResponse403, GetDetectedSecretsSecretIDLocationsResponse500, GetEnvironmentsEnvironmentIDResponse, GetEnvironmentsEnvironmentIDResponse400, GetEnvironmentsEnvironmentIDResponse401, GetEnvironmentsEnvironmentIDResponse429, GetEnvironmentsEnvironmentIDResponse500, GetEnvironmentsResponse, GetEnvironmentsResponse401, GetEnvironmentsResponse404, GetEnvironmentsResponse429, GetEnvironmentsResponse500, GetMeResponse, GetMeResponse401, GetMeResponse429, GetMeResponse500, GetMocksMockIDCallLogsResponse, GetMocksMockIDCallLogsResponse400, GetMocksMockIDCallLogsResponse401, GetMocksMockIDCallLogsResponse404, GetMocksMockIDCallLogsResponse429, GetMocksMockIDCallLogsResponse500, GetMocksMockIDResponse, GetMocksMockIDResponse401, GetMocksMockIDResponse404, GetMocksMockIDResponse429, GetMocksMockIDResponse500, GetMocksMockIDServerResponsesResponse401, GetMocksMockIDServerResponsesResponse404, GetMocksMockIDServerResponsesResponse429, GetMocksMockIDServerResponsesResponse500, GetMocksMockIDServerResponsesResponseItem, GetMocksMockIDServerResponsesServerResponseIDResponse400, GetMocksMockIDServerResponsesServerResponseIDResponse401, GetMocksMockIDServerResponsesServerResponseIDResponse404, GetMocksMockIDServerResponsesServerResponseIDResponse429, GetMocksMockIDServerResponsesServerResponseIDResponse500, GetMocksMockIDServerResponsesServerResponseIDResponseItem, GetMocksResponse, GetMocksResponse401, GetMocksResponse429, GetMocksResponse500, GetMonitorsMonitorIDResponse, GetMonitorsMonitorIDResponse401, GetMonitorsMonitorIDResponse404, GetMonitorsMonitorIDResponse429, GetMonitorsMonitorIDResponse500, GetMonitorsResponse, GetMonitorsResponse401, GetMonitorsResponse429, GetMonitorsResponse500, GetNetworkPrivateNetworkEntityRequestAllResponse, GetNetworkPrivateNetworkEntityRequestAllResponse400, GetNetworkPrivateNetworkEntityRequestAllResponse401, GetNetworkPrivateNetworkEntityRequestAllResponse403, GetNetworkPrivateNetworkEntityRequestAllResponse429, GetNetworkPrivateNetworkEntityRequestAllResponse500, GetNetworkPrivateResponse, GetNetworkPrivateResponse401, GetNetworkPrivateResponse403, GetNetworkPrivateResponse429, GetNetworkPrivateResponse500, GetScimV2GroupsGroupIDResponse, GetScimV2GroupsGroupIDResponse400, GetScimV2GroupsGroupIDResponse401, GetScimV2GroupsGroupIDResponse403, GetScimV2GroupsGroupIDResponse404, GetScimV2GroupsGroupIDResponse429, GetScimV2GroupsGroupIDResponse500, GetScimV2GroupsResponse, GetScimV2GroupsResponse400, GetScimV2GroupsResponse401, GetScimV2GroupsResponse403, GetScimV2GroupsResponse429, GetScimV2GroupsResponse500, GetScimV2ResourceTypesResponse401, GetScimV2ResourceTypesResponse500, GetScimV2ResourceTypesResponseItem, GetScimV2ServiceProviderConfigResponse, GetScimV2ServiceProviderConfigResponse401, GetScimV2ServiceProviderConfigResponse500, GetScimV2UsersResponse, GetScimV2UsersResponse400, GetScimV2UsersResponse401, GetScimV2UsersResponse403, GetScimV2UsersResponse429, GetScimV2UsersResponse500, GetScimV2UsersUserIDResponse, GetScimV2UsersUserIDResponse400, GetScimV2UsersUserIDResponse401, GetScimV2UsersUserIDResponse403, GetScimV2UsersUserIDResponse404, GetScimV2UsersUserIDResponse429, GetScimV2UsersUserIDResponse500, GetSecretTypesResponse, GetSecretTypesResponse401, GetSecretTypesResponse403, GetSecretTypesResponse500, GetTagsSlugEntitiesResponse, GetTagsSlugEntitiesResponse400, GetTagsSlugEntitiesResponse401, GetTagsSlugEntitiesResponse403, GetTagsSlugEntitiesResponse404, GetTagsSlugEntitiesResponse500, GetWorkspacesResponse, GetWorkspacesResponse401, GetWorkspacesResponse429, GetWorkspacesResponse500, GetWorkspacesWorkspaceIDGlobalVariablesResponse, GetWorkspacesWorkspaceIDGlobalVariablesResponse500, GetWorkspacesWorkspaceIDResponse, GetWorkspacesWorkspaceIDResponse401, GetWorkspacesWorkspaceIDResponse404, GetWorkspacesWorkspaceIDResponse429, GetWorkspacesWorkspaceIDResponse500, GetWorkspacesWorkspaceIDTagsResponse, GetWorkspacesWorkspaceIDTagsResponse401, GetWorkspacesWorkspaceIDTagsResponse403, GetWorkspacesWorkspaceIDTagsResponse404, GetWorkspacesWorkspaceIDTagsResponse500, PANElementCreated, PANFolderCreated, PatchCollectionsCollectionIDBody, PatchCollectionsCollectionIDResponse, PatchCollectionsCollectionIDResponse400, PatchCollectionsCollectionIDResponse401, PatchCollectionsCollectionIDResponse403, PatchCollectionsCollectionIDResponse404, PatchCollectionsCollectionIDResponse429, PatchCollectionsCollectionIDResponse500, PatchScimV2GroupsGroupIDBody, PatchScimV2GroupsGroupIDResponse, PatchScimV2GroupsGroupIDResponse400, PatchScimV2GroupsGroupIDResponse401, PatchScimV2GroupsGroupIDResponse403, PatchScimV2GroupsGroupIDResponse404, PatchScimV2GroupsGroupIDResponse429, PatchScimV2GroupsGroupIDResponse500, PatchScimV2UsersUserIDBody, PatchScimV2UsersUserIDResponse, PatchScimV2UsersUserIDResponse400, PatchScimV2UsersUserIDResponse401, PatchScimV2UsersUserIDResponse403, PatchScimV2UsersUserIDResponse404, PatchScimV2UsersUserIDResponse429, PatchScimV2UsersUserIDResponse500, PostApisAPIIDCollectionsResponse, PostApisAPIIDCollectionsResponse401, PostApisAPIIDCollectionsResponse403, PostApisAPIIDCollectionsResponse404, PostApisAPIIDCollectionsResponse500, PostApisAPIIDSchemasBody, PostApisAPIIDSchemasResponse, PostApisAPIIDSchemasResponse400, PostApisAPIIDSchemasResponse401, PostApisAPIIDSchemasResponse403, PostApisAPIIDSchemasResponse404, PostApisAPIIDSchemasResponse422, PostApisAPIIDSchemasResponse500, PostApisAPIIDVersionsResponse, PostApisAPIIDVersionsResponse401, PostApisAPIIDVersionsResponse403, PostApisAPIIDVersionsResponse404, PostApisAPIIDVersionsResponse422, PostApisAPIIDVersionsResponse500, PostApisBody, PostApisResponse, PostApisResponse400, PostApisResponse401, PostApisResponse403, PostApisResponse404, PostApisResponse500, PostCollectionsBody, PostCollectionsCollectionIDFoldersBody, PostCollectionsCollectionIDFoldersResponse, PostCollectionsCollectionIDFoldersResponse400, PostCollectionsCollectionIDFoldersResponse401, PostCollectionsCollectionIDFoldersResponse500, PostCollectionsCollectionIDRequestsBody, PostCollectionsCollectionIDRequestsResponse, PostCollectionsCollectionIDRequestsResponse400, PostCollectionsCollectionIDRequestsResponse401, PostCollectionsCollectionIDRequestsResponse500, PostCollectionsCollectionIDResponsesBody, PostCollectionsCollectionIDResponsesResponse, PostCollectionsCollectionIDResponsesResponse400, PostCollectionsCollectionIDResponsesResponse401, PostCollectionsCollectionIDResponsesResponse500, PostCollectionsForkCollectionIDBody, PostCollectionsForkCollectionIDResponse, PostCollectionsForkCollectionIDResponse401, PostCollectionsForkCollectionIDResponse404, PostCollectionsForkCollectionIDResponse429, PostCollectionsForkCollectionIDResponse500, PostCollectionsMergeBody, PostCollectionsMergeResponse, PostCollectionsMergeResponse401, PostCollectionsMergeResponse404, PostCollectionsMergeResponse429, PostCollectionsMergeResponse500, PostCollectionsResponse, PostCollectionsResponse400, PostCollectionsResponse401, PostCollectionsResponse429, PostCollectionsResponse500, PostDetectedSecretsQueriesBody, PostDetectedSecretsQueriesResponse, PostDetectedSecretsQueriesResponse400, PostDetectedSecretsQueriesResponse401, PostDetectedSecretsQueriesResponse403, PostDetectedSecretsQueriesResponse500, PostEnvironmentsBody, PostEnvironmentsResponse, PostEnvironmentsResponse400, PostEnvironmentsResponse401, PostEnvironmentsResponse403, PostEnvironmentsResponse429, PostEnvironmentsResponse500, PostImportOpenapiResponse, PostImportOpenapiResponse400, PostImportOpenapiResponse401, PostImportOpenapiResponse429, PostImportOpenapiResponse500, PostMocksBody, PostMocksMockIDPublishResponse, PostMocksMockIDPublishResponse400, PostMocksMockIDPublishResponse401, PostMocksMockIDPublishResponse404, PostMocksMockIDPublishResponse429, PostMocksMockIDPublishResponse500, PostMocksMockIDServerResponsesBody, PostMocksMockIDServerResponsesResponse400, PostMocksMockIDServerResponsesResponse401, PostMocksMockIDServerResponsesResponse429, PostMocksMockIDServerResponsesResponse500, PostMocksMockIDServerResponsesResponseItem, PostMocksResponse, PostMocksResponse400, PostMocksResponse401, PostMocksResponse429, PostMocksResponse500, PostMonitorsBody, PostMonitorsMonitorIDRunResponse, PostMonitorsMonitorIDRunResponse401, PostMonitorsMonitorIDRunResponse429, PostMonitorsMonitorIDRunResponse500, PostMonitorsResponse, PostMonitorsResponse400, PostMonitorsResponse401, PostMonitorsResponse403, PostMonitorsResponse429, PostMonitorsResponse500, PostNetworkPrivateResponse401, PostNetworkPrivateResponse403, PostNetworkPrivateResponse404, PostNetworkPrivateResponse429, PostNetworkPrivateResponse500, PostScimV2GroupsBody, PostScimV2GroupsResponse, PostScimV2GroupsResponse400, PostScimV2GroupsResponse401, PostScimV2GroupsResponse403, PostScimV2GroupsResponse409, PostScimV2GroupsResponse429, PostScimV2GroupsResponse500, PostScimV2UsersBody, PostScimV2UsersResponse, PostScimV2UsersResponse400, PostScimV2UsersResponse401, PostScimV2UsersResponse403, PostScimV2UsersResponse409, PostScimV2UsersResponse429, PostScimV2UsersResponse500, PostSecurityAPIValidationBody, PostSecurityAPIValidationResponse, PostSecurityAPIValidationResponse400, PostSecurityAPIValidationResponse401, PostSecurityAPIValidationResponse429, PostSecurityAPIValidationResponse500, PostWebhooksBody, PostWebhooksResponse, PostWebhooksResponse401, PostWebhooksResponse429, PostWebhooksResponse500, PostWorkspacesBody, PostWorkspacesResponse, PostWorkspacesResponse400, PostWorkspacesResponse401, PostWorkspacesResponse404, PostWorkspacesResponse429, PostWorkspacesResponse500, PutApisAPIIDBody, PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse, PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400, PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401, PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403, PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404, PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422, PutApisAPIIDResponse, PutApisAPIIDResponse401, PutApisAPIIDResponse403, PutApisAPIIDResponse404, PutApisAPIIDResponse422, PutApisAPIIDResponse500, PutApisAPIIDSchemasSchemaIDFilesFilePathBody, PutApisAPIIDSchemasSchemaIDFilesFilePathResponse, PutApisAPIIDSchemasSchemaIDFilesFilePathResponse400, PutApisAPIIDSchemasSchemaIDFilesFilePathResponse401, PutApisAPIIDSchemasSchemaIDFilesFilePathResponse403, PutApisAPIIDSchemasSchemaIDFilesFilePathResponse404, PutApisAPIIDSchemasSchemaIDFilesFilePathResponse422, PutApisAPIIDSchemasSchemaIDFilesFilePathResponse500, PutApisAPIIDTagsBody, PutApisAPIIDTagsResponse, PutApisAPIIDTagsResponse400, PutApisAPIIDTagsResponse401, PutApisAPIIDTagsResponse403, PutApisAPIIDTagsResponse500, PutApisAPIIDVersionsVersionIDBody, PutApisAPIIDVersionsVersionIDResponse, PutApisAPIIDVersionsVersionIDResponse401, PutApisAPIIDVersionsVersionIDResponse403, PutApisAPIIDVersionsVersionIDResponse404, PutApisAPIIDVersionsVersionIDResponse500, PutCollectionsCollectionIDBody, PutCollectionsCollectionIDFoldersFolderIDBody, PutCollectionsCollectionIDFoldersFolderIDResponse, PutCollectionsCollectionIDFoldersFolderIDResponse400, PutCollectionsCollectionIDFoldersFolderIDResponse401, PutCollectionsCollectionIDFoldersFolderIDResponse404, PutCollectionsCollectionIDFoldersFolderIDResponse500, PutCollectionsCollectionIDRequestsRequestIDBody, PutCollectionsCollectionIDRequestsRequestIDResponse, PutCollectionsCollectionIDRequestsRequestIDResponse400, PutCollectionsCollectionIDRequestsRequestIDResponse401, PutCollectionsCollectionIDRequestsRequestIDResponse404, PutCollectionsCollectionIDRequestsRequestIDResponse500, PutCollectionsCollectionIDResponse, PutCollectionsCollectionIDResponse400, PutCollectionsCollectionIDResponse401, PutCollectionsCollectionIDResponse403, PutCollectionsCollectionIDResponse404, PutCollectionsCollectionIDResponse429, PutCollectionsCollectionIDResponse500, PutCollectionsCollectionIDResponsesResponseIDBody, PutCollectionsCollectionIDResponsesResponseIDResponse, PutCollectionsCollectionIDResponsesResponseIDResponse400, PutCollectionsCollectionIDResponsesResponseIDResponse401, PutCollectionsCollectionIDResponsesResponseIDResponse404, PutCollectionsCollectionIDResponsesResponseIDResponse500, PutCollectionsCollectionIDTagsBody, PutCollectionsCollectionIDTagsResponse, PutCollectionsCollectionIDTagsResponse400, PutCollectionsCollectionIDTagsResponse401, PutCollectionsCollectionIDTagsResponse403, PutCollectionsCollectionIDTagsResponse404, PutCollectionsCollectionIDTagsResponse500, PutDetectedSecretsSecretIDBody, PutDetectedSecretsSecretIDResponse, PutDetectedSecretsSecretIDResponse401, PutDetectedSecretsSecretIDResponse403, PutDetectedSecretsSecretIDResponse500, PutEnvironmentsEnvironmentIDBody, PutEnvironmentsEnvironmentIDResponse, PutEnvironmentsEnvironmentIDResponse400, PutEnvironmentsEnvironmentIDResponse401, PutEnvironmentsEnvironmentIDResponse429, PutEnvironmentsEnvironmentIDResponse500, PutMocksMockIDBody, PutMocksMockIDResponse, PutMocksMockIDResponse401, PutMocksMockIDResponse404, PutMocksMockIDResponse429, PutMocksMockIDResponse500, PutMocksMockIDServerResponsesServerResponseIDBody, PutMocksMockIDServerResponsesServerResponseIDResponse400, PutMocksMockIDServerResponsesServerResponseIDResponse401, PutMocksMockIDServerResponsesServerResponseIDResponse429, PutMocksMockIDServerResponsesServerResponseIDResponse500, PutMocksMockIDServerResponsesServerResponseIDResponseItem, PutMonitorsMonitorIDBody, PutMonitorsMonitorIDResponse, PutMonitorsMonitorIDResponse401, PutMonitorsMonitorIDResponse404, PutMonitorsMonitorIDResponse429, PutMonitorsMonitorIDResponse500, PutNetworkPrivateElementTypeElementIDResponse401, PutNetworkPrivateElementTypeElementIDResponse403, PutNetworkPrivateElementTypeElementIDResponse404, PutNetworkPrivateElementTypeElementIDResponse429, PutNetworkPrivateElementTypeElementIDResponse500, PutNetworkPrivateNetworkEntityRequestRequestIDBody, PutNetworkPrivateNetworkEntityRequestRequestIDResponse, PutNetworkPrivateNetworkEntityRequestRequestIDResponse400, PutNetworkPrivateNetworkEntityRequestRequestIDResponse401, PutNetworkPrivateNetworkEntityRequestRequestIDResponse403, PutNetworkPrivateNetworkEntityRequestRequestIDResponse429, PutNetworkPrivateNetworkEntityRequestRequestIDResponse500, PutScimV2UsersUserIDBody, PutScimV2UsersUserIDResponse, PutScimV2UsersUserIDResponse400, PutScimV2UsersUserIDResponse401, PutScimV2UsersUserIDResponse403, PutScimV2UsersUserIDResponse404, PutScimV2UsersUserIDResponse429, PutScimV2UsersUserIDResponse500, PutWorkspacesWorkspaceIDBody, PutWorkspacesWorkspaceIDGlobalVariablesBody, PutWorkspacesWorkspaceIDGlobalVariablesResponse, PutWorkspacesWorkspaceIDGlobalVariablesResponse500, PutWorkspacesWorkspaceIDResponse, PutWorkspacesWorkspaceIDResponse400, PutWorkspacesWorkspaceIDResponse403, PutWorkspacesWorkspaceIDResponse404, PutWorkspacesWorkspaceIDResponse429, PutWorkspacesWorkspaceIDResponse500, PutWorkspacesWorkspaceIDTagsBody, PutWorkspacesWorkspaceIDTagsResponse, PutWorkspacesWorkspaceIDTagsResponse400, PutWorkspacesWorkspaceIDTagsResponse401, PutWorkspacesWorkspaceIDTagsResponse403, PutWorkspacesWorkspaceIDTagsResponse404, PutWorkspacesWorkspaceIDTagsResponse500, APIBase, APIDetails, CreateAPIVersionGitLinked, CreateAPIVersionNonGitLinked, CreateAPISchema, CreatePANAPI, CreatePANCollection, CreatePANFolder, CreatePANWorkspace, CreateUpdateAPI, GitInfo, GlobalVariable, ImportExportFile, JSONSchema, JSONStringified, Meta, SchemaFileBase, SchemaFileContents, ScimGroupResource, ScimUserResource, TaskError, TaskResource, UpdatePANAPI, UpdatePANCollection, UpdatePANFolder, UpdatePANWorkspace, VersionBase, VersionExtended } from "./file";
//
//   const deleteApisAPIIDResponse401 = Convert.toDeleteApisAPIIDResponse401(json);
//   const deleteApisAPIIDResponse403 = Convert.toDeleteApisAPIIDResponse403(json);
//   const deleteApisAPIIDResponse404 = Convert.toDeleteApisAPIIDResponse404(json);
//   const deleteApisAPIIDResponse422 = Convert.toDeleteApisAPIIDResponse422(json);
//   const deleteApisAPIIDResponse500 = Convert.toDeleteApisAPIIDResponse500(json);
//   const deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400 = Convert.toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400(json);
//   const deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401 = Convert.toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401(json);
//   const deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403 = Convert.toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403(json);
//   const deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404 = Convert.toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404(json);
//   const deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422 = Convert.toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422(json);
//   const deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500 = Convert.toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500(json);
//   const deleteApisAPIIDVersionsVersionIDResponse400 = Convert.toDeleteApisAPIIDVersionsVersionIDResponse400(json);
//   const deleteApisAPIIDVersionsVersionIDResponse401 = Convert.toDeleteApisAPIIDVersionsVersionIDResponse401(json);
//   const deleteApisAPIIDVersionsVersionIDResponse403 = Convert.toDeleteApisAPIIDVersionsVersionIDResponse403(json);
//   const deleteApisAPIIDVersionsVersionIDResponse404 = Convert.toDeleteApisAPIIDVersionsVersionIDResponse404(json);
//   const deleteApisAPIIDVersionsVersionIDResponse500 = Convert.toDeleteApisAPIIDVersionsVersionIDResponse500(json);
//   const deleteCollectionsCollectionIDFoldersFolderIDResponse = Convert.toDeleteCollectionsCollectionIDFoldersFolderIDResponse(json);
//   const deleteCollectionsCollectionIDFoldersFolderIDResponse401 = Convert.toDeleteCollectionsCollectionIDFoldersFolderIDResponse401(json);
//   const deleteCollectionsCollectionIDFoldersFolderIDResponse404 = Convert.toDeleteCollectionsCollectionIDFoldersFolderIDResponse404(json);
//   const deleteCollectionsCollectionIDFoldersFolderIDResponse500 = Convert.toDeleteCollectionsCollectionIDFoldersFolderIDResponse500(json);
//   const deleteCollectionsCollectionIDRequestsRequestIDResponse = Convert.toDeleteCollectionsCollectionIDRequestsRequestIDResponse(json);
//   const deleteCollectionsCollectionIDRequestsRequestIDResponse401 = Convert.toDeleteCollectionsCollectionIDRequestsRequestIDResponse401(json);
//   const deleteCollectionsCollectionIDRequestsRequestIDResponse404 = Convert.toDeleteCollectionsCollectionIDRequestsRequestIDResponse404(json);
//   const deleteCollectionsCollectionIDRequestsRequestIDResponse500 = Convert.toDeleteCollectionsCollectionIDRequestsRequestIDResponse500(json);
//   const deleteCollectionsCollectionIDResponse = Convert.toDeleteCollectionsCollectionIDResponse(json);
//   const deleteCollectionsCollectionIDResponse401 = Convert.toDeleteCollectionsCollectionIDResponse401(json);
//   const deleteCollectionsCollectionIDResponse404 = Convert.toDeleteCollectionsCollectionIDResponse404(json);
//   const deleteCollectionsCollectionIDResponse429 = Convert.toDeleteCollectionsCollectionIDResponse429(json);
//   const deleteCollectionsCollectionIDResponse500 = Convert.toDeleteCollectionsCollectionIDResponse500(json);
//   const deleteCollectionsCollectionIDResponsesResponseIDResponse = Convert.toDeleteCollectionsCollectionIDResponsesResponseIDResponse(json);
//   const deleteCollectionsCollectionIDResponsesResponseIDResponse401 = Convert.toDeleteCollectionsCollectionIDResponsesResponseIDResponse401(json);
//   const deleteCollectionsCollectionIDResponsesResponseIDResponse404 = Convert.toDeleteCollectionsCollectionIDResponsesResponseIDResponse404(json);
//   const deleteCollectionsCollectionIDResponsesResponseIDResponse500 = Convert.toDeleteCollectionsCollectionIDResponsesResponseIDResponse500(json);
//   const deleteEnvironmentsEnvironmentIDResponse = Convert.toDeleteEnvironmentsEnvironmentIDResponse(json);
//   const deleteEnvironmentsEnvironmentIDResponse401 = Convert.toDeleteEnvironmentsEnvironmentIDResponse401(json);
//   const deleteEnvironmentsEnvironmentIDResponse404 = Convert.toDeleteEnvironmentsEnvironmentIDResponse404(json);
//   const deleteEnvironmentsEnvironmentIDResponse429 = Convert.toDeleteEnvironmentsEnvironmentIDResponse429(json);
//   const deleteEnvironmentsEnvironmentIDResponse500 = Convert.toDeleteEnvironmentsEnvironmentIDResponse500(json);
//   const deleteMocksMockIDResponse = Convert.toDeleteMocksMockIDResponse(json);
//   const deleteMocksMockIDResponse400 = Convert.toDeleteMocksMockIDResponse400(json);
//   const deleteMocksMockIDResponse401 = Convert.toDeleteMocksMockIDResponse401(json);
//   const deleteMocksMockIDResponse404 = Convert.toDeleteMocksMockIDResponse404(json);
//   const deleteMocksMockIDResponse429 = Convert.toDeleteMocksMockIDResponse429(json);
//   const deleteMocksMockIDResponse500 = Convert.toDeleteMocksMockIDResponse500(json);
//   const deleteMocksMockIDServerResponsesServerResponseIDResponse = Convert.toDeleteMocksMockIDServerResponsesServerResponseIDResponse(json);
//   const deleteMocksMockIDServerResponsesServerResponseIDResponse400 = Convert.toDeleteMocksMockIDServerResponsesServerResponseIDResponse400(json);
//   const deleteMocksMockIDServerResponsesServerResponseIDResponse401 = Convert.toDeleteMocksMockIDServerResponsesServerResponseIDResponse401(json);
//   const deleteMocksMockIDServerResponsesServerResponseIDResponse404 = Convert.toDeleteMocksMockIDServerResponsesServerResponseIDResponse404(json);
//   const deleteMocksMockIDServerResponsesServerResponseIDResponse429 = Convert.toDeleteMocksMockIDServerResponsesServerResponseIDResponse429(json);
//   const deleteMocksMockIDServerResponsesServerResponseIDResponse500 = Convert.toDeleteMocksMockIDServerResponsesServerResponseIDResponse500(json);
//   const deleteMocksMockIDUnpublishResponse = Convert.toDeleteMocksMockIDUnpublishResponse(json);
//   const deleteMocksMockIDUnpublishResponse400 = Convert.toDeleteMocksMockIDUnpublishResponse400(json);
//   const deleteMocksMockIDUnpublishResponse401 = Convert.toDeleteMocksMockIDUnpublishResponse401(json);
//   const deleteMocksMockIDUnpublishResponse404 = Convert.toDeleteMocksMockIDUnpublishResponse404(json);
//   const deleteMocksMockIDUnpublishResponse429 = Convert.toDeleteMocksMockIDUnpublishResponse429(json);
//   const deleteMocksMockIDUnpublishResponse500 = Convert.toDeleteMocksMockIDUnpublishResponse500(json);
//   const deleteMonitorsMonitorIDResponse = Convert.toDeleteMonitorsMonitorIDResponse(json);
//   const deleteMonitorsMonitorIDResponse400 = Convert.toDeleteMonitorsMonitorIDResponse400(json);
//   const deleteMonitorsMonitorIDResponse401 = Convert.toDeleteMonitorsMonitorIDResponse401(json);
//   const deleteMonitorsMonitorIDResponse429 = Convert.toDeleteMonitorsMonitorIDResponse429(json);
//   const deleteMonitorsMonitorIDResponse500 = Convert.toDeleteMonitorsMonitorIDResponse500(json);
//   const deleteNetworkPrivateElementTypeElementIDResponse = Convert.toDeleteNetworkPrivateElementTypeElementIDResponse(json);
//   const deleteNetworkPrivateElementTypeElementIDResponse400 = Convert.toDeleteNetworkPrivateElementTypeElementIDResponse400(json);
//   const deleteNetworkPrivateElementTypeElementIDResponse401 = Convert.toDeleteNetworkPrivateElementTypeElementIDResponse401(json);
//   const deleteNetworkPrivateElementTypeElementIDResponse403 = Convert.toDeleteNetworkPrivateElementTypeElementIDResponse403(json);
//   const deleteNetworkPrivateElementTypeElementIDResponse404 = Convert.toDeleteNetworkPrivateElementTypeElementIDResponse404(json);
//   const deleteNetworkPrivateElementTypeElementIDResponse429 = Convert.toDeleteNetworkPrivateElementTypeElementIDResponse429(json);
//   const deleteNetworkPrivateElementTypeElementIDResponse500 = Convert.toDeleteNetworkPrivateElementTypeElementIDResponse500(json);
//   const deleteScimV2GroupsGroupIDResponse400 = Convert.toDeleteScimV2GroupsGroupIDResponse400(json);
//   const deleteScimV2GroupsGroupIDResponse401 = Convert.toDeleteScimV2GroupsGroupIDResponse401(json);
//   const deleteScimV2GroupsGroupIDResponse403 = Convert.toDeleteScimV2GroupsGroupIDResponse403(json);
//   const deleteScimV2GroupsGroupIDResponse404 = Convert.toDeleteScimV2GroupsGroupIDResponse404(json);
//   const deleteScimV2GroupsGroupIDResponse429 = Convert.toDeleteScimV2GroupsGroupIDResponse429(json);
//   const deleteScimV2GroupsGroupIDResponse500 = Convert.toDeleteScimV2GroupsGroupIDResponse500(json);
//   const deleteWorkspacesWorkspaceIDResponse = Convert.toDeleteWorkspacesWorkspaceIDResponse(json);
//   const deleteWorkspacesWorkspaceIDResponse400 = Convert.toDeleteWorkspacesWorkspaceIDResponse400(json);
//   const deleteWorkspacesWorkspaceIDResponse401 = Convert.toDeleteWorkspacesWorkspaceIDResponse401(json);
//   const deleteWorkspacesWorkspaceIDResponse429 = Convert.toDeleteWorkspacesWorkspaceIDResponse429(json);
//   const deleteWorkspacesWorkspaceIDResponse500 = Convert.toDeleteWorkspacesWorkspaceIDResponse500(json);
//   const getApisAPIIDCollectionsCollectionIDResponse = Convert.toGetApisAPIIDCollectionsCollectionIDResponse(json);
//   const getApisAPIIDCollectionsCollectionIDResponse400 = Convert.toGetApisAPIIDCollectionsCollectionIDResponse400(json);
//   const getApisAPIIDCollectionsCollectionIDResponse401 = Convert.toGetApisAPIIDCollectionsCollectionIDResponse401(json);
//   const getApisAPIIDCollectionsCollectionIDResponse403 = Convert.toGetApisAPIIDCollectionsCollectionIDResponse403(json);
//   const getApisAPIIDCollectionsCollectionIDResponse404 = Convert.toGetApisAPIIDCollectionsCollectionIDResponse404(json);
//   const getApisAPIIDCollectionsCollectionIDResponse500 = Convert.toGetApisAPIIDCollectionsCollectionIDResponse500(json);
//   const getApisAPIIDResponse401 = Convert.toGetApisAPIIDResponse401(json);
//   const getApisAPIIDResponse404 = Convert.toGetApisAPIIDResponse404(json);
//   const getApisAPIIDResponse422 = Convert.toGetApisAPIIDResponse422(json);
//   const getApisAPIIDResponse500 = Convert.toGetApisAPIIDResponse500(json);
//   const getApisAPIIDSchemasSchemaIDFilesFilePathResponse = Convert.toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse(json);
//   const getApisAPIIDSchemasSchemaIDFilesFilePathResponse400 = Convert.toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse400(json);
//   const getApisAPIIDSchemasSchemaIDFilesFilePathResponse401 = Convert.toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse401(json);
//   const getApisAPIIDSchemasSchemaIDFilesFilePathResponse404 = Convert.toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse404(json);
//   const getApisAPIIDSchemasSchemaIDFilesFilePathResponse422 = Convert.toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse422(json);
//   const getApisAPIIDSchemasSchemaIDFilesFilePathResponse500 = Convert.toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse500(json);
//   const getApisAPIIDSchemasSchemaIDFilesResponse = Convert.toGetApisAPIIDSchemasSchemaIDFilesResponse(json);
//   const getApisAPIIDSchemasSchemaIDFilesResponse400 = Convert.toGetApisAPIIDSchemasSchemaIDFilesResponse400(json);
//   const getApisAPIIDSchemasSchemaIDFilesResponse401 = Convert.toGetApisAPIIDSchemasSchemaIDFilesResponse401(json);
//   const getApisAPIIDSchemasSchemaIDFilesResponse404 = Convert.toGetApisAPIIDSchemasSchemaIDFilesResponse404(json);
//   const getApisAPIIDSchemasSchemaIDFilesResponse422 = Convert.toGetApisAPIIDSchemasSchemaIDFilesResponse422(json);
//   const getApisAPIIDSchemasSchemaIDFilesResponse500 = Convert.toGetApisAPIIDSchemasSchemaIDFilesResponse500(json);
//   const getApisAPIIDSchemasSchemaIDResponse400 = Convert.toGetApisAPIIDSchemasSchemaIDResponse400(json);
//   const getApisAPIIDSchemasSchemaIDResponse401 = Convert.toGetApisAPIIDSchemasSchemaIDResponse401(json);
//   const getApisAPIIDSchemasSchemaIDResponse403 = Convert.toGetApisAPIIDSchemasSchemaIDResponse403(json);
//   const getApisAPIIDSchemasSchemaIDResponse404 = Convert.toGetApisAPIIDSchemasSchemaIDResponse404(json);
//   const getApisAPIIDSchemasSchemaIDResponse422 = Convert.toGetApisAPIIDSchemasSchemaIDResponse422(json);
//   const getApisAPIIDSchemasSchemaIDResponse500 = Convert.toGetApisAPIIDSchemasSchemaIDResponse500(json);
//   const getApisAPIIDTagsResponse = Convert.toGetApisAPIIDTagsResponse(json);
//   const getApisAPIIDTagsResponse401 = Convert.toGetApisAPIIDTagsResponse401(json);
//   const getApisAPIIDTagsResponse403 = Convert.toGetApisAPIIDTagsResponse403(json);
//   const getApisAPIIDTagsResponse404 = Convert.toGetApisAPIIDTagsResponse404(json);
//   const getApisAPIIDTagsResponse500 = Convert.toGetApisAPIIDTagsResponse500(json);
//   const getApisAPIIDTasksTaskIDResponse = Convert.toGetApisAPIIDTasksTaskIDResponse(json);
//   const getApisAPIIDTasksTaskIDResponse400 = Convert.toGetApisAPIIDTasksTaskIDResponse400(json);
//   const getApisAPIIDTasksTaskIDResponse401 = Convert.toGetApisAPIIDTasksTaskIDResponse401(json);
//   const getApisAPIIDTasksTaskIDResponse403 = Convert.toGetApisAPIIDTasksTaskIDResponse403(json);
//   const getApisAPIIDTasksTaskIDResponse404 = Convert.toGetApisAPIIDTasksTaskIDResponse404(json);
//   const getApisAPIIDVersionsResponse = Convert.toGetApisAPIIDVersionsResponse(json);
//   const getApisAPIIDVersionsResponse401 = Convert.toGetApisAPIIDVersionsResponse401(json);
//   const getApisAPIIDVersionsResponse404 = Convert.toGetApisAPIIDVersionsResponse404(json);
//   const getApisAPIIDVersionsResponse422 = Convert.toGetApisAPIIDVersionsResponse422(json);
//   const getApisAPIIDVersionsResponse500 = Convert.toGetApisAPIIDVersionsResponse500(json);
//   const getApisAPIIDVersionsVersionIDResponse = Convert.toGetApisAPIIDVersionsVersionIDResponse(json);
//   const getApisAPIIDVersionsVersionIDResponse401 = Convert.toGetApisAPIIDVersionsVersionIDResponse401(json);
//   const getApisAPIIDVersionsVersionIDResponse404 = Convert.toGetApisAPIIDVersionsVersionIDResponse404(json);
//   const getApisAPIIDVersionsVersionIDResponse500 = Convert.toGetApisAPIIDVersionsVersionIDResponse500(json);
//   const getApisResponse = Convert.toGetApisResponse(json);
//   const getApisResponse401 = Convert.toGetApisResponse401(json);
//   const getApisResponse404 = Convert.toGetApisResponse404(json);
//   const getApisResponse422 = Convert.toGetApisResponse422(json);
//   const getApisResponse500 = Convert.toGetApisResponse500(json);
//   const getAuditLogsResponse = Convert.toGetAuditLogsResponse(json);
//   const getAuditLogsResponse401 = Convert.toGetAuditLogsResponse401(json);
//   const getAuditLogsResponse429 = Convert.toGetAuditLogsResponse429(json);
//   const getAuditLogsResponse500 = Convert.toGetAuditLogsResponse500(json);
//   const getCollectionsCollectionIDFoldersFolderIDResponse = Convert.toGetCollectionsCollectionIDFoldersFolderIDResponse(json);
//   const getCollectionsCollectionIDFoldersFolderIDResponse401 = Convert.toGetCollectionsCollectionIDFoldersFolderIDResponse401(json);
//   const getCollectionsCollectionIDFoldersFolderIDResponse404 = Convert.toGetCollectionsCollectionIDFoldersFolderIDResponse404(json);
//   const getCollectionsCollectionIDFoldersFolderIDResponse500 = Convert.toGetCollectionsCollectionIDFoldersFolderIDResponse500(json);
//   const getCollectionsCollectionIDRequestsRequestIDResponse = Convert.toGetCollectionsCollectionIDRequestsRequestIDResponse(json);
//   const getCollectionsCollectionIDRequestsRequestIDResponse401 = Convert.toGetCollectionsCollectionIDRequestsRequestIDResponse401(json);
//   const getCollectionsCollectionIDRequestsRequestIDResponse404 = Convert.toGetCollectionsCollectionIDRequestsRequestIDResponse404(json);
//   const getCollectionsCollectionIDRequestsRequestIDResponse500 = Convert.toGetCollectionsCollectionIDRequestsRequestIDResponse500(json);
//   const getCollectionsCollectionIDResponse = Convert.toGetCollectionsCollectionIDResponse(json);
//   const getCollectionsCollectionIDResponse400 = Convert.toGetCollectionsCollectionIDResponse400(json);
//   const getCollectionsCollectionIDResponse401 = Convert.toGetCollectionsCollectionIDResponse401(json);
//   const getCollectionsCollectionIDResponse429 = Convert.toGetCollectionsCollectionIDResponse429(json);
//   const getCollectionsCollectionIDResponse500 = Convert.toGetCollectionsCollectionIDResponse500(json);
//   const getCollectionsCollectionIDResponsesResponseIDResponse = Convert.toGetCollectionsCollectionIDResponsesResponseIDResponse(json);
//   const getCollectionsCollectionIDResponsesResponseIDResponse401 = Convert.toGetCollectionsCollectionIDResponsesResponseIDResponse401(json);
//   const getCollectionsCollectionIDResponsesResponseIDResponse404 = Convert.toGetCollectionsCollectionIDResponsesResponseIDResponse404(json);
//   const getCollectionsCollectionIDResponsesResponseIDResponse500 = Convert.toGetCollectionsCollectionIDResponsesResponseIDResponse500(json);
//   const getCollectionsCollectionIDTagsResponse = Convert.toGetCollectionsCollectionIDTagsResponse(json);
//   const getCollectionsCollectionIDTagsResponse401 = Convert.toGetCollectionsCollectionIDTagsResponse401(json);
//   const getCollectionsCollectionIDTagsResponse403 = Convert.toGetCollectionsCollectionIDTagsResponse403(json);
//   const getCollectionsCollectionIDTagsResponse500 = Convert.toGetCollectionsCollectionIDTagsResponse500(json);
//   const getCollectionsCollectionIDTransformationsResponse = Convert.toGetCollectionsCollectionIDTransformationsResponse(json);
//   const getCollectionsCollectionIDTransformationsResponse401 = Convert.toGetCollectionsCollectionIDTransformationsResponse401(json);
//   const getCollectionsCollectionIDTransformationsResponse404 = Convert.toGetCollectionsCollectionIDTransformationsResponse404(json);
//   const getCollectionsCollectionIDTransformationsResponse500 = Convert.toGetCollectionsCollectionIDTransformationsResponse500(json);
//   const getCollectionsResponse = Convert.toGetCollectionsResponse(json);
//   const getCollectionsResponse401 = Convert.toGetCollectionsResponse401(json);
//   const getCollectionsResponse429 = Convert.toGetCollectionsResponse429(json);
//   const getCollectionsResponse500 = Convert.toGetCollectionsResponse500(json);
//   const getDetectedSecretsSecretIDLocationsResponse = Convert.toGetDetectedSecretsSecretIDLocationsResponse(json);
//   const getDetectedSecretsSecretIDLocationsResponse400 = Convert.toGetDetectedSecretsSecretIDLocationsResponse400(json);
//   const getDetectedSecretsSecretIDLocationsResponse401 = Convert.toGetDetectedSecretsSecretIDLocationsResponse401(json);
//   const getDetectedSecretsSecretIDLocationsResponse403 = Convert.toGetDetectedSecretsSecretIDLocationsResponse403(json);
//   const getDetectedSecretsSecretIDLocationsResponse500 = Convert.toGetDetectedSecretsSecretIDLocationsResponse500(json);
//   const getEnvironmentsEnvironmentIDResponse = Convert.toGetEnvironmentsEnvironmentIDResponse(json);
//   const getEnvironmentsEnvironmentIDResponse400 = Convert.toGetEnvironmentsEnvironmentIDResponse400(json);
//   const getEnvironmentsEnvironmentIDResponse401 = Convert.toGetEnvironmentsEnvironmentIDResponse401(json);
//   const getEnvironmentsEnvironmentIDResponse429 = Convert.toGetEnvironmentsEnvironmentIDResponse429(json);
//   const getEnvironmentsEnvironmentIDResponse500 = Convert.toGetEnvironmentsEnvironmentIDResponse500(json);
//   const getEnvironmentsResponse = Convert.toGetEnvironmentsResponse(json);
//   const getEnvironmentsResponse401 = Convert.toGetEnvironmentsResponse401(json);
//   const getEnvironmentsResponse404 = Convert.toGetEnvironmentsResponse404(json);
//   const getEnvironmentsResponse429 = Convert.toGetEnvironmentsResponse429(json);
//   const getEnvironmentsResponse500 = Convert.toGetEnvironmentsResponse500(json);
//   const getMeResponse = Convert.toGetMeResponse(json);
//   const getMeResponse401 = Convert.toGetMeResponse401(json);
//   const getMeResponse429 = Convert.toGetMeResponse429(json);
//   const getMeResponse500 = Convert.toGetMeResponse500(json);
//   const getMocksMockIDCallLogsResponse = Convert.toGetMocksMockIDCallLogsResponse(json);
//   const getMocksMockIDCallLogsResponse400 = Convert.toGetMocksMockIDCallLogsResponse400(json);
//   const getMocksMockIDCallLogsResponse401 = Convert.toGetMocksMockIDCallLogsResponse401(json);
//   const getMocksMockIDCallLogsResponse404 = Convert.toGetMocksMockIDCallLogsResponse404(json);
//   const getMocksMockIDCallLogsResponse429 = Convert.toGetMocksMockIDCallLogsResponse429(json);
//   const getMocksMockIDCallLogsResponse500 = Convert.toGetMocksMockIDCallLogsResponse500(json);
//   const getMocksMockIDResponse = Convert.toGetMocksMockIDResponse(json);
//   const getMocksMockIDResponse401 = Convert.toGetMocksMockIDResponse401(json);
//   const getMocksMockIDResponse404 = Convert.toGetMocksMockIDResponse404(json);
//   const getMocksMockIDResponse429 = Convert.toGetMocksMockIDResponse429(json);
//   const getMocksMockIDResponse500 = Convert.toGetMocksMockIDResponse500(json);
//   const getMocksMockIDServerResponsesResponse401 = Convert.toGetMocksMockIDServerResponsesResponse401(json);
//   const getMocksMockIDServerResponsesResponse404 = Convert.toGetMocksMockIDServerResponsesResponse404(json);
//   const getMocksMockIDServerResponsesResponse429 = Convert.toGetMocksMockIDServerResponsesResponse429(json);
//   const getMocksMockIDServerResponsesResponse500 = Convert.toGetMocksMockIDServerResponsesResponse500(json);
//   const getMocksMockIDServerResponsesResponseItem = Convert.toGetMocksMockIDServerResponsesResponseItem(json);
//   const getMocksMockIDServerResponsesServerResponseIDResponse400 = Convert.toGetMocksMockIDServerResponsesServerResponseIDResponse400(json);
//   const getMocksMockIDServerResponsesServerResponseIDResponse401 = Convert.toGetMocksMockIDServerResponsesServerResponseIDResponse401(json);
//   const getMocksMockIDServerResponsesServerResponseIDResponse404 = Convert.toGetMocksMockIDServerResponsesServerResponseIDResponse404(json);
//   const getMocksMockIDServerResponsesServerResponseIDResponse429 = Convert.toGetMocksMockIDServerResponsesServerResponseIDResponse429(json);
//   const getMocksMockIDServerResponsesServerResponseIDResponse500 = Convert.toGetMocksMockIDServerResponsesServerResponseIDResponse500(json);
//   const getMocksMockIDServerResponsesServerResponseIDResponseItem = Convert.toGetMocksMockIDServerResponsesServerResponseIDResponseItem(json);
//   const getMocksResponse = Convert.toGetMocksResponse(json);
//   const getMocksResponse401 = Convert.toGetMocksResponse401(json);
//   const getMocksResponse429 = Convert.toGetMocksResponse429(json);
//   const getMocksResponse500 = Convert.toGetMocksResponse500(json);
//   const getMonitorsMonitorIDResponse = Convert.toGetMonitorsMonitorIDResponse(json);
//   const getMonitorsMonitorIDResponse401 = Convert.toGetMonitorsMonitorIDResponse401(json);
//   const getMonitorsMonitorIDResponse404 = Convert.toGetMonitorsMonitorIDResponse404(json);
//   const getMonitorsMonitorIDResponse429 = Convert.toGetMonitorsMonitorIDResponse429(json);
//   const getMonitorsMonitorIDResponse500 = Convert.toGetMonitorsMonitorIDResponse500(json);
//   const getMonitorsResponse = Convert.toGetMonitorsResponse(json);
//   const getMonitorsResponse401 = Convert.toGetMonitorsResponse401(json);
//   const getMonitorsResponse429 = Convert.toGetMonitorsResponse429(json);
//   const getMonitorsResponse500 = Convert.toGetMonitorsResponse500(json);
//   const getNetworkPrivateNetworkEntityRequestAllResponse = Convert.toGetNetworkPrivateNetworkEntityRequestAllResponse(json);
//   const getNetworkPrivateNetworkEntityRequestAllResponse400 = Convert.toGetNetworkPrivateNetworkEntityRequestAllResponse400(json);
//   const getNetworkPrivateNetworkEntityRequestAllResponse401 = Convert.toGetNetworkPrivateNetworkEntityRequestAllResponse401(json);
//   const getNetworkPrivateNetworkEntityRequestAllResponse403 = Convert.toGetNetworkPrivateNetworkEntityRequestAllResponse403(json);
//   const getNetworkPrivateNetworkEntityRequestAllResponse429 = Convert.toGetNetworkPrivateNetworkEntityRequestAllResponse429(json);
//   const getNetworkPrivateNetworkEntityRequestAllResponse500 = Convert.toGetNetworkPrivateNetworkEntityRequestAllResponse500(json);
//   const getNetworkPrivateResponse = Convert.toGetNetworkPrivateResponse(json);
//   const getNetworkPrivateResponse401 = Convert.toGetNetworkPrivateResponse401(json);
//   const getNetworkPrivateResponse403 = Convert.toGetNetworkPrivateResponse403(json);
//   const getNetworkPrivateResponse429 = Convert.toGetNetworkPrivateResponse429(json);
//   const getNetworkPrivateResponse500 = Convert.toGetNetworkPrivateResponse500(json);
//   const getScimV2GroupsGroupIDResponse = Convert.toGetScimV2GroupsGroupIDResponse(json);
//   const getScimV2GroupsGroupIDResponse400 = Convert.toGetScimV2GroupsGroupIDResponse400(json);
//   const getScimV2GroupsGroupIDResponse401 = Convert.toGetScimV2GroupsGroupIDResponse401(json);
//   const getScimV2GroupsGroupIDResponse403 = Convert.toGetScimV2GroupsGroupIDResponse403(json);
//   const getScimV2GroupsGroupIDResponse404 = Convert.toGetScimV2GroupsGroupIDResponse404(json);
//   const getScimV2GroupsGroupIDResponse429 = Convert.toGetScimV2GroupsGroupIDResponse429(json);
//   const getScimV2GroupsGroupIDResponse500 = Convert.toGetScimV2GroupsGroupIDResponse500(json);
//   const getScimV2GroupsResponse = Convert.toGetScimV2GroupsResponse(json);
//   const getScimV2GroupsResponse400 = Convert.toGetScimV2GroupsResponse400(json);
//   const getScimV2GroupsResponse401 = Convert.toGetScimV2GroupsResponse401(json);
//   const getScimV2GroupsResponse403 = Convert.toGetScimV2GroupsResponse403(json);
//   const getScimV2GroupsResponse429 = Convert.toGetScimV2GroupsResponse429(json);
//   const getScimV2GroupsResponse500 = Convert.toGetScimV2GroupsResponse500(json);
//   const getScimV2ResourceTypesResponse401 = Convert.toGetScimV2ResourceTypesResponse401(json);
//   const getScimV2ResourceTypesResponse500 = Convert.toGetScimV2ResourceTypesResponse500(json);
//   const getScimV2ResourceTypesResponseItem = Convert.toGetScimV2ResourceTypesResponseItem(json);
//   const getScimV2ServiceProviderConfigResponse = Convert.toGetScimV2ServiceProviderConfigResponse(json);
//   const getScimV2ServiceProviderConfigResponse401 = Convert.toGetScimV2ServiceProviderConfigResponse401(json);
//   const getScimV2ServiceProviderConfigResponse500 = Convert.toGetScimV2ServiceProviderConfigResponse500(json);
//   const getScimV2UsersResponse = Convert.toGetScimV2UsersResponse(json);
//   const getScimV2UsersResponse400 = Convert.toGetScimV2UsersResponse400(json);
//   const getScimV2UsersResponse401 = Convert.toGetScimV2UsersResponse401(json);
//   const getScimV2UsersResponse403 = Convert.toGetScimV2UsersResponse403(json);
//   const getScimV2UsersResponse429 = Convert.toGetScimV2UsersResponse429(json);
//   const getScimV2UsersResponse500 = Convert.toGetScimV2UsersResponse500(json);
//   const getScimV2UsersUserIDResponse = Convert.toGetScimV2UsersUserIDResponse(json);
//   const getScimV2UsersUserIDResponse400 = Convert.toGetScimV2UsersUserIDResponse400(json);
//   const getScimV2UsersUserIDResponse401 = Convert.toGetScimV2UsersUserIDResponse401(json);
//   const getScimV2UsersUserIDResponse403 = Convert.toGetScimV2UsersUserIDResponse403(json);
//   const getScimV2UsersUserIDResponse404 = Convert.toGetScimV2UsersUserIDResponse404(json);
//   const getScimV2UsersUserIDResponse429 = Convert.toGetScimV2UsersUserIDResponse429(json);
//   const getScimV2UsersUserIDResponse500 = Convert.toGetScimV2UsersUserIDResponse500(json);
//   const getSecretTypesResponse = Convert.toGetSecretTypesResponse(json);
//   const getSecretTypesResponse401 = Convert.toGetSecretTypesResponse401(json);
//   const getSecretTypesResponse403 = Convert.toGetSecretTypesResponse403(json);
//   const getSecretTypesResponse500 = Convert.toGetSecretTypesResponse500(json);
//   const getTagsSlugEntitiesResponse = Convert.toGetTagsSlugEntitiesResponse(json);
//   const getTagsSlugEntitiesResponse400 = Convert.toGetTagsSlugEntitiesResponse400(json);
//   const getTagsSlugEntitiesResponse401 = Convert.toGetTagsSlugEntitiesResponse401(json);
//   const getTagsSlugEntitiesResponse403 = Convert.toGetTagsSlugEntitiesResponse403(json);
//   const getTagsSlugEntitiesResponse404 = Convert.toGetTagsSlugEntitiesResponse404(json);
//   const getTagsSlugEntitiesResponse500 = Convert.toGetTagsSlugEntitiesResponse500(json);
//   const getWorkspacesResponse = Convert.toGetWorkspacesResponse(json);
//   const getWorkspacesResponse401 = Convert.toGetWorkspacesResponse401(json);
//   const getWorkspacesResponse429 = Convert.toGetWorkspacesResponse429(json);
//   const getWorkspacesResponse500 = Convert.toGetWorkspacesResponse500(json);
//   const getWorkspacesWorkspaceIDGlobalVariablesResponse = Convert.toGetWorkspacesWorkspaceIDGlobalVariablesResponse(json);
//   const getWorkspacesWorkspaceIDGlobalVariablesResponse500 = Convert.toGetWorkspacesWorkspaceIDGlobalVariablesResponse500(json);
//   const getWorkspacesWorkspaceIDResponse = Convert.toGetWorkspacesWorkspaceIDResponse(json);
//   const getWorkspacesWorkspaceIDResponse401 = Convert.toGetWorkspacesWorkspaceIDResponse401(json);
//   const getWorkspacesWorkspaceIDResponse404 = Convert.toGetWorkspacesWorkspaceIDResponse404(json);
//   const getWorkspacesWorkspaceIDResponse429 = Convert.toGetWorkspacesWorkspaceIDResponse429(json);
//   const getWorkspacesWorkspaceIDResponse500 = Convert.toGetWorkspacesWorkspaceIDResponse500(json);
//   const getWorkspacesWorkspaceIDTagsResponse = Convert.toGetWorkspacesWorkspaceIDTagsResponse(json);
//   const getWorkspacesWorkspaceIDTagsResponse401 = Convert.toGetWorkspacesWorkspaceIDTagsResponse401(json);
//   const getWorkspacesWorkspaceIDTagsResponse403 = Convert.toGetWorkspacesWorkspaceIDTagsResponse403(json);
//   const getWorkspacesWorkspaceIDTagsResponse404 = Convert.toGetWorkspacesWorkspaceIDTagsResponse404(json);
//   const getWorkspacesWorkspaceIDTagsResponse500 = Convert.toGetWorkspacesWorkspaceIDTagsResponse500(json);
//   const pANElementCreated = Convert.toPANElementCreated(json);
//   const pANFolderCreated = Convert.toPANFolderCreated(json);
//   const patchCollectionsCollectionIDBody = Convert.toPatchCollectionsCollectionIDBody(json);
//   const patchCollectionsCollectionIDResponse = Convert.toPatchCollectionsCollectionIDResponse(json);
//   const patchCollectionsCollectionIDResponse400 = Convert.toPatchCollectionsCollectionIDResponse400(json);
//   const patchCollectionsCollectionIDResponse401 = Convert.toPatchCollectionsCollectionIDResponse401(json);
//   const patchCollectionsCollectionIDResponse403 = Convert.toPatchCollectionsCollectionIDResponse403(json);
//   const patchCollectionsCollectionIDResponse404 = Convert.toPatchCollectionsCollectionIDResponse404(json);
//   const patchCollectionsCollectionIDResponse429 = Convert.toPatchCollectionsCollectionIDResponse429(json);
//   const patchCollectionsCollectionIDResponse500 = Convert.toPatchCollectionsCollectionIDResponse500(json);
//   const patchScimV2GroupsGroupIDBody = Convert.toPatchScimV2GroupsGroupIDBody(json);
//   const patchScimV2GroupsGroupIDResponse = Convert.toPatchScimV2GroupsGroupIDResponse(json);
//   const patchScimV2GroupsGroupIDResponse400 = Convert.toPatchScimV2GroupsGroupIDResponse400(json);
//   const patchScimV2GroupsGroupIDResponse401 = Convert.toPatchScimV2GroupsGroupIDResponse401(json);
//   const patchScimV2GroupsGroupIDResponse403 = Convert.toPatchScimV2GroupsGroupIDResponse403(json);
//   const patchScimV2GroupsGroupIDResponse404 = Convert.toPatchScimV2GroupsGroupIDResponse404(json);
//   const patchScimV2GroupsGroupIDResponse429 = Convert.toPatchScimV2GroupsGroupIDResponse429(json);
//   const patchScimV2GroupsGroupIDResponse500 = Convert.toPatchScimV2GroupsGroupIDResponse500(json);
//   const patchScimV2UsersUserIDBody = Convert.toPatchScimV2UsersUserIDBody(json);
//   const patchScimV2UsersUserIDResponse = Convert.toPatchScimV2UsersUserIDResponse(json);
//   const patchScimV2UsersUserIDResponse400 = Convert.toPatchScimV2UsersUserIDResponse400(json);
//   const patchScimV2UsersUserIDResponse401 = Convert.toPatchScimV2UsersUserIDResponse401(json);
//   const patchScimV2UsersUserIDResponse403 = Convert.toPatchScimV2UsersUserIDResponse403(json);
//   const patchScimV2UsersUserIDResponse404 = Convert.toPatchScimV2UsersUserIDResponse404(json);
//   const patchScimV2UsersUserIDResponse429 = Convert.toPatchScimV2UsersUserIDResponse429(json);
//   const patchScimV2UsersUserIDResponse500 = Convert.toPatchScimV2UsersUserIDResponse500(json);
//   const postApisAPIIDCollectionsResponse = Convert.toPostApisAPIIDCollectionsResponse(json);
//   const postApisAPIIDCollectionsResponse401 = Convert.toPostApisAPIIDCollectionsResponse401(json);
//   const postApisAPIIDCollectionsResponse403 = Convert.toPostApisAPIIDCollectionsResponse403(json);
//   const postApisAPIIDCollectionsResponse404 = Convert.toPostApisAPIIDCollectionsResponse404(json);
//   const postApisAPIIDCollectionsResponse500 = Convert.toPostApisAPIIDCollectionsResponse500(json);
//   const postApisAPIIDSchemasBody = Convert.toPostApisAPIIDSchemasBody(json);
//   const postApisAPIIDSchemasResponse = Convert.toPostApisAPIIDSchemasResponse(json);
//   const postApisAPIIDSchemasResponse400 = Convert.toPostApisAPIIDSchemasResponse400(json);
//   const postApisAPIIDSchemasResponse401 = Convert.toPostApisAPIIDSchemasResponse401(json);
//   const postApisAPIIDSchemasResponse403 = Convert.toPostApisAPIIDSchemasResponse403(json);
//   const postApisAPIIDSchemasResponse404 = Convert.toPostApisAPIIDSchemasResponse404(json);
//   const postApisAPIIDSchemasResponse422 = Convert.toPostApisAPIIDSchemasResponse422(json);
//   const postApisAPIIDSchemasResponse500 = Convert.toPostApisAPIIDSchemasResponse500(json);
//   const postApisAPIIDVersionsResponse = Convert.toPostApisAPIIDVersionsResponse(json);
//   const postApisAPIIDVersionsResponse401 = Convert.toPostApisAPIIDVersionsResponse401(json);
//   const postApisAPIIDVersionsResponse403 = Convert.toPostApisAPIIDVersionsResponse403(json);
//   const postApisAPIIDVersionsResponse404 = Convert.toPostApisAPIIDVersionsResponse404(json);
//   const postApisAPIIDVersionsResponse422 = Convert.toPostApisAPIIDVersionsResponse422(json);
//   const postApisAPIIDVersionsResponse500 = Convert.toPostApisAPIIDVersionsResponse500(json);
//   const postApisBody = Convert.toPostApisBody(json);
//   const postApisResponse = Convert.toPostApisResponse(json);
//   const postApisResponse400 = Convert.toPostApisResponse400(json);
//   const postApisResponse401 = Convert.toPostApisResponse401(json);
//   const postApisResponse403 = Convert.toPostApisResponse403(json);
//   const postApisResponse404 = Convert.toPostApisResponse404(json);
//   const postApisResponse500 = Convert.toPostApisResponse500(json);
//   const postCollectionsBody = Convert.toPostCollectionsBody(json);
//   const postCollectionsCollectionIDFoldersBody = Convert.toPostCollectionsCollectionIDFoldersBody(json);
//   const postCollectionsCollectionIDFoldersResponse = Convert.toPostCollectionsCollectionIDFoldersResponse(json);
//   const postCollectionsCollectionIDFoldersResponse400 = Convert.toPostCollectionsCollectionIDFoldersResponse400(json);
//   const postCollectionsCollectionIDFoldersResponse401 = Convert.toPostCollectionsCollectionIDFoldersResponse401(json);
//   const postCollectionsCollectionIDFoldersResponse500 = Convert.toPostCollectionsCollectionIDFoldersResponse500(json);
//   const postCollectionsCollectionIDRequestsBody = Convert.toPostCollectionsCollectionIDRequestsBody(json);
//   const postCollectionsCollectionIDRequestsResponse = Convert.toPostCollectionsCollectionIDRequestsResponse(json);
//   const postCollectionsCollectionIDRequestsResponse400 = Convert.toPostCollectionsCollectionIDRequestsResponse400(json);
//   const postCollectionsCollectionIDRequestsResponse401 = Convert.toPostCollectionsCollectionIDRequestsResponse401(json);
//   const postCollectionsCollectionIDRequestsResponse500 = Convert.toPostCollectionsCollectionIDRequestsResponse500(json);
//   const postCollectionsCollectionIDResponsesBody = Convert.toPostCollectionsCollectionIDResponsesBody(json);
//   const postCollectionsCollectionIDResponsesResponse = Convert.toPostCollectionsCollectionIDResponsesResponse(json);
//   const postCollectionsCollectionIDResponsesResponse400 = Convert.toPostCollectionsCollectionIDResponsesResponse400(json);
//   const postCollectionsCollectionIDResponsesResponse401 = Convert.toPostCollectionsCollectionIDResponsesResponse401(json);
//   const postCollectionsCollectionIDResponsesResponse500 = Convert.toPostCollectionsCollectionIDResponsesResponse500(json);
//   const postCollectionsForkCollectionIDBody = Convert.toPostCollectionsForkCollectionIDBody(json);
//   const postCollectionsForkCollectionIDResponse = Convert.toPostCollectionsForkCollectionIDResponse(json);
//   const postCollectionsForkCollectionIDResponse401 = Convert.toPostCollectionsForkCollectionIDResponse401(json);
//   const postCollectionsForkCollectionIDResponse404 = Convert.toPostCollectionsForkCollectionIDResponse404(json);
//   const postCollectionsForkCollectionIDResponse429 = Convert.toPostCollectionsForkCollectionIDResponse429(json);
//   const postCollectionsForkCollectionIDResponse500 = Convert.toPostCollectionsForkCollectionIDResponse500(json);
//   const postCollectionsMergeBody = Convert.toPostCollectionsMergeBody(json);
//   const postCollectionsMergeResponse = Convert.toPostCollectionsMergeResponse(json);
//   const postCollectionsMergeResponse401 = Convert.toPostCollectionsMergeResponse401(json);
//   const postCollectionsMergeResponse404 = Convert.toPostCollectionsMergeResponse404(json);
//   const postCollectionsMergeResponse429 = Convert.toPostCollectionsMergeResponse429(json);
//   const postCollectionsMergeResponse500 = Convert.toPostCollectionsMergeResponse500(json);
//   const postCollectionsResponse = Convert.toPostCollectionsResponse(json);
//   const postCollectionsResponse400 = Convert.toPostCollectionsResponse400(json);
//   const postCollectionsResponse401 = Convert.toPostCollectionsResponse401(json);
//   const postCollectionsResponse429 = Convert.toPostCollectionsResponse429(json);
//   const postCollectionsResponse500 = Convert.toPostCollectionsResponse500(json);
//   const postDetectedSecretsQueriesBody = Convert.toPostDetectedSecretsQueriesBody(json);
//   const postDetectedSecretsQueriesResponse = Convert.toPostDetectedSecretsQueriesResponse(json);
//   const postDetectedSecretsQueriesResponse400 = Convert.toPostDetectedSecretsQueriesResponse400(json);
//   const postDetectedSecretsQueriesResponse401 = Convert.toPostDetectedSecretsQueriesResponse401(json);
//   const postDetectedSecretsQueriesResponse403 = Convert.toPostDetectedSecretsQueriesResponse403(json);
//   const postDetectedSecretsQueriesResponse500 = Convert.toPostDetectedSecretsQueriesResponse500(json);
//   const postEnvironmentsBody = Convert.toPostEnvironmentsBody(json);
//   const postEnvironmentsResponse = Convert.toPostEnvironmentsResponse(json);
//   const postEnvironmentsResponse400 = Convert.toPostEnvironmentsResponse400(json);
//   const postEnvironmentsResponse401 = Convert.toPostEnvironmentsResponse401(json);
//   const postEnvironmentsResponse403 = Convert.toPostEnvironmentsResponse403(json);
//   const postEnvironmentsResponse429 = Convert.toPostEnvironmentsResponse429(json);
//   const postEnvironmentsResponse500 = Convert.toPostEnvironmentsResponse500(json);
//   const postImportOpenapiResponse = Convert.toPostImportOpenapiResponse(json);
//   const postImportOpenapiResponse400 = Convert.toPostImportOpenapiResponse400(json);
//   const postImportOpenapiResponse401 = Convert.toPostImportOpenapiResponse401(json);
//   const postImportOpenapiResponse429 = Convert.toPostImportOpenapiResponse429(json);
//   const postImportOpenapiResponse500 = Convert.toPostImportOpenapiResponse500(json);
//   const postMocksBody = Convert.toPostMocksBody(json);
//   const postMocksMockIDPublishResponse = Convert.toPostMocksMockIDPublishResponse(json);
//   const postMocksMockIDPublishResponse400 = Convert.toPostMocksMockIDPublishResponse400(json);
//   const postMocksMockIDPublishResponse401 = Convert.toPostMocksMockIDPublishResponse401(json);
//   const postMocksMockIDPublishResponse404 = Convert.toPostMocksMockIDPublishResponse404(json);
//   const postMocksMockIDPublishResponse429 = Convert.toPostMocksMockIDPublishResponse429(json);
//   const postMocksMockIDPublishResponse500 = Convert.toPostMocksMockIDPublishResponse500(json);
//   const postMocksMockIDServerResponsesBody = Convert.toPostMocksMockIDServerResponsesBody(json);
//   const postMocksMockIDServerResponsesResponse400 = Convert.toPostMocksMockIDServerResponsesResponse400(json);
//   const postMocksMockIDServerResponsesResponse401 = Convert.toPostMocksMockIDServerResponsesResponse401(json);
//   const postMocksMockIDServerResponsesResponse429 = Convert.toPostMocksMockIDServerResponsesResponse429(json);
//   const postMocksMockIDServerResponsesResponse500 = Convert.toPostMocksMockIDServerResponsesResponse500(json);
//   const postMocksMockIDServerResponsesResponseItem = Convert.toPostMocksMockIDServerResponsesResponseItem(json);
//   const postMocksResponse = Convert.toPostMocksResponse(json);
//   const postMocksResponse400 = Convert.toPostMocksResponse400(json);
//   const postMocksResponse401 = Convert.toPostMocksResponse401(json);
//   const postMocksResponse429 = Convert.toPostMocksResponse429(json);
//   const postMocksResponse500 = Convert.toPostMocksResponse500(json);
//   const postMonitorsBody = Convert.toPostMonitorsBody(json);
//   const postMonitorsMonitorIDRunResponse = Convert.toPostMonitorsMonitorIDRunResponse(json);
//   const postMonitorsMonitorIDRunResponse401 = Convert.toPostMonitorsMonitorIDRunResponse401(json);
//   const postMonitorsMonitorIDRunResponse429 = Convert.toPostMonitorsMonitorIDRunResponse429(json);
//   const postMonitorsMonitorIDRunResponse500 = Convert.toPostMonitorsMonitorIDRunResponse500(json);
//   const postMonitorsResponse = Convert.toPostMonitorsResponse(json);
//   const postMonitorsResponse400 = Convert.toPostMonitorsResponse400(json);
//   const postMonitorsResponse401 = Convert.toPostMonitorsResponse401(json);
//   const postMonitorsResponse403 = Convert.toPostMonitorsResponse403(json);
//   const postMonitorsResponse429 = Convert.toPostMonitorsResponse429(json);
//   const postMonitorsResponse500 = Convert.toPostMonitorsResponse500(json);
//   const postNetworkPrivateResponse401 = Convert.toPostNetworkPrivateResponse401(json);
//   const postNetworkPrivateResponse403 = Convert.toPostNetworkPrivateResponse403(json);
//   const postNetworkPrivateResponse404 = Convert.toPostNetworkPrivateResponse404(json);
//   const postNetworkPrivateResponse429 = Convert.toPostNetworkPrivateResponse429(json);
//   const postNetworkPrivateResponse500 = Convert.toPostNetworkPrivateResponse500(json);
//   const postScimV2GroupsBody = Convert.toPostScimV2GroupsBody(json);
//   const postScimV2GroupsResponse = Convert.toPostScimV2GroupsResponse(json);
//   const postScimV2GroupsResponse400 = Convert.toPostScimV2GroupsResponse400(json);
//   const postScimV2GroupsResponse401 = Convert.toPostScimV2GroupsResponse401(json);
//   const postScimV2GroupsResponse403 = Convert.toPostScimV2GroupsResponse403(json);
//   const postScimV2GroupsResponse409 = Convert.toPostScimV2GroupsResponse409(json);
//   const postScimV2GroupsResponse429 = Convert.toPostScimV2GroupsResponse429(json);
//   const postScimV2GroupsResponse500 = Convert.toPostScimV2GroupsResponse500(json);
//   const postScimV2UsersBody = Convert.toPostScimV2UsersBody(json);
//   const postScimV2UsersResponse = Convert.toPostScimV2UsersResponse(json);
//   const postScimV2UsersResponse400 = Convert.toPostScimV2UsersResponse400(json);
//   const postScimV2UsersResponse401 = Convert.toPostScimV2UsersResponse401(json);
//   const postScimV2UsersResponse403 = Convert.toPostScimV2UsersResponse403(json);
//   const postScimV2UsersResponse409 = Convert.toPostScimV2UsersResponse409(json);
//   const postScimV2UsersResponse429 = Convert.toPostScimV2UsersResponse429(json);
//   const postScimV2UsersResponse500 = Convert.toPostScimV2UsersResponse500(json);
//   const postSecurityAPIValidationBody = Convert.toPostSecurityAPIValidationBody(json);
//   const postSecurityAPIValidationResponse = Convert.toPostSecurityAPIValidationResponse(json);
//   const postSecurityAPIValidationResponse400 = Convert.toPostSecurityAPIValidationResponse400(json);
//   const postSecurityAPIValidationResponse401 = Convert.toPostSecurityAPIValidationResponse401(json);
//   const postSecurityAPIValidationResponse429 = Convert.toPostSecurityAPIValidationResponse429(json);
//   const postSecurityAPIValidationResponse500 = Convert.toPostSecurityAPIValidationResponse500(json);
//   const postWebhooksBody = Convert.toPostWebhooksBody(json);
//   const postWebhooksResponse = Convert.toPostWebhooksResponse(json);
//   const postWebhooksResponse401 = Convert.toPostWebhooksResponse401(json);
//   const postWebhooksResponse429 = Convert.toPostWebhooksResponse429(json);
//   const postWebhooksResponse500 = Convert.toPostWebhooksResponse500(json);
//   const postWorkspacesBody = Convert.toPostWorkspacesBody(json);
//   const postWorkspacesResponse = Convert.toPostWorkspacesResponse(json);
//   const postWorkspacesResponse400 = Convert.toPostWorkspacesResponse400(json);
//   const postWorkspacesResponse401 = Convert.toPostWorkspacesResponse401(json);
//   const postWorkspacesResponse404 = Convert.toPostWorkspacesResponse404(json);
//   const postWorkspacesResponse429 = Convert.toPostWorkspacesResponse429(json);
//   const postWorkspacesResponse500 = Convert.toPostWorkspacesResponse500(json);
//   const putApisAPIIDBody = Convert.toPutApisAPIIDBody(json);
//   const putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse = Convert.toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse(json);
//   const putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400 = Convert.toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400(json);
//   const putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401 = Convert.toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401(json);
//   const putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403 = Convert.toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403(json);
//   const putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404 = Convert.toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404(json);
//   const putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422 = Convert.toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422(json);
//   const putApisAPIIDResponse = Convert.toPutApisAPIIDResponse(json);
//   const putApisAPIIDResponse401 = Convert.toPutApisAPIIDResponse401(json);
//   const putApisAPIIDResponse403 = Convert.toPutApisAPIIDResponse403(json);
//   const putApisAPIIDResponse404 = Convert.toPutApisAPIIDResponse404(json);
//   const putApisAPIIDResponse422 = Convert.toPutApisAPIIDResponse422(json);
//   const putApisAPIIDResponse500 = Convert.toPutApisAPIIDResponse500(json);
//   const putApisAPIIDSchemasSchemaIDFilesFilePathBody = Convert.toPutApisAPIIDSchemasSchemaIDFilesFilePathBody(json);
//   const putApisAPIIDSchemasSchemaIDFilesFilePathResponse = Convert.toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse(json);
//   const putApisAPIIDSchemasSchemaIDFilesFilePathResponse400 = Convert.toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse400(json);
//   const putApisAPIIDSchemasSchemaIDFilesFilePathResponse401 = Convert.toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse401(json);
//   const putApisAPIIDSchemasSchemaIDFilesFilePathResponse403 = Convert.toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse403(json);
//   const putApisAPIIDSchemasSchemaIDFilesFilePathResponse404 = Convert.toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse404(json);
//   const putApisAPIIDSchemasSchemaIDFilesFilePathResponse422 = Convert.toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse422(json);
//   const putApisAPIIDSchemasSchemaIDFilesFilePathResponse500 = Convert.toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse500(json);
//   const putApisAPIIDTagsBody = Convert.toPutApisAPIIDTagsBody(json);
//   const putApisAPIIDTagsResponse = Convert.toPutApisAPIIDTagsResponse(json);
//   const putApisAPIIDTagsResponse400 = Convert.toPutApisAPIIDTagsResponse400(json);
//   const putApisAPIIDTagsResponse401 = Convert.toPutApisAPIIDTagsResponse401(json);
//   const putApisAPIIDTagsResponse403 = Convert.toPutApisAPIIDTagsResponse403(json);
//   const putApisAPIIDTagsResponse500 = Convert.toPutApisAPIIDTagsResponse500(json);
//   const putApisAPIIDVersionsVersionIDBody = Convert.toPutApisAPIIDVersionsVersionIDBody(json);
//   const putApisAPIIDVersionsVersionIDResponse = Convert.toPutApisAPIIDVersionsVersionIDResponse(json);
//   const putApisAPIIDVersionsVersionIDResponse401 = Convert.toPutApisAPIIDVersionsVersionIDResponse401(json);
//   const putApisAPIIDVersionsVersionIDResponse403 = Convert.toPutApisAPIIDVersionsVersionIDResponse403(json);
//   const putApisAPIIDVersionsVersionIDResponse404 = Convert.toPutApisAPIIDVersionsVersionIDResponse404(json);
//   const putApisAPIIDVersionsVersionIDResponse500 = Convert.toPutApisAPIIDVersionsVersionIDResponse500(json);
//   const putCollectionsCollectionIDBody = Convert.toPutCollectionsCollectionIDBody(json);
//   const putCollectionsCollectionIDFoldersFolderIDBody = Convert.toPutCollectionsCollectionIDFoldersFolderIDBody(json);
//   const putCollectionsCollectionIDFoldersFolderIDResponse = Convert.toPutCollectionsCollectionIDFoldersFolderIDResponse(json);
//   const putCollectionsCollectionIDFoldersFolderIDResponse400 = Convert.toPutCollectionsCollectionIDFoldersFolderIDResponse400(json);
//   const putCollectionsCollectionIDFoldersFolderIDResponse401 = Convert.toPutCollectionsCollectionIDFoldersFolderIDResponse401(json);
//   const putCollectionsCollectionIDFoldersFolderIDResponse404 = Convert.toPutCollectionsCollectionIDFoldersFolderIDResponse404(json);
//   const putCollectionsCollectionIDFoldersFolderIDResponse500 = Convert.toPutCollectionsCollectionIDFoldersFolderIDResponse500(json);
//   const putCollectionsCollectionIDRequestsRequestIDBody = Convert.toPutCollectionsCollectionIDRequestsRequestIDBody(json);
//   const putCollectionsCollectionIDRequestsRequestIDResponse = Convert.toPutCollectionsCollectionIDRequestsRequestIDResponse(json);
//   const putCollectionsCollectionIDRequestsRequestIDResponse400 = Convert.toPutCollectionsCollectionIDRequestsRequestIDResponse400(json);
//   const putCollectionsCollectionIDRequestsRequestIDResponse401 = Convert.toPutCollectionsCollectionIDRequestsRequestIDResponse401(json);
//   const putCollectionsCollectionIDRequestsRequestIDResponse404 = Convert.toPutCollectionsCollectionIDRequestsRequestIDResponse404(json);
//   const putCollectionsCollectionIDRequestsRequestIDResponse500 = Convert.toPutCollectionsCollectionIDRequestsRequestIDResponse500(json);
//   const putCollectionsCollectionIDResponse = Convert.toPutCollectionsCollectionIDResponse(json);
//   const putCollectionsCollectionIDResponse400 = Convert.toPutCollectionsCollectionIDResponse400(json);
//   const putCollectionsCollectionIDResponse401 = Convert.toPutCollectionsCollectionIDResponse401(json);
//   const putCollectionsCollectionIDResponse403 = Convert.toPutCollectionsCollectionIDResponse403(json);
//   const putCollectionsCollectionIDResponse404 = Convert.toPutCollectionsCollectionIDResponse404(json);
//   const putCollectionsCollectionIDResponse429 = Convert.toPutCollectionsCollectionIDResponse429(json);
//   const putCollectionsCollectionIDResponse500 = Convert.toPutCollectionsCollectionIDResponse500(json);
//   const putCollectionsCollectionIDResponsesResponseIDBody = Convert.toPutCollectionsCollectionIDResponsesResponseIDBody(json);
//   const putCollectionsCollectionIDResponsesResponseIDResponse = Convert.toPutCollectionsCollectionIDResponsesResponseIDResponse(json);
//   const putCollectionsCollectionIDResponsesResponseIDResponse400 = Convert.toPutCollectionsCollectionIDResponsesResponseIDResponse400(json);
//   const putCollectionsCollectionIDResponsesResponseIDResponse401 = Convert.toPutCollectionsCollectionIDResponsesResponseIDResponse401(json);
//   const putCollectionsCollectionIDResponsesResponseIDResponse404 = Convert.toPutCollectionsCollectionIDResponsesResponseIDResponse404(json);
//   const putCollectionsCollectionIDResponsesResponseIDResponse500 = Convert.toPutCollectionsCollectionIDResponsesResponseIDResponse500(json);
//   const putCollectionsCollectionIDTagsBody = Convert.toPutCollectionsCollectionIDTagsBody(json);
//   const putCollectionsCollectionIDTagsResponse = Convert.toPutCollectionsCollectionIDTagsResponse(json);
//   const putCollectionsCollectionIDTagsResponse400 = Convert.toPutCollectionsCollectionIDTagsResponse400(json);
//   const putCollectionsCollectionIDTagsResponse401 = Convert.toPutCollectionsCollectionIDTagsResponse401(json);
//   const putCollectionsCollectionIDTagsResponse403 = Convert.toPutCollectionsCollectionIDTagsResponse403(json);
//   const putCollectionsCollectionIDTagsResponse404 = Convert.toPutCollectionsCollectionIDTagsResponse404(json);
//   const putCollectionsCollectionIDTagsResponse500 = Convert.toPutCollectionsCollectionIDTagsResponse500(json);
//   const putDetectedSecretsSecretIDBody = Convert.toPutDetectedSecretsSecretIDBody(json);
//   const putDetectedSecretsSecretIDResponse = Convert.toPutDetectedSecretsSecretIDResponse(json);
//   const putDetectedSecretsSecretIDResponse401 = Convert.toPutDetectedSecretsSecretIDResponse401(json);
//   const putDetectedSecretsSecretIDResponse403 = Convert.toPutDetectedSecretsSecretIDResponse403(json);
//   const putDetectedSecretsSecretIDResponse500 = Convert.toPutDetectedSecretsSecretIDResponse500(json);
//   const putEnvironmentsEnvironmentIDBody = Convert.toPutEnvironmentsEnvironmentIDBody(json);
//   const putEnvironmentsEnvironmentIDResponse = Convert.toPutEnvironmentsEnvironmentIDResponse(json);
//   const putEnvironmentsEnvironmentIDResponse400 = Convert.toPutEnvironmentsEnvironmentIDResponse400(json);
//   const putEnvironmentsEnvironmentIDResponse401 = Convert.toPutEnvironmentsEnvironmentIDResponse401(json);
//   const putEnvironmentsEnvironmentIDResponse429 = Convert.toPutEnvironmentsEnvironmentIDResponse429(json);
//   const putEnvironmentsEnvironmentIDResponse500 = Convert.toPutEnvironmentsEnvironmentIDResponse500(json);
//   const putMocksMockIDBody = Convert.toPutMocksMockIDBody(json);
//   const putMocksMockIDResponse = Convert.toPutMocksMockIDResponse(json);
//   const putMocksMockIDResponse401 = Convert.toPutMocksMockIDResponse401(json);
//   const putMocksMockIDResponse404 = Convert.toPutMocksMockIDResponse404(json);
//   const putMocksMockIDResponse429 = Convert.toPutMocksMockIDResponse429(json);
//   const putMocksMockIDResponse500 = Convert.toPutMocksMockIDResponse500(json);
//   const putMocksMockIDServerResponsesServerResponseIDBody = Convert.toPutMocksMockIDServerResponsesServerResponseIDBody(json);
//   const putMocksMockIDServerResponsesServerResponseIDResponse400 = Convert.toPutMocksMockIDServerResponsesServerResponseIDResponse400(json);
//   const putMocksMockIDServerResponsesServerResponseIDResponse401 = Convert.toPutMocksMockIDServerResponsesServerResponseIDResponse401(json);
//   const putMocksMockIDServerResponsesServerResponseIDResponse429 = Convert.toPutMocksMockIDServerResponsesServerResponseIDResponse429(json);
//   const putMocksMockIDServerResponsesServerResponseIDResponse500 = Convert.toPutMocksMockIDServerResponsesServerResponseIDResponse500(json);
//   const putMocksMockIDServerResponsesServerResponseIDResponseItem = Convert.toPutMocksMockIDServerResponsesServerResponseIDResponseItem(json);
//   const putMonitorsMonitorIDBody = Convert.toPutMonitorsMonitorIDBody(json);
//   const putMonitorsMonitorIDResponse = Convert.toPutMonitorsMonitorIDResponse(json);
//   const putMonitorsMonitorIDResponse401 = Convert.toPutMonitorsMonitorIDResponse401(json);
//   const putMonitorsMonitorIDResponse404 = Convert.toPutMonitorsMonitorIDResponse404(json);
//   const putMonitorsMonitorIDResponse429 = Convert.toPutMonitorsMonitorIDResponse429(json);
//   const putMonitorsMonitorIDResponse500 = Convert.toPutMonitorsMonitorIDResponse500(json);
//   const putNetworkPrivateElementTypeElementIDResponse401 = Convert.toPutNetworkPrivateElementTypeElementIDResponse401(json);
//   const putNetworkPrivateElementTypeElementIDResponse403 = Convert.toPutNetworkPrivateElementTypeElementIDResponse403(json);
//   const putNetworkPrivateElementTypeElementIDResponse404 = Convert.toPutNetworkPrivateElementTypeElementIDResponse404(json);
//   const putNetworkPrivateElementTypeElementIDResponse429 = Convert.toPutNetworkPrivateElementTypeElementIDResponse429(json);
//   const putNetworkPrivateElementTypeElementIDResponse500 = Convert.toPutNetworkPrivateElementTypeElementIDResponse500(json);
//   const putNetworkPrivateNetworkEntityRequestRequestIDBody = Convert.toPutNetworkPrivateNetworkEntityRequestRequestIDBody(json);
//   const putNetworkPrivateNetworkEntityRequestRequestIDResponse = Convert.toPutNetworkPrivateNetworkEntityRequestRequestIDResponse(json);
//   const putNetworkPrivateNetworkEntityRequestRequestIDResponse400 = Convert.toPutNetworkPrivateNetworkEntityRequestRequestIDResponse400(json);
//   const putNetworkPrivateNetworkEntityRequestRequestIDResponse401 = Convert.toPutNetworkPrivateNetworkEntityRequestRequestIDResponse401(json);
//   const putNetworkPrivateNetworkEntityRequestRequestIDResponse403 = Convert.toPutNetworkPrivateNetworkEntityRequestRequestIDResponse403(json);
//   const putNetworkPrivateNetworkEntityRequestRequestIDResponse429 = Convert.toPutNetworkPrivateNetworkEntityRequestRequestIDResponse429(json);
//   const putNetworkPrivateNetworkEntityRequestRequestIDResponse500 = Convert.toPutNetworkPrivateNetworkEntityRequestRequestIDResponse500(json);
//   const putScimV2UsersUserIDBody = Convert.toPutScimV2UsersUserIDBody(json);
//   const putScimV2UsersUserIDResponse = Convert.toPutScimV2UsersUserIDResponse(json);
//   const putScimV2UsersUserIDResponse400 = Convert.toPutScimV2UsersUserIDResponse400(json);
//   const putScimV2UsersUserIDResponse401 = Convert.toPutScimV2UsersUserIDResponse401(json);
//   const putScimV2UsersUserIDResponse403 = Convert.toPutScimV2UsersUserIDResponse403(json);
//   const putScimV2UsersUserIDResponse404 = Convert.toPutScimV2UsersUserIDResponse404(json);
//   const putScimV2UsersUserIDResponse429 = Convert.toPutScimV2UsersUserIDResponse429(json);
//   const putScimV2UsersUserIDResponse500 = Convert.toPutScimV2UsersUserIDResponse500(json);
//   const putWorkspacesWorkspaceIDBody = Convert.toPutWorkspacesWorkspaceIDBody(json);
//   const putWorkspacesWorkspaceIDGlobalVariablesBody = Convert.toPutWorkspacesWorkspaceIDGlobalVariablesBody(json);
//   const putWorkspacesWorkspaceIDGlobalVariablesResponse = Convert.toPutWorkspacesWorkspaceIDGlobalVariablesResponse(json);
//   const putWorkspacesWorkspaceIDGlobalVariablesResponse500 = Convert.toPutWorkspacesWorkspaceIDGlobalVariablesResponse500(json);
//   const putWorkspacesWorkspaceIDResponse = Convert.toPutWorkspacesWorkspaceIDResponse(json);
//   const putWorkspacesWorkspaceIDResponse400 = Convert.toPutWorkspacesWorkspaceIDResponse400(json);
//   const putWorkspacesWorkspaceIDResponse403 = Convert.toPutWorkspacesWorkspaceIDResponse403(json);
//   const putWorkspacesWorkspaceIDResponse404 = Convert.toPutWorkspacesWorkspaceIDResponse404(json);
//   const putWorkspacesWorkspaceIDResponse429 = Convert.toPutWorkspacesWorkspaceIDResponse429(json);
//   const putWorkspacesWorkspaceIDResponse500 = Convert.toPutWorkspacesWorkspaceIDResponse500(json);
//   const putWorkspacesWorkspaceIDTagsBody = Convert.toPutWorkspacesWorkspaceIDTagsBody(json);
//   const putWorkspacesWorkspaceIDTagsResponse = Convert.toPutWorkspacesWorkspaceIDTagsResponse(json);
//   const putWorkspacesWorkspaceIDTagsResponse400 = Convert.toPutWorkspacesWorkspaceIDTagsResponse400(json);
//   const putWorkspacesWorkspaceIDTagsResponse401 = Convert.toPutWorkspacesWorkspaceIDTagsResponse401(json);
//   const putWorkspacesWorkspaceIDTagsResponse403 = Convert.toPutWorkspacesWorkspaceIDTagsResponse403(json);
//   const putWorkspacesWorkspaceIDTagsResponse404 = Convert.toPutWorkspacesWorkspaceIDTagsResponse404(json);
//   const putWorkspacesWorkspaceIDTagsResponse500 = Convert.toPutWorkspacesWorkspaceIDTagsResponse500(json);
//   const aPIBase = Convert.toAPIBase(json);
//   const aPIDetails = Convert.toAPIDetails(json);
//   const createAPIVersionGitLinked = Convert.toCreateAPIVersionGitLinked(json);
//   const createAPIVersionNonGitLinked = Convert.toCreateAPIVersionNonGitLinked(json);
//   const createAPISchema = Convert.toCreateAPISchema(json);
//   const createPANAPI = Convert.toCreatePANAPI(json);
//   const createPANCollection = Convert.toCreatePANCollection(json);
//   const createPANFolder = Convert.toCreatePANFolder(json);
//   const createPANWorkspace = Convert.toCreatePANWorkspace(json);
//   const createUpdateAPI = Convert.toCreateUpdateAPI(json);
//   const gitInfo = Convert.toGitInfo(json);
//   const globalVariable = Convert.toGlobalVariable(json);
//   const importExportFile = Convert.toImportExportFile(json);
//   const jSONSchema = Convert.toJSONSchema(json);
//   const jSONStringified = Convert.toJSONStringified(json);
//   const meta = Convert.toMeta(json);
//   const schemaFileBase = Convert.toSchemaFileBase(json);
//   const schemaFileContents = Convert.toSchemaFileContents(json);
//   const scimGroupResource = Convert.toScimGroupResource(json);
//   const scimUserResource = Convert.toScimUserResource(json);
//   const taskError = Convert.toTaskError(json);
//   const taskResource = Convert.toTaskResource(json);
//   const updatePANAPI = Convert.toUpdatePANAPI(json);
//   const updatePANCollection = Convert.toUpdatePANCollection(json);
//   const updatePANFolder = Convert.toUpdatePANFolder(json);
//   const updatePANWorkspace = Convert.toUpdatePANWorkspace(json);
//   const versionBase = Convert.toVersionBase(json);
//   const versionExtended = Convert.toVersionExtended(json);
//
// These functions will throw an error if the JSON doesn't
// match the expected interface, even if the JSON is valid.

export interface DeleteApisAPIIDResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDVersionsVersionIDResponse400 {
    /**
     * Information about the error.
     */
    error?: DeleteApisAPIIDVersionsVersionIDResponse400Error;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface DeleteApisAPIIDVersionsVersionIDResponse400Error {
    /**
     * Details about the error message.
     */
    message?: string;
    /**
     * The type of error.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDVersionsVersionIDResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDVersionsVersionIDResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDVersionsVersionIDResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteApisAPIIDVersionsVersionIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDFoldersFolderIDResponse {
    /**
     * The folder's information.
     */
    data?: DeleteCollectionsCollectionIDFoldersFolderIDResponseData;
    meta?: any;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    revision?: number;
    [property: string]: any;
}

/**
 * The folder's information.
 */
export interface DeleteCollectionsCollectionIDFoldersFolderIDResponseData {
    /**
     * The folder's ID.
     */
    id?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDFoldersFolderIDResponse401 {
    error?: DeleteCollectionsCollectionIDFoldersFolderIDResponse401Error;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDFoldersFolderIDResponse401Error {
    /**
     * Information about the error.
     */
    details?: DeleteCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails;
    /**
     * The error's message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface DeleteCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDFoldersFolderIDResponse404 {
    error?: DeleteCollectionsCollectionIDFoldersFolderIDResponse404Error;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDFoldersFolderIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: DeleteCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface DeleteCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDFoldersFolderIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDRequestsRequestIDResponse {
    /**
     * The request's information.
     */
    data?: DeleteCollectionsCollectionIDRequestsRequestIDResponseData;
    meta?: any;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    revision?: number;
    [property: string]: any;
}

/**
 * The request's information.
 */
export interface DeleteCollectionsCollectionIDRequestsRequestIDResponseData {
    /**
     * The request's ID.
     */
    id?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDRequestsRequestIDResponse401 {
    error?: DeleteCollectionsCollectionIDRequestsRequestIDResponse401Error;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDRequestsRequestIDResponse401Error {
    /**
     * Information about the error.
     */
    details?: DeleteCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails;
    /**
     * The error's message.
     */
    message?: string;
    /**
     * The error's name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface DeleteCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDRequestsRequestIDResponse404 {
    error?: DeleteCollectionsCollectionIDRequestsRequestIDResponse404Error;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDRequestsRequestIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: DeleteCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface DeleteCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDRequestsRequestIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponse {
    /**
     * Information about the deleted collection.
     */
    collection?: DeleteCollectionsCollectionIDResponseCollection;
    [property: string]: any;
}

/**
 * Information about the deleted collection.
 */
export interface DeleteCollectionsCollectionIDResponseCollection {
    /**
     * The deleted collection's ID.
     */
    id?: string;
    /**
     * The deleted collection's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponse401 {
    error?: DeleteCollectionsCollectionIDResponse401Error;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponse404 {
    error?: DeleteCollectionsCollectionIDResponse404Error;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: DeleteCollectionsCollectionIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface DeleteCollectionsCollectionIDResponse404ErrorDetails {
    /**
     * The collection ID.
     */
    id?: string;
    /**
     * The instance item.
     */
    item?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponse500 {
    error?: DeleteCollectionsCollectionIDResponse500Error;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponsesResponseIDResponse {
    /**
     * The response's information.
     */
    data?: DeleteCollectionsCollectionIDResponsesResponseIDResponseData;
    meta?: any;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    revision?: number;
    [property: string]: any;
}

/**
 * The response's information.
 */
export interface DeleteCollectionsCollectionIDResponsesResponseIDResponseData {
    /**
     * The response's ID.
     */
    id?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponsesResponseIDResponse401 {
    error?: DeleteCollectionsCollectionIDResponsesResponseIDResponse401Error;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponsesResponseIDResponse401Error {
    /**
     * Information about the error.
     */
    details?: DeleteCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface DeleteCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponsesResponseIDResponse404 {
    error?: DeleteCollectionsCollectionIDResponsesResponseIDResponse404Error;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponsesResponseIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: DeleteCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface DeleteCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface DeleteCollectionsCollectionIDResponsesResponseIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface DeleteEnvironmentsEnvironmentIDResponse {
    environment?: DeleteEnvironmentsEnvironmentIDResponseEnvironment;
    [property: string]: any;
}

export interface DeleteEnvironmentsEnvironmentIDResponseEnvironment {
    /**
     * The deleted environment's ID.
     */
    id?: string;
    /**
     * The deleted environment's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface DeleteEnvironmentsEnvironmentIDResponse401 {
    error?: DeleteEnvironmentsEnvironmentIDResponse401Error;
    [property: string]: any;
}

export interface DeleteEnvironmentsEnvironmentIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteEnvironmentsEnvironmentIDResponse404 {
    error?: DeleteEnvironmentsEnvironmentIDResponse404Error;
    [property: string]: any;
}

export interface DeleteEnvironmentsEnvironmentIDResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteEnvironmentsEnvironmentIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface DeleteEnvironmentsEnvironmentIDResponse500 {
    error?: DeleteEnvironmentsEnvironmentIDResponse500Error;
    [property: string]: any;
}

export interface DeleteEnvironmentsEnvironmentIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse {
    /**
     * Information about the mock server.
     */
    mock?: DeleteMocksMockIDResponseMock;
    [property: string]: any;
}

/**
 * Information about the mock server.
 */
export interface DeleteMocksMockIDResponseMock {
    /**
     * The mock server's ID.
     */
    id?: string;
    /**
     * The mock server's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse400 {
    error?: DeleteMocksMockIDResponse400Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse401 {
    error?: DeleteMocksMockIDResponse401Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse404 {
    error?: DeleteMocksMockIDResponse404Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse500 {
    error?: DeleteMocksMockIDResponse500Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the deleted server response.
 */
export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse {
    /**
     * The server response's body that returns when calling the mock server.
     */
    body?: string;
    /**
     * The date and time at which the server response was created.
     */
    createdAt?: string;
    /**
     * The user ID of the user who created the server response.
     */
    createdBy?: string;
    /**
     * The server response's request headers, such as Content-Type, Accept, encoding, and other
     * information.
     */
    headers?: DeleteMocksMockIDServerResponsesServerResponseIDResponseHeadersItem[];
    /**
     * The server response's ID.
     */
    id?: string;
    /**
     * The server response's body language type.
     */
    language?: DeleteMocksMockIDServerResponsesServerResponseIDResponseLanguage;
    /**
     * The server response's name.
     */
    name?: string;
    /**
     * The server response's 5xx HTTP response code.
     */
    statusCode?: number;
    /**
     * The user ID of the user who last updated the server response.
     */
    updatedBy?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponseHeadersItem {
    /**
     * The request header's key value.
     */
    key?: string;
    /**
     * The request header's value.
     */
    value?: string;
    [property: string]: any;
}

/**
 * The server response's body language type.
 */
export enum DeleteMocksMockIDServerResponsesServerResponseIDResponseLanguage {
    HTML = "html",
    JSON = "json",
    Javascript = "javascript",
    Text = "text",
    XML = "xml",
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse400 {
    error?: DeleteMocksMockIDServerResponsesServerResponseIDResponse400Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse401 {
    error?: DeleteMocksMockIDServerResponsesServerResponseIDResponse401Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse404 {
    error?: DeleteMocksMockIDServerResponsesServerResponseIDResponse404Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse500 {
    error?: DeleteMocksMockIDServerResponsesServerResponseIDResponse500Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDServerResponsesServerResponseIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse {
    mock?: DeleteMocksMockIDUnpublishResponseMock;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponseMock {
    /**
     * The mock server's ID.
     */
    id?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse400 {
    error?: DeleteMocksMockIDUnpublishResponse400Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse401 {
    error?: DeleteMocksMockIDUnpublishResponse401Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse404 {
    error?: DeleteMocksMockIDUnpublishResponse404Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse404Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse500 {
    error?: DeleteMocksMockIDUnpublishResponse500Error;
    [property: string]: any;
}

export interface DeleteMocksMockIDUnpublishResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMonitorsMonitorIDResponse {
    monitor?: DeleteMonitorsMonitorIDResponseMonitor;
    [property: string]: any;
}

export interface DeleteMonitorsMonitorIDResponseMonitor {
    /**
     * The monitor's ID.
     */
    id?: string;
    /**
     * The monitor's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface DeleteMonitorsMonitorIDResponse400 {
    error?: DeleteMonitorsMonitorIDResponse400Error;
    [property: string]: any;
}

export interface DeleteMonitorsMonitorIDResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMonitorsMonitorIDResponse401 {
    error?: DeleteMonitorsMonitorIDResponse401Error;
    [property: string]: any;
}

export interface DeleteMonitorsMonitorIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteMonitorsMonitorIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface DeleteMonitorsMonitorIDResponse500 {
    error?: DeleteMonitorsMonitorIDResponse500Error;
    [property: string]: any;
}

export interface DeleteMonitorsMonitorIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse {
    /**
     * The Private API Network element type. The name of the object is the element type.
     */
    elementType?: DeleteNetworkPrivateElementTypeElementIDResponseElementType;
    [property: string]: any;
}

/**
 * The Private API Network element type. The name of the object is the element type.
 */
export interface DeleteNetworkPrivateElementTypeElementIDResponseElementType {
    /**
     * The element's ID.
     */
    id?: string;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse400 {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse401 {
    error?: DeleteNetworkPrivateElementTypeElementIDResponse401Error;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse403 {
    error?: DeleteNetworkPrivateElementTypeElementIDResponse403Error;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse404 {
    error?: DeleteNetworkPrivateElementTypeElementIDResponse404Error;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse500 {
    error?: DeleteNetworkPrivateElementTypeElementIDResponse500Error;
    [property: string]: any;
}

export interface DeleteNetworkPrivateElementTypeElementIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteScimV2GroupsGroupIDResponse400 {
    detail?:  string;
    schemas?: string[];
    status?:  string;
    [property: string]: any;
}

export interface DeleteScimV2GroupsGroupIDResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface DeleteScimV2GroupsGroupIDResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface DeleteScimV2GroupsGroupIDResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface DeleteScimV2GroupsGroupIDResponse429 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: number;
    [property: string]: any;
}

export interface DeleteScimV2GroupsGroupIDResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface DeleteWorkspacesWorkspaceIDResponse {
    /**
     * Information about the deleted workspace.
     */
    workspace?: DeleteWorkspacesWorkspaceIDResponseWorkspace;
    [property: string]: any;
}

/**
 * Information about the deleted workspace.
 */
export interface DeleteWorkspacesWorkspaceIDResponseWorkspace {
    /**
     * The workspace's ID.
     */
    id?: string;
    [property: string]: any;
}

export interface DeleteWorkspacesWorkspaceIDResponse400 {
    error?: DeleteWorkspacesWorkspaceIDResponse400Error;
    [property: string]: any;
}

export interface DeleteWorkspacesWorkspaceIDResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteWorkspacesWorkspaceIDResponse401 {
    error?: DeleteWorkspacesWorkspaceIDResponse401Error;
    [property: string]: any;
}

export interface DeleteWorkspacesWorkspaceIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface DeleteWorkspacesWorkspaceIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface DeleteWorkspacesWorkspaceIDResponse500 {
    error?: DeleteWorkspacesWorkspaceIDResponse500Error;
    [property: string]: any;
}

export interface DeleteWorkspacesWorkspaceIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetApisAPIIDCollectionsCollectionIDResponse {
    /**
     * Information about the collection.
     */
    info?: GetApisAPIIDCollectionsCollectionIDResponseInfo;
    item?: GetApisAPIIDCollectionsCollectionIDResponseItemItem[];
    [property: string]: any;
}

/**
 * Information about the collection.
 */
export interface GetApisAPIIDCollectionsCollectionIDResponseInfo {
    /**
     * The collection's ID.
     */
    postmanID?: string;
    /**
     * The collection's description.
     */
    description?: string;
    /**
     * The collection's name.
     */
    name?: string;
    /**
     * The collection's JSON schema version.
     */
    schema?: Schema;
    /**
     * The date and time at which the collection was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

/**
 * The collection's JSON schema version.
 */
export enum Schema {
    HTTPSSchemaGetpostmanCOMJSONCollectionV210CollectionJSON = "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
}

/**
 * Information about the collection's contents. For a complete list of values, refer to the
 * [collection.json schema
 * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
 */
export interface GetApisAPIIDCollectionsCollectionIDResponseItemItem {
    /**
     * The collection's event information. For a complete list of values, refer to the
     * `definitions.event` entry in the [collection.json schema
     * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
     */
    event?: any[];
    /**
     * The collection item's ID.
     */
    id?: string;
    /**
     * The collection item's human-readable identifier.
     */
    name?:    string;
    request?: any;
    /**
     * The collection's response information. For a complete list of values, refer to the
     * `definitions.response` entry in the [collection.json schema
     * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
     */
    response?: any[];
    [property: string]: any;
}

export interface GetApisAPIIDCollectionsCollectionIDResponse400 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDCollectionsCollectionIDResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDCollectionsCollectionIDResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDCollectionsCollectionIDResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDCollectionsCollectionIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the schema file.
 */
export interface GetApisAPIIDSchemasSchemaIDFilesFilePathResponse {
    /**
     * The schema file's content.
     */
    content?: string;
    /**
     * The date and time at which the file was created.
     */
    createdAt?: string;
    /**
     * The user Id of the user that created the file.
     */
    createdBy?: string;
    /**
     * The schema file's ID.
     */
    id?: string;
    /**
     * The schema file's name.
     */
    name?: string;
    /**
     * The file system path to the schema file.
     */
    path?: string;
    /**
     * The date and time at which the file was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user that last updated the file.
     */
    updatedBy?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesFilePathResponse400 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesFilePathResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesFilePathResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesFilePathResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesFilePathResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the schema files and its meta information.
 */
export interface GetApisAPIIDSchemasSchemaIDFilesResponse {
    /**
     * The schema's files.
     */
    files?: GetApisAPIIDSchemasSchemaIDFilesResponseFilesItem[];
    /**
     * The schema's non-standard meta information.
     */
    meta?: GetApisAPIIDSchemasSchemaIDFilesResponseMeta;
    [property: string]: any;
}

/**
 * Information about the schema file.
 */
export interface GetApisAPIIDSchemasSchemaIDFilesResponseFilesItem {
    /**
     * The date and time at which the file was created.
     */
    createdAt?: string;
    /**
     * The user Id of the user that created the file.
     */
    createdBy?: number;
    /**
     * The schema file's ID.
     */
    id?: string;
    /**
     * The schema file's name.
     */
    name?: string;
    /**
     * The file system path to the schema file.
     */
    path?: string;
    /**
     * The date and time at which the file was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user that last updated the file.
     */
    updatedBy?: number;
    [property: string]: any;
}

/**
 * The schema's non-standard meta information.
 */
export interface GetApisAPIIDSchemasSchemaIDFilesResponseMeta {
    /**
     * The pointer to the next record in the set of paginated results.
     */
    nextCursor?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesResponse400 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDFilesResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDResponse400 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDSchemasSchemaIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDTagsResponse {
    /**
     * A list of associated tags.
     */
    tags?: GetApisAPIIDTagsResponseTagsItem[];
    [property: string]: any;
}

/**
 * Information about the tag.
 */
export interface GetApisAPIIDTagsResponseTagsItem {
    /**
     * The tag's ID within a team or individual (non-team) user scope.
     */
    slug?: string;
    [property: string]: any;
}

export interface GetApisAPIIDTagsResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDTagsResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDTagsResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDTagsResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDTasksTaskIDResponse {
    /**
     * The date and time at which the task was created.
     */
    createdAt?: string;
    details?:   any;
    /**
     * The task's ID.
     */
    id?: string;
    /**
     * The response's non-standard meta information.
     */
    meta?: GetApisAPIIDTasksTaskIDResponseMeta;
    /**
     * The task's current status.
     */
    status?: GetApisAPIIDTasksTaskIDResponseStatus;
    /**
     * The date and time at which the task was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface GetApisAPIIDTasksTaskIDResponseMeta {
    /**
     * The task's action.
     */
    action?: Action;
    /**
     * The model for which the task is performing the operation.
     */
    model?: Model;
    /**
     * The endpoint URL that created the task.
     */
    url?: string;
    [property: string]: any;
}

/**
 * The task's action.
 */
export enum Action {
    Create = "create",
    Update = "update",
}

/**
 * The model for which the task is performing the operation.
 */
export enum Model {
    APIVersion = "api-version",
    Collection = "collection",
}

/**
 * The task's current status.
 */
export enum GetApisAPIIDTasksTaskIDResponseStatus {
    Completed = "completed",
    Failed = "failed",
    Pending = "pending",
}

export interface GetApisAPIIDTasksTaskIDResponse400 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDTasksTaskIDResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDTasksTaskIDResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDTasksTaskIDResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the API's versions.
 */
export interface GetApisAPIIDVersionsResponse {
    /**
     * The response's meta information for paginated results.
     */
    meta?:     GetApisAPIIDVersionsResponseMeta;
    versions?: GetApisAPIIDVersionsResponseVersionsItem[];
    [property: string]: any;
}

/**
 * The response's meta information for paginated results.
 */
export interface GetApisAPIIDVersionsResponseMeta {
    /**
     * The maximum number of records in the paginated response.
     */
    limit?: number;
    /**
     * The Base64-encoded value that points to the next record in the results set.
     */
    nextCursor?: string;
    /**
     * The number of records that match the defined criteria.
     */
    total?: number;
    [property: string]: any;
}

/**
 * Information about the API version.
 */
export interface GetApisAPIIDVersionsResponseVersionsItem {
    /**
     * The date and time at which the version was created.
     */
    createdAt?: string;
    /**
     * The version's ID.
     */
    id?: string;
    /**
     * The version's name.
     */
    name?: string;
    /**
     * The version's release notes.
     */
    releaseNotes?: string;
    /**
     * The date and time at which the version was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsVersionIDResponse {
    /**
     * Information about the API version.
     */
    version?: GetApisAPIIDVersionsVersionIDResponseVersion;
    [property: string]: any;
}

/**
 * Information about the API version.
 */
export interface GetApisAPIIDVersionsVersionIDResponseVersion {
    collections?: GetApisAPIIDVersionsVersionIDResponseVersionCollectionsItem[];
    /**
     * The date and time at which the version was created.
     */
    createdAt?: string;
    /**
     * The version's ID.
     */
    id?: string;
    /**
     * The version's name.
     */
    name?: string;
    /**
     * The version's release notes.
     */
    releaseNotes?: string;
    schemas?:      GetApisAPIIDVersionsVersionIDResponseVersionSchemasItem[];
    /**
     * The date and time at which the version was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsVersionIDResponseVersionCollectionsItem {
    /**
     * The collection's ID.
     */
    id?: string;
    /**
     * The collection's name.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsVersionIDResponseVersionSchemasItem {
    /**
     * The schema's ID.
     */
    id?: string;
    /**
     * The schema type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsVersionIDResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsVersionIDResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisAPIIDVersionsVersionIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the API schema.
 */
export interface GetApisResponse {
    apis?: GetApisResponseApisItem[];
    /**
     * The response's meta information for paginated results.
     */
    meta?: GetApisResponseMeta;
    [property: string]: any;
}

/**
 * The API's base data schema.
 */
export interface GetApisResponseApisItem {
    /**
     * The date and time at which the API was created.
     */
    createdAt?: string;
    /**
     * The Postman ID of the user that created the API.
     */
    createdBy?: number;
    /**
     * The API's description.
     */
    description?: string;
    /**
     * The API's ID.
     */
    id?: string;
    /**
     * The API's name.
     */
    name?: string;
    /**
     * The API's short summary.
     */
    summary?: string;
    /**
     * The date and time at which the API was updated.
     */
    updatedAt?: string;
    /**
     * The Postman ID of the user that updated the API.
     */
    updatedBy?: number;
    [property: string]: any;
}

/**
 * The response's meta information for paginated results.
 */
export interface GetApisResponseMeta {
    /**
     * The maximum number of records in the paginated response.
     */
    limit?: number;
    /**
     * The Base64-encoded value that points to the next record in the results set.
     */
    nextCursor?: string;
    /**
     * The number of records that match the defined criteria.
     */
    total?: number;
    [property: string]: any;
}

export interface GetApisResponse401 {
    error?: GetApisResponse401Error;
    [property: string]: any;
}

export interface GetApisResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetApisResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetApisResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetAuditLogsResponse {
    trails?: GetAuditLogsResponseTrailsItem[];
    [property: string]: any;
}

export interface GetAuditLogsResponseTrailsItem {
    /**
     * The action performed by the user.
     */
    action?: string;
    data?:   GetAuditLogsResponseTrailsItemData;
    /**
     * The audit event's ID.
     */
    id?: number;
    /**
     * The IP address of the user that performed the action.
     */
    ip?: string;
    /**
     * The audit event's description.
     */
    message?: string;
    /**
     * The date and time at which the event occurred.
     */
    timestamp?: string;
    /**
     * The user agent information.
     */
    userAgent?: string;
    [property: string]: any;
}

export interface GetAuditLogsResponseTrailsItemData {
    /**
     * Information about the user who preformed the audit event.
     */
    actor?: GetAuditLogsResponseTrailsItemDataActor;
    /**
     * The user's team information.
     */
    team?: GetAuditLogsResponseTrailsItemDataTeam;
    /**
     * Information about the user.
     */
    user?:      GetAuditLogsResponseTrailsItemDataUser;
    variables?: any;
    [property: string]: any;
}

/**
 * Information about the user who preformed the audit event.
 */
export interface GetAuditLogsResponseTrailsItemDataActor {
    /**
     * If true, the user is active. If false, the user is deactivated.
     */
    active?: boolean;
    /**
     * The user's email address.
     */
    email?: string;
    id?:    number;
    /**
     * The user's name.
     */
    name?: string;
    /**
     * The user's username.
     */
    username?: string;
    [property: string]: any;
}

/**
 * The user's team information.
 */
export interface GetAuditLogsResponseTrailsItemDataTeam {
    /**
     * The team's ID.
     */
    id?: number;
    /**
     * The team's name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the user.
 */
export interface GetAuditLogsResponseTrailsItemDataUser {
    /**
     * The user's email address.
     */
    email?: string;
    /**
     * The user's ID.
     */
    id?: number;
    /**
     * The user's name.
     */
    name?: string;
    /**
     * The user's username.
     */
    username?: string;
    [property: string]: any;
}

export interface GetAuditLogsResponse401 {
    error?: GetAuditLogsResponse401Error;
    [property: string]: any;
}

export interface GetAuditLogsResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetAuditLogsResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetAuditLogsResponse500 {
    error?: GetAuditLogsResponse500Error;
    [property: string]: any;
}

export interface GetAuditLogsResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDFoldersFolderIDResponse {
    /**
     * Information about the folder. For a complete list of properties, refer to the
     * `definitions.folder` property in the [collection.json schema
     * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
     */
    data?: GetCollectionsCollectionIDFoldersFolderIDResponseData;
    meta?: any;
    /**
     * The folder's ID.
     */
    modelID?: string;
    [property: string]: any;
}

/**
 * Information about the folder. For a complete list of properties, refer to the
 * `definitions.folder` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface GetCollectionsCollectionIDFoldersFolderIDResponseData {
    /**
     * The collection ID that the folder belongs to.
     */
    collection?: string;
    /**
     * The folder's creation date and time.
     */
    createdAt?: string;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The folder's ID.
     */
    id?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    lastRevision?: number;
    /**
     * The user ID of the user that last updated the folder.
     */
    lastUpdatedBy?: string;
    /**
     * The folder's name.
     */
    name?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    /**
     * The date and time at which the folder was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDFoldersFolderIDResponse401 {
    error?: GetCollectionsCollectionIDFoldersFolderIDResponse401Error;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDFoldersFolderIDResponse401Error {
    /**
     * Information about the error.
     */
    details?: GetCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails;
    /**
     * The error's message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface GetCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDFoldersFolderIDResponse404 {
    error?: GetCollectionsCollectionIDFoldersFolderIDResponse404Error;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDFoldersFolderIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: GetCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface GetCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDFoldersFolderIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDRequestsRequestIDResponse {
    /**
     * Information about the request. For a complete list of properties, refer to the
     * `definitions.request` property in the [collection.json schema
     * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
     */
    data?: GetCollectionsCollectionIDRequestsRequestIDResponseData;
    meta?: any;
    /**
     * The request's ID.
     */
    modelID?: string;
    [property: string]: any;
}

/**
 * Information about the request. For a complete list of properties, refer to the
 * `definitions.request` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface GetCollectionsCollectionIDRequestsRequestIDResponseData {
    /**
     * The request's creation date and time.
     */
    createdAt?: string;
    /**
     * The request's ID.
     */
    id?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    lastRevision?: number;
    /**
     * The user ID of the user that last updated the request.
     */
    lastUpdatedBy?: string;
    /**
     * The request's name.
     */
    name?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    /**
     * The date and time at which the request was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDRequestsRequestIDResponse401 {
    error?: GetCollectionsCollectionIDRequestsRequestIDResponse401Error;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDRequestsRequestIDResponse401Error {
    /**
     * Information about the error.
     */
    details?: GetCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails;
    /**
     * The error's message.
     */
    message?: string;
    /**
     * The error's name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface GetCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDRequestsRequestIDResponse404 {
    error?: GetCollectionsCollectionIDRequestsRequestIDResponse404Error;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDRequestsRequestIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: GetCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface GetCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDRequestsRequestIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponse {
    /**
     * For a complete list of this endpoint's possible values, use the [collection.json schema
     * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
     */
    collection?: GetCollectionsCollectionIDResponseCollection;
    [property: string]: any;
}

/**
 * For a complete list of this endpoint's possible values, use the [collection.json schema
 * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
 */
export interface GetCollectionsCollectionIDResponseCollection {
    /**
     * An object that contains basic information about the collection.
     */
    info?: GetCollectionsCollectionIDResponseCollectionInfo;
    [property: string]: any;
}

/**
 * An object that contains basic information about the collection.
 */
export interface GetCollectionsCollectionIDResponseCollectionInfo {
    /**
     * The collection's Postman ID.
     */
    postmanID?: string;
    /**
     * The collection's description.
     */
    description?: string;
    /**
     * The collection's name.
     */
    name?: string;
    /**
     * A URL to the collection's schema.
     */
    schema?: string;
    /**
     * The collection's unique ID.
     */
    uid?: string;
    /**
     * The date and time at which the collection was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponse400 {
    error?: GetCollectionsCollectionIDResponse400Error;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponse401 {
    error?: GetCollectionsCollectionIDResponse401Error;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponse500 {
    error?: GetCollectionsCollectionIDResponse500Error;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponsesResponseIDResponse {
    /**
     * Information about the response. For a complete list of properties, refer to the
     * `request.responses` property in the [collection.json schema
     * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
     */
    data?: GetCollectionsCollectionIDResponsesResponseIDResponseData;
    meta?: any;
    /**
     * The response's ID.
     */
    modelID?: string;
    [property: string]: any;
}

/**
 * Information about the response. For a complete list of properties, refer to the
 * `request.responses` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface GetCollectionsCollectionIDResponsesResponseIDResponseData {
    /**
     * The response's creation date and time.
     */
    createdAt?: string;
    /**
     * The response's ID.
     */
    id?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    lastRevision?: number;
    /**
     * The user ID of the user that last updated the response.
     */
    lastUpdatedBy?: string;
    /**
     * The response's name.
     */
    name?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    /**
     * The ID of the request that the response belongs to.
     */
    request?: string;
    /**
     * The date and time at which the response was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponsesResponseIDResponse401 {
    error?: GetCollectionsCollectionIDResponsesResponseIDResponse401Error;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponsesResponseIDResponse401Error {
    /**
     * Information about the error.
     */
    details?: GetCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface GetCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponsesResponseIDResponse404 {
    error?: GetCollectionsCollectionIDResponsesResponseIDResponse404Error;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponsesResponseIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: GetCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface GetCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDResponsesResponseIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDTagsResponse {
    /**
     * A list of associated tags.
     */
    tags?: GetCollectionsCollectionIDTagsResponseTagsItem[];
    [property: string]: any;
}

/**
 * Information about the tag.
 */
export interface GetCollectionsCollectionIDTagsResponseTagsItem {
    /**
     * The tag's ID within a team or individual (non-team) user scope.
     */
    slug?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDTagsResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDTagsResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDTagsResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDTransformationsResponse {
    /**
     * The collection's transformed output, in a stringified OpenAPI format.
     */
    output?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDTransformationsResponse401 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The instance in which the error occurred.
     */
    instance?: string;
    /**
     * The error's status code.
     */
    status?: number;
    /**
     * The title of the error message.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDTransformationsResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The instance in which the error occurred.
     */
    instance?: string;
    /**
     * The error's status code.
     */
    status?: number;
    /**
     * The title of the error message.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetCollectionsCollectionIDTransformationsResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The instance in which the error occurred.
     */
    instance?: string;
    /**
     * The error's status code.
     */
    status?: number;
    /**
     * The title of the error message.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetCollectionsResponse {
    collections?: GetCollectionsResponseCollectionsItem[];
    [property: string]: any;
}

/**
 * Information about the collection.
 */
export interface GetCollectionsResponseCollectionsItem {
    /**
     * The collection's creation date and time.
     */
    createdAt?: string;
    /**
     * If the collection is
     * [forked](https://learning.postman.com/docs/collaborating-in-postman/version-control/#forking-postman-entities),
     * the fork's information.
     */
    fork?: GetCollectionsResponseCollectionsItemFork;
    /**
     * The collection's ID.
     */
    id?: string;
    /**
     * If true, the collection is publicly available.
     */
    isPublic?: boolean;
    /**
     * The collection's name.
     */
    name?: string;
    /**
     * The owner of the collection.
     */
    owner?: string;
    /**
     * The collection's unique ID.
     */
    uid?: string;
    /**
     * The date and time at which the collection was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

/**
 * If the collection is
 * [forked](https://learning.postman.com/docs/collaborating-in-postman/version-control/#forking-postman-entities),
 * the fork's information.
 */
export interface GetCollectionsResponseCollectionsItemFork {
    /**
     * The fork's creation date and time.
     */
    createdAt?: string;
    /**
     * The unique ID of the fork's source collection.
     */
    from?: string;
    /**
     * The fork's label.
     */
    label?: string;
    [property: string]: any;
}

export interface GetCollectionsResponse401 {
    error?: GetCollectionsResponse401Error;
    [property: string]: any;
}

export interface GetCollectionsResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetCollectionsResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetCollectionsResponse500 {
    error?: GetCollectionsResponse500Error;
    [property: string]: any;
}

export interface GetCollectionsResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetDetectedSecretsSecretIDLocationsResponse {
    data?: GetDetectedSecretsSecretIDLocationsResponseDataItem[];
    meta?: GetDetectedSecretsSecretIDLocationsResponseMeta;
    [property: string]: any;
}

/**
 * Information about the secret finding locations.
 */
export interface GetDetectedSecretsSecretIDLocationsResponseDataItem {
    /**
     * The date and time at which the secret was detected.
     */
    detectedAt?: string;
    /**
     * If true, the resource in which the secret was found was deleted.
     */
    isResourceDeleted?: boolean;
    /**
     * The ID of the user who leaked the secret.
     */
    leakedBy?: number;
    /**
     * The location where the secret was found.
     */
    location?: string;
    /**
     * The number of times the secret occurs in the location.
     */
    occurrences?: number;
    /**
     * The parent resource's unique ID. If the resource is a request, folder, or example, this
     * value is a collection ID. If the resource is a collection, globals, or environment, this
     * is the resource's ID.
     */
    parentResourceID?: string;
    /**
     * The unique ID of the resource where the secret was detected.
     */
    resourceID?: string;
    /**
     * The type of resource in which the secret was detected.
     */
    resourceType?: DatumResourceType;
    /**
     * The URL to the resource that contains the secret.
     */
    url?: string;
    [property: string]: any;
}

/**
 * The type of resource in which the secret was detected.
 */
export enum DatumResourceType {
    API = "api",
    Collection = "collection",
    Environment = "environment",
    Example = "example",
    Folder = "folder",
    Globals = "globals",
    Request = "request",
}

export interface GetDetectedSecretsSecretIDLocationsResponseMeta {
    /**
     * The history of the secret's resolution status changes.
     */
    activityFeed?: GetDetectedSecretsSecretIDLocationsResponseMetaActivityFeedItem[];
    /**
     * The pointer to the first record of the set of paginated results.
     */
    cursor?: string;
    /**
     * The maximum number of rows to return in the response.
     */
    limit?:      number;
    nextCursor?: any;
    /**
     * The secret's obfuscated value.
     */
    obfuscatedSecret?: string;
    /**
     * The secret's SHA-256 hash.
     */
    secretHash?: string;
    /**
     * The type of thesecret.
     */
    secretType?: string;
    /**
     * The total number of discovered secret locations.
     */
    total?: number;
    [property: string]: any;
}

export interface GetDetectedSecretsSecretIDLocationsResponseMetaActivityFeedItem {
    /**
     * The date and time at which the resolution status was last updated.
     */
    resolvedAt?: string;
    /**
     * The ID of the user that updated the secret's resolution status.
     */
    resolvedBy?: number;
    /**
     * The secret's current resolution status:
     * - `ACTIVE` — The secret is active.
     * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
     * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
     * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
     * publishing it.
     */
    status?: ResolutionEnum;
    [property: string]: any;
}

/**
 * The secret's current resolution status:
 * - `ACTIVE` — The secret is active.
 * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
 * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
 * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
 * publishing it.
 *
 *
 * The secret's current status:
 * - `ACTIVE` — The secret is active.
 * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
 * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
 * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
 * publishing it.
 *
 *
 * The secret's updated resolution status:
 * - `ACTIVE` — The secret is active.
 * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
 * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
 * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
 * publishing it.
 */
export enum ResolutionEnum {
    AcceptedRisk = "ACCEPTED_RISK",
    Active = "ACTIVE",
    FalsePositive = "FALSE_POSITIVE",
    Revoked = "REVOKED",
}

export interface GetDetectedSecretsSecretIDLocationsResponse400 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetDetectedSecretsSecretIDLocationsResponse401 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetDetectedSecretsSecretIDLocationsResponse403 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetDetectedSecretsSecretIDLocationsResponse500 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetEnvironmentsEnvironmentIDResponse {
    environment?: GetEnvironmentsEnvironmentIDResponseEnvironment;
    [property: string]: any;
}

export interface GetEnvironmentsEnvironmentIDResponseEnvironment {
    /**
     * The date and time at which the environment was created.
     */
    createdAt?: string;
    /**
     * The environment's ID.
     */
    id?: string;
    /**
     * If true, the environment is public.
     */
    isPublic?: boolean;
    /**
     * The environment's name.
     */
    name?: string;
    /**
     * The ID of environment's owner.
     */
    owner?: string;
    /**
     * The date and time at which the environment was last updated.
     */
    updatedAt?: string;
    /**
     * Information about the environment's variables.
     */
    values?: Array<GetEnvironmentsEnvironmentIDResponseEnvironmentValuesItemItem[]>;
    [property: string]: any;
}

export interface GetEnvironmentsEnvironmentIDResponseEnvironmentValuesItemItem {
    /**
     * If true, the variable is enabled.
     */
    enabled?: boolean;
    /**
     * The variable's name.
     */
    key?: string;
    /**
     * The variable type.
     */
    type?: PurpleType;
    /**
     * The variable's value.
     */
    value?: string;
    [property: string]: any;
}

/**
 * The variable type.
 */
export enum PurpleType {
    Any = "any",
    Default = "default",
    Secret = "secret",
}

export interface GetEnvironmentsEnvironmentIDResponse400 {
    error?: GetEnvironmentsEnvironmentIDResponse400Error;
    [property: string]: any;
}

export interface GetEnvironmentsEnvironmentIDResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetEnvironmentsEnvironmentIDResponse401 {
    error?: GetEnvironmentsEnvironmentIDResponse401Error;
    [property: string]: any;
}

export interface GetEnvironmentsEnvironmentIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetEnvironmentsEnvironmentIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetEnvironmentsEnvironmentIDResponse500 {
    error?: GetEnvironmentsEnvironmentIDResponse500Error;
    [property: string]: any;
}

export interface GetEnvironmentsEnvironmentIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetEnvironmentsResponse {
    environments?: GetEnvironmentsResponseEnvironmentsItem[];
    [property: string]: any;
}

export interface GetEnvironmentsResponseEnvironmentsItem {
    /**
     * The date and time at which the environment was created.
     */
    createdAt?: string;
    /**
     * The environment's ID.
     */
    id?: string;
    /**
     * If true, the environment is public.
     */
    isPublic?: boolean;
    /**
     * The environment's name.
     */
    name?: string;
    /**
     * The environment owner's ID.
     */
    owner?: string;
    /**
     * The environment's unique ID.
     */
    uid?: string;
    /**
     * The date and time at which the environment was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface GetEnvironmentsResponse401 {
    error?: GetEnvironmentsResponse401Error;
    [property: string]: any;
}

export interface GetEnvironmentsResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetEnvironmentsResponse404 {
    error?: GetEnvironmentsResponse404Error;
    [property: string]: any;
}

export interface GetEnvironmentsResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetEnvironmentsResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetEnvironmentsResponse500 {
    error?: GetEnvironmentsResponse500Error;
    [property: string]: any;
}

export interface GetEnvironmentsResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMeResponse {
    /**
     * Information about operations and their usage limits. The API does not return this object
     * for users with the [Guest
     * role](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles).
     */
    operations?: GetMeResponseOperationsItem[];
    /**
     * Information about the authenticated user.
     */
    user?: GetMeResponseUser;
    [property: string]: any;
}

export interface GetMeResponseOperationsItem {
    /**
     * The operation's limit value.
     */
    limit?: number;
    /**
     * The operation's name.
     */
    name?: string;
    /**
     * The operation's overage value.
     */
    overage?: number;
    /**
     * The operation's current usage value.
     */
    usage?: number;
    [property: string]: any;
}

/**
 * Information about the authenticated user.
 */
export interface GetMeResponseUser {
    /**
     * The user's avatar image URL.
     */
    avatar?: string;
    /**
     * The user's email address.
     */
    email?: string;
    /**
     * The user's full name.
     */
    fullName?: string;
    /**
     * The user's Postman ID.
     */
    id?: number;
    /**
     * If true, the user's information is publicly available.
     */
    isPublic?: boolean;
    /**
     * The team ID the user is assigned to. This returns a `0` value if the user is not assigned
     * to a team.
     */
    teamID?: number;
    /**
     * The user's username.
     */
    username?: string;
    [property: string]: any;
}

export interface GetMeResponse401 {
    error?: GetMeResponse401Error;
    [property: string]: any;
}

export interface GetMeResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMeResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetMeResponse500 {
    error?: GetMeResponse500Error;
    [property: string]: any;
}

export interface GetMeResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse {
    callLogs?: GetMocksMockIDCallLogsResponseCallLogsItem[];
    /**
     * The response's non-standard meta information.
     */
    meta?: GetMocksMockIDCallLogsResponseMeta;
    [property: string]: any;
}

/**
 * Information about the mock server's server responses.
 */
export interface GetMocksMockIDCallLogsResponseCallLogsItem {
    /**
     * The server response's ID.
     */
    id?: string;
    /**
     * The server response's request information.
     */
    request?: GetMocksMockIDCallLogsResponseCallLogsItemRequest;
    /**
     * The server response's response information.
     */
    response?: GetMocksMockIDCallLogsResponseCallLogsItemResponse;
    /**
     * The server response's name.
     */
    responseName?: string;
    /**
     * The date and time at which the server response was served.
     */
    servedAt?: string;
    [property: string]: any;
}

/**
 * The server response's request information.
 */
export interface GetMocksMockIDCallLogsResponseCallLogsItemRequest {
    /**
     * The request's body information.
     */
    body?: GetMocksMockIDCallLogsResponseCallLogsItemRequestBody;
    /**
     * The request's headers.
     */
    headers?: GetMocksMockIDCallLogsResponseCallLogsItemRequestHeaders;
    /**
     * The request method.
     */
    method?: string;
    /**
     * The request's path.
     */
    path?: string;
    [property: string]: any;
}

/**
 * The request's body information.
 */
export interface GetMocksMockIDCallLogsResponseCallLogsItemRequestBody {
    /**
     * The request body's contents.
     */
    data?: string;
    /**
     * The request body's media type (mode).
     */
    mode?: string;
    [property: string]: any;
}

/**
 * The request's headers.
 */
export interface GetMocksMockIDCallLogsResponseCallLogsItemRequestHeaders {
    /**
     * The request header's name.
     */
    key?: string;
    /**
     * The request header's value.
     */
    value?: string;
    [property: string]: any;
}

/**
 * The server response's response information.
 */
export interface GetMocksMockIDCallLogsResponseCallLogsItemResponse {
    /**
     * The response's body information.
     */
    body?: GetMocksMockIDCallLogsResponseCallLogsItemResponseBody;
    /**
     * The response's headers.
     */
    headers?: GetMocksMockIDCallLogsResponseCallLogsItemResponseHeaders;
    /**
     * The response's status code.
     */
    statusCode?: number;
    /**
     * The type of response.
     */
    type?: string;
    [property: string]: any;
}

/**
 * The response's body information.
 */
export interface GetMocksMockIDCallLogsResponseCallLogsItemResponseBody {
    /**
     * The response body's contents.
     */
    data?: string;
    [property: string]: any;
}

/**
 * The response's headers.
 */
export interface GetMocksMockIDCallLogsResponseCallLogsItemResponseHeaders {
    /**
     * The response header's description information.
     */
    description?: GetMocksMockIDCallLogsResponseCallLogsItemResponseHeadersDescription;
    /**
     * The response header's name.
     */
    key?: string;
    /**
     * The response header's value.
     */
    value?: string;
    [property: string]: any;
}

/**
 * The response header's description information.
 */
export interface GetMocksMockIDCallLogsResponseCallLogsItemResponseHeadersDescription {
    /**
     * The response header description's content.
     */
    content?: string;
    /**
     * The response header description's media type.
     */
    type?: string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface GetMocksMockIDCallLogsResponseMeta {
    nextCursor?: null | string;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse400 {
    error?: GetMocksMockIDCallLogsResponse400Error;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse401 {
    error?: GetMocksMockIDCallLogsResponse401Error;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse404 {
    error?: GetMocksMockIDCallLogsResponse404Error;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse404Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse500 {
    error?: GetMocksMockIDCallLogsResponse500Error;
    [property: string]: any;
}

export interface GetMocksMockIDCallLogsResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDResponse {
    mock?: GetMocksMockIDResponseMock;
    [property: string]: any;
}

export interface GetMocksMockIDResponseMock {
    /**
     * The mock's associated collection unique ID.
     */
    collection?: string;
    /**
     * Information about the mock server's configuration.
     */
    config?: GetMocksMockIDResponseMockConfig;
    /**
     * The date and time at which the mock server was created.
     */
    createdAt?: string;
    /**
     * If true, the mock server is not active. Mock servers deactivate when a linked collection
     * or environment is deleted.
     */
    deactivated?: boolean;
    /**
     * The mock server's associated environment ID.
     */
    environment?: string;
    /**
     * The mock server's ID.
     */
    id?: string;
    /**
     * If true, the mock server is public.
     */
    isPublic?: boolean;
    /**
     * The mock server URL.
     */
    mockURL?: string;
    /**
     * The mock server's name.
     */
    name?: string;
    /**
     * The ID of mock server's owner.
     */
    owner?: string;
    /**
     * The mock server's unique ID.
     */
    uid?: string;
    /**
     * The date and time at which the mock server was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

/**
 * Information about the mock server's configuration.
 */
export interface GetMocksMockIDResponseMockConfig {
    /**
     * A list of the mock server's headers.
     */
    headers?: any[];
    /**
     * If true, match the request body.
     */
    matchBody?: boolean;
    /**
     * If true, match query parameters.
     */
    matchQueryParams?: boolean;
    /**
     * If true, use wildcard variable matching.
     */
    matchWildcards?: boolean;
    /**
     * The ID of mock server's default response for requests. All calls to the mock server will
     * return the defined response.
     */
    serverResponseID?: null | string;
    [property: string]: any;
}

export interface GetMocksMockIDResponse401 {
    error?: GetMocksMockIDResponse401Error;
    [property: string]: any;
}

export interface GetMocksMockIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDResponse404 {
    error?: GetMocksMockIDResponse404Error;
    [property: string]: any;
}

export interface GetMocksMockIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetMocksMockIDResponse500 {
    error?: GetMocksMockIDResponse500Error;
    [property: string]: any;
}

export interface GetMocksMockIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesResponse401 {
    error?: GetMocksMockIDServerResponsesResponse401Error;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesResponse404 {
    error?: GetMocksMockIDServerResponsesResponse404Error;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesResponse404Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesResponse500 {
    error?: GetMocksMockIDServerResponsesResponse500Error;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the server response.
 */
export interface GetMocksMockIDServerResponsesResponseItem {
    /**
     * The date and time at which the server response was created.
     */
    createdAt?: string;
    /**
     * The user ID of the user who created the server response.
     */
    createdBy?: string;
    /**
     * The server response's ID.
     */
    id?: string;
    /**
     * The server response's name.
     */
    name?: string;
    /**
     * The server response's 5xx HTTP response code.
     */
    statusCode?: number;
    /**
     * The date and time at which the server response was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user who last updated the server response.
     */
    updatedBy?: string;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesServerResponseIDResponse400 {
    error?: GetMocksMockIDServerResponsesServerResponseIDResponse400Error;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesServerResponseIDResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesServerResponseIDResponse401 {
    error?: GetMocksMockIDServerResponsesServerResponseIDResponse401Error;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesServerResponseIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesServerResponseIDResponse404 {
    error?: GetMocksMockIDServerResponsesServerResponseIDResponse404Error;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesServerResponseIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesServerResponseIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesServerResponseIDResponse500 {
    error?: GetMocksMockIDServerResponsesServerResponseIDResponse500Error;
    [property: string]: any;
}

export interface GetMocksMockIDServerResponsesServerResponseIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the server response.
 */
export interface GetMocksMockIDServerResponsesServerResponseIDResponseItem {
    /**
     * The date and time at which the server response was created.
     */
    createdAt?: string;
    /**
     * The user ID of the user who created the server response.
     */
    createdBy?: string;
    /**
     * The server response's ID.
     */
    id?: string;
    /**
     * The server response's name.
     */
    name?: string;
    /**
     * The server response's 5xx HTTP response code.
     */
    statusCode?: number;
    /**
     * The date and time at which the server response was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user who last updated the server response.
     */
    updatedBy?: string;
    [property: string]: any;
}

export interface GetMocksResponse {
    mocks?: GetMocksResponseMocksItem[];
    [property: string]: any;
}

/**
 * Information about the mock servers.
 */
export interface GetMocksResponseMocksItem {
    /**
     * The mock's associated collection unique ID.
     */
    collection?: string;
    /**
     * Information about the mock server's configuration.
     */
    config?: GetMocksResponseMocksItemConfig;
    /**
     * The date and time at which the mock server was created.
     */
    createdAt?: string;
    /**
     * The mock server's associated environment ID.
     */
    environment?: string;
    /**
     * The mock server's ID.
     */
    id?: string;
    /**
     * If true, the mock server is public.
     */
    isPublic?: boolean;
    /**
     * The mock server URL.
     */
    mockURL?: string;
    /**
     * The mock server's name.
     */
    name?: string;
    /**
     * The ID of mock server's owner.
     */
    owner?: string;
    /**
     * The mock server's unique ID.
     */
    uid?: string;
    /**
     * The date and time at which the mock server was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

/**
 * Information about the mock server's configuration.
 */
export interface GetMocksResponseMocksItemConfig {
    /**
     * Information about the mock server's simulated network delay settings. This returns a null
     * value if there are no configured network delay settings.
     */
    delay?: null | GetMocksResponseMocksItemConfigDelay;
    /**
     * A list of the mock server's headers.
     */
    headers?: string[];
    /**
     * If true, match the request body.
     */
    matchBody?: boolean;
    /**
     * If true, match query parameters.
     */
    matchQueryParams?: boolean;
    /**
     * If true, use wildcard variable matching.
     */
    matchWildcards?: boolean;
    /**
     * The ID of mock server's default response for requests. All calls to the mock server will
     * return the defined response.
     */
    serverResponseID?: string;
    [property: string]: any;
}

export interface GetMocksResponseMocksItemConfigDelay {
    /**
     * The configured delay, in milliseconds.
     */
    duration?: number;
    /**
     * The simulated fixed network delay value:
     *
     * - `1` — 2G (300 ms).
     * - `2` — 3G (100 ms).
     *
     * The object does not return this value for custom delay values.
     */
    preset?: Preset;
    /**
     * The type of simulated delay value:
     *
     * - `fixed` — The delay value is a fixed value.
     */
    type?: GetMocksResponseMocksItemConfigDelayType;
    [property: string]: any;
}

/**
 * The simulated fixed network delay value:
 *
 * - `1` — 2G (300 ms).
 * - `2` — 3G (100 ms).
 *
 * The object does not return this value for custom delay values.
 */
export enum Preset {
    The1 = "1",
    The2 = "2",
}

/**
 * The type of simulated delay value:
 *
 * - `fixed` — The delay value is a fixed value.
 */
export enum GetMocksResponseMocksItemConfigDelayType {
    Fixed = "fixed",
}

export interface GetMocksResponse401 {
    error?: GetMocksResponse401Error;
    [property: string]: any;
}

export interface GetMocksResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMocksResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetMocksResponse500 {
    error?: GetMocksResponse500Error;
    [property: string]: any;
}

export interface GetMocksResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponse {
    monitor?: GetMonitorsMonitorIDResponseMonitor;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponseMonitor {
    /**
     * The monitor's associated collection unique ID.
     */
    collectionUid?: string;
    /**
     * A list of the monitor's [geographic
     * regions](https://learning.postman.com/docs/monitoring-your-api/setting-up-monitor/#adding-regions).
     */
    distribution?: any[];
    /**
     * The monitor's associated environment unique ID.
     */
    environmentUid?: string;
    /**
     * The monitor's ID.
     */
    id?: string;
    /**
     * Information about the monitor's previous run.
     */
    lastRun?: GetMonitorsMonitorIDResponseMonitorLastRun;
    /**
     * The monitor's name.
     */
    name?: string;
    /**
     * Information about the monitor's notification settings.
     */
    notifications?: GetMonitorsMonitorIDResponseMonitorNotifications;
    /**
     * Information about the monitor's option settings.
     */
    options?: GetMonitorsMonitorIDResponseMonitorOptions;
    /**
     * The ID of monitor's owner.
     */
    owner?: number;
    /**
     * Information about the monitor's schedule.
     */
    schedule?: GetMonitorsMonitorIDResponseMonitorSchedule;
    /**
     * The monitor's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

/**
 * Information about the monitor's previous run.
 */
export interface GetMonitorsMonitorIDResponseMonitorLastRun {
    /**
     * The date and time at which the monitor's previous run completed.
     */
    finishedAt?: string;
    /**
     * The date and time at which the monitor's previous run started.
     */
    startedAt?: string;
    /**
     * Information about the monitor's stats.
     */
    stats?: GetMonitorsMonitorIDResponseMonitorLastRunStats;
    /**
     * The monitor's status after its last run.
     */
    status?: string;
    [property: string]: any;
}

/**
 * Information about the monitor's stats.
 */
export interface GetMonitorsMonitorIDResponseMonitorLastRunStats {
    /**
     * Information about the monitor's assertions.
     */
    assertions?: GetMonitorsMonitorIDResponseMonitorLastRunStatsAssertions;
    /**
     * Information about the monitor's requests.
     */
    requests?: GetMonitorsMonitorIDResponseMonitorLastRunStatsRequests;
    [property: string]: any;
}

/**
 * Information about the monitor's assertions.
 */
export interface GetMonitorsMonitorIDResponseMonitorLastRunStatsAssertions {
    /**
     * The total number of test failures.
     */
    failed?: number;
    /**
     * The total number of tests performed.
     */
    total?: number;
    [property: string]: any;
}

/**
 * Information about the monitor's requests.
 */
export interface GetMonitorsMonitorIDResponseMonitorLastRunStatsRequests {
    /**
     * The total number of requests.
     */
    total?: number;
    [property: string]: any;
}

/**
 * Information about the monitor's notification settings.
 */
export interface GetMonitorsMonitorIDResponseMonitorNotifications {
    onError?:   GetMonitorsMonitorIDResponseMonitorNotificationsOnErrorItem[];
    onFailure?: GetMonitorsMonitorIDResponseMonitorNotificationsOnFailureItem[];
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponseMonitorNotificationsOnErrorItem {
    /**
     * The email address of the user to notify on monitor error.
     */
    email?: string;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponseMonitorNotificationsOnFailureItem {
    /**
     * The email address of the user to notify on monitor failure.
     */
    email?: string;
    [property: string]: any;
}

/**
 * Information about the monitor's option settings.
 */
export interface GetMonitorsMonitorIDResponseMonitorOptions {
    /**
     * If true, follow redirects enabled.
     */
    followRedirects?: boolean;
    /**
     * The monitor's request delay value.
     */
    requestDelay?: number;
    /**
     * The monitor's request timeout value.
     */
    requestTimeout?: number;
    /**
     * If true, strict SSL enabled.
     */
    strictSSL?: boolean;
    [property: string]: any;
}

/**
 * Information about the monitor's schedule.
 */
export interface GetMonitorsMonitorIDResponseMonitorSchedule {
    /**
     * The monitor's cron frequency value.
     */
    cron?: string;
    /**
     * The date and time of monitor's next scheduled run.
     */
    nextRun?: string;
    /**
     * The monitor's timezone.
     */
    timezone?: string;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponse401 {
    error?: GetMonitorsMonitorIDResponse401Error;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponse404 {
    error?: GetMonitorsMonitorIDResponse404Error;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponse500 {
    error?: GetMonitorsMonitorIDResponse500Error;
    [property: string]: any;
}

export interface GetMonitorsMonitorIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMonitorsResponse {
    monitors?: GetMonitorsResponseMonitorsItem[];
    [property: string]: any;
}

export interface GetMonitorsResponseMonitorsItem {
    /**
     * The monitor's ID.
     */
    id?: string;
    /**
     * The monitor's name.
     */
    name?: string;
    /**
     * The ID of the monitor's owner.
     */
    owner?: string;
    /**
     * The monitor's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface GetMonitorsResponse401 {
    error?: GetMonitorsResponse401Error;
    [property: string]: any;
}

export interface GetMonitorsResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetMonitorsResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetMonitorsResponse500 {
    error?: GetMonitorsResponse500Error;
    [property: string]: any;
}

export interface GetMonitorsResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponse {
    /**
     * The response's non-standard meta information.
     */
    meta?: GetNetworkPrivateNetworkEntityRequestAllResponseMeta;
    /**
     * Information about the requests to add elements to the Private API Network.
     */
    requests?: GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItem[];
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface GetNetworkPrivateNetworkEntityRequestAllResponseMeta {
    /**
     * The maximum number of items returned.
     */
    limit?: number;
    /**
     * The zero-based offset of the first item returned.
     */
    offset?: number;
    /**
     * The total count of items found.
     */
    totalCount?: number;
    [property: string]: any;
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItem {
    /**
     * The date and time at which the request was created.
     */
    createdAt?: string;
    /**
     * The ID of the user who created the request.
     */
    createdBy?: number;
    /**
     * Information about the requested element.
     */
    element?: GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItemElement;
    /**
     * The request's ID.
     */
    id?: number;
    /**
     * The user's optional message included in the request.
     */
    message?: string;
    /**
     * Information about the response to the request. This object only returns when the network
     * manager denied a request with a message.
     */
    response?: GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItemResponse;
    /**
     * The request's status.
     */
    status?: PurpleStatus;
    [property: string]: any;
}

/**
 * Information about the requested element.
 */
export interface GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItemElement {
    /**
     * The element's ID.
     */
    id?: string;
    /**
     * The element's name.
     */
    name?: string;
    /**
     * The element's short summary.
     */
    summary?: string;
    /**
     * The element type.
     */
    type?: EntityTypeEnum;
    [property: string]: any;
}

/**
 * The element type.
 *
 * The type of Postman element.
 */
export enum EntityTypeEnum {
    API = "api",
    Collection = "collection",
    Workspace = "workspace",
}

/**
 * Information about the response to the request. This object only returns when the network
 * manager denied a request with a message.
 */
export interface GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItemResponse {
    /**
     * The date and time at which the network manager denied the request.
     */
    createdAt?: string;
    /**
     * The network manager's user ID.
     */
    createdBy?: number;
    /**
     * The network manager's request response message.
     */
    message?: string;
    [property: string]: any;
}

/**
 * The request's status.
 */
export enum PurpleStatus {
    Denied = "denied",
    Pending = "pending",
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponse400 {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponse401 {
    error?: GetNetworkPrivateNetworkEntityRequestAllResponse401Error;
    [property: string]: any;
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponse403 {
    error?: GetNetworkPrivateNetworkEntityRequestAllResponse403Error;
    [property: string]: any;
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponse500 {
    error?: GetNetworkPrivateNetworkEntityRequestAllResponse500Error;
    [property: string]: any;
}

export interface GetNetworkPrivateNetworkEntityRequestAllResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetNetworkPrivateResponse {
    /**
     * Information about a Private API Network's folder elements. Elements are APIs,
     * collections, and workspaces.
     */
    elements?: GetNetworkPrivateResponseElementsItem[];
    /**
     * Information about the Private API Network's folders.
     */
    folders?: GetNetworkPrivateResponseFoldersItem[];
    /**
     * The response's non-standard meta information.
     */
    meta?: GetNetworkPrivateResponseMeta;
    [property: string]: any;
}

export interface GetNetworkPrivateResponseElementsItem {
    /**
     * The date and time at which the element was published to Private API Network. This value
     * is the same as the `updatedAt` value.
     */
    addedAt?: string;
    /**
     * The user ID of the user who published the element.
     */
    addedBy?: number;
    /**
     * The date and time at which the element was created.
     */
    createdAt?: string;
    /**
     * The user who created the element.
     */
    createdBy?: number;
    /**
     * The element's description.
     */
    description?: string;
    /**
     * The element's HREF.
     */
    href?: string;
    /**
     * The element's ID.
     */
    id?: string;
    /**
     * The element's name.
     */
    name?: string;
    /**
     * The element's parent folder ID.
     */
    parentFolderID?: number;
    /**
     * The element's summary.
     */
    summary?: string;
    /**
     * The element's type.
     */
    type?: string;
    /**
     * The date and time at which the element was last updated.
     */
    updatedAt?: string;
    /**
     * The user who updated the element.
     */
    updatedBy?: number;
    [property: string]: any;
}

export interface GetNetworkPrivateResponseFoldersItem {
    /**
     * The date and time at which the folder was created.
     */
    createdAt?: string;
    /**
     * The user who created the folder.
     */
    createdBy?: number;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The folder's ID.
     */
    id?: number;
    /**
     * The folder's name.
     */
    name?: string;
    /**
     * The folder's parent folder ID.
     */
    parentFolderID?: number;
    /**
     * The element's type. This value is always `folder`.
     */
    type?: string;
    /**
     * The date and time at which the folder was updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user who updated the folder.
     */
    updatedBy?: number;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface GetNetworkPrivateResponseMeta {
    /**
     * The maximum number of elements returned. If the value exceeds the maximum value of
     * `1000`, then the system uses the `1000` value.
     */
    limit?: number;
    /**
     * The zero-based offset of the first item returned.
     */
    offset?: number;
    /**
     * The total count of the `elements` and `folders` items.
     */
    totalCount?: number;
    [property: string]: any;
}

export interface GetNetworkPrivateResponse401 {
    error?: GetNetworkPrivateResponse401Error;
    [property: string]: any;
}

export interface GetNetworkPrivateResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetNetworkPrivateResponse403 {
    error?: GetNetworkPrivateResponse403Error;
    [property: string]: any;
}

export interface GetNetworkPrivateResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetNetworkPrivateResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetNetworkPrivateResponse500 {
    error?: GetNetworkPrivateResponse500Error;
    [property: string]: any;
}

export interface GetNetworkPrivateResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsGroupIDResponse {
    /**
     * The group's external ID.
     */
    externalID?: string;
    /**
     * The group's SCIM ID.
     */
    id?: string;
    /**
     * Information about the group's members.
     */
    members?: GetScimV2GroupsGroupIDResponseMembers;
    /**
     * The response's non-standard meta information.
     */
    meta?: GetScimV2GroupsGroupIDResponseMeta;
    /**
     * A list of schema resource URIs.
     */
    schemas?: string[];
    /**
     * The group's display name.
     */
    userName?: string;
    [property: string]: any;
}

/**
 * Information about the group's members.
 */
export interface GetScimV2GroupsGroupIDResponseMembers {
    display?: string;
    value?:   string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface GetScimV2GroupsGroupIDResponseMeta {
    /**
     * The date and time at which the group was created.
     */
    created?: string;
    /**
     * The date and time at which the group was last modified.
     */
    lastModified?: string;
    /**
     * The resource type.
     */
    resourceType?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsGroupIDResponse400 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsGroupIDResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsGroupIDResponse403 {
    /**
     * Information about the error.
     */
    detail?:  string;
    schemas?: string[];
    /**
     * The error status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsGroupIDResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsGroupIDResponse429 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: number;
    [property: string]: any;
}

export interface GetScimV2GroupsGroupIDResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsResponse {
    /**
     * The number of items per response page.
     */
    itemsPerPage?: number;
    /**
     * A list of group resources.
     */
    resources?: ScimGroupResource[];
    schemas?:   string[];
    /**
     * The index entry by which the returned results begin.
     */
    startIndex?: number;
    /**
     * The total number of results found.
     */
    totalResults?: number;
    [property: string]: any;
}

/**
 * The SCIM group resource object.
 */
export interface ScimGroupResource {
    /**
     * The group's display name.
     */
    displayName?: string;
    /**
     * The group's external ID.
     */
    externalID?: string;
    /**
     * The group's SCIM ID.
     */
    id?: string;
    /**
     * Information about the group's members.
     */
    members?: ScimGroupResourceMembers;
    /**
     * The response's non-standard meta information.
     */
    meta?: ScimGroupResourceMeta;
    /**
     * A list of schema resource URIs.
     */
    schemas?: string[];
    [property: string]: any;
}

/**
 * Information about the group's members.
 */
export interface ScimGroupResourceMembers {
    display?: string;
    value?:   string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface ScimGroupResourceMeta {
    /**
     * The date and time at which the group was created.
     */
    created?: string;
    /**
     * The date and time at which the group was last modified.
     */
    lastModified?: string;
    /**
     * The resource type.
     */
    resourceType?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsResponse400 {
    detail?:  string;
    schemas?: string[];
    status?:  string;
    [property: string]: any;
}

export interface GetScimV2GroupsResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2GroupsResponse429 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: number;
    [property: string]: any;
}

export interface GetScimV2GroupsResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2ResourceTypesResponse401 {
    error?: GetScimV2ResourceTypesResponse401Error;
    [property: string]: any;
}

export interface GetScimV2ResourceTypesResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetScimV2ResourceTypesResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2ResourceTypesResponseItem {
    /**
     * The resource's description.
     */
    description?: string;
    /**
     * The resource's endpoint.
     */
    endpoint?: string;
    /**
     * The resource's ID.
     */
    id?: string;
    /**
     * The resource's friendly name.
     */
    name?: string;
    /**
     * The resource's schema URI.
     */
    schema?: string;
    /**
     * Information about the resource's schema extensions.
     */
    schemaExtensions?: GetScimV2ResourceTypesResponseItemSchemaExtensionsItem[];
    /**
     * A list of SCIM schema resource URIs.
     */
    schemas?: string[];
    [property: string]: any;
}

export interface GetScimV2ResourceTypesResponseItemSchemaExtensionsItem {
    /**
     * If true, the resource must include this schema extension.
     */
    required?: boolean;
    /**
     * The resource extension's URI.
     */
    schema?: string;
    [property: string]: any;
}

export interface GetScimV2ServiceProviderConfigResponse {
    /**
     * A list of authentication schemes.
     */
    authenticationSchemes?: GetScimV2ServiceProviderConfigResponseAuthenticationSchemesItem[];
    bulk?:                  GetScimV2ServiceProviderConfigResponseBulk;
    changePassword?:        GetScimV2ServiceProviderConfigResponseChangePassword;
    /**
     * A link to the URI's documentation.
     */
    documentationURI?: string;
    etag?:             GetScimV2ServiceProviderConfigResponseEtag;
    filter?:           GetScimV2ServiceProviderConfigResponseFilter;
    /**
     * The response's non-standard meta information.
     */
    meta?:  GetScimV2ServiceProviderConfigResponseMeta;
    patch?: GetScimV2ServiceProviderConfigResponsePatch;
    /**
     * A list of schema resource URIs.
     */
    schemas?: string[];
    sort?:    GetScimV2ServiceProviderConfigResponseSort;
    [property: string]: any;
}

/**
 * Information about the scheme.
 */
export interface GetScimV2ServiceProviderConfigResponseAuthenticationSchemesItem {
    /**
     * The scheme's description.
     */
    description?: string;
    /**
     * The scheme's friendly name.
     */
    name?: string;
    /**
     * A link to the scheme's specification documentation.
     */
    specURI?: string;
    /**
     * The scheme's type.
     */
    type?: string;
    [property: string]: any;
}

export interface GetScimV2ServiceProviderConfigResponseBulk {
    maxOperations?:  number;
    maxPayloadSize?: number;
    supported?:      boolean;
    [property: string]: any;
}

export interface GetScimV2ServiceProviderConfigResponseChangePassword {
    supported?: boolean;
    [property: string]: any;
}

export interface GetScimV2ServiceProviderConfigResponseEtag {
    supported?: boolean;
    [property: string]: any;
}

export interface GetScimV2ServiceProviderConfigResponseFilter {
    maxResults?: number;
    supported?:  boolean;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface GetScimV2ServiceProviderConfigResponseMeta {
    location?:     string;
    resourceType?: string;
    [property: string]: any;
}

export interface GetScimV2ServiceProviderConfigResponsePatch {
    supported?: boolean;
    [property: string]: any;
}

export interface GetScimV2ServiceProviderConfigResponseSort {
    supported?: boolean;
    [property: string]: any;
}

export interface GetScimV2ServiceProviderConfigResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2ServiceProviderConfigResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2UsersResponse {
    /**
     * The number of items per response page.
     */
    itemsPerPage?: number;
    /**
     * A list of user resources.
     */
    resources?: ScimUserResource[];
    schemas?:   string[];
    /**
     * The index entry by which the returned results begin.
     */
    startIndex?: number;
    /**
     * The total number of results found.
     */
    totalResults?: number;
    [property: string]: any;
}

/**
 * The SCIM user resource object.
 */
export interface ScimUserResource {
    /**
     * If true, the team member is active.
     */
    active?: boolean;
    /**
     * The team member's external ID.
     */
    externalID?: string;
    /**
     * The team member's SCIM ID.
     */
    id?: string;
    /**
     * The response's non-standard meta information.
     */
    meta?: ScimUserResourceMeta;
    /**
     * Information about the Postman team member.
     */
    name?: ScimUserResourceName;
    /**
     * A list of schema resource URIs.
     */
    schemas?: string[];
    /**
     * The team member's SCIM username.
     */
    userName?: string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface ScimUserResourceMeta {
    /**
     * The date and time at which the team member was created.
     */
    created?: string;
    /**
     * The date and time at which the team member was last modified.
     */
    lastModified?: string;
    /**
     * The resource type.
     */
    resourceType?: string;
    [property: string]: any;
}

/**
 * Information about the Postman team member.
 */
export interface ScimUserResourceName {
    /**
     * The team member's last name.
     */
    familyName?: string;
    /**
     * The team member's first name.
     */
    givenName?: string;
    [property: string]: any;
}

export interface GetScimV2UsersResponse400 {
    detail?:  string;
    schemas?: string[];
    status?:  string;
    [property: string]: any;
}

export interface GetScimV2UsersResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2UsersResponse403 {
    detail?:  string;
    schemas?: string[];
    status?:  string;
    [property: string]: any;
}

export interface GetScimV2UsersResponse429 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: number;
    [property: string]: any;
}

export interface GetScimV2UsersResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2UsersUserIDResponse {
    /**
     * If true, the team member is active.
     */
    active?: boolean;
    /**
     * The team member's external ID.
     */
    externalID?: string;
    /**
     * The team member's SCIM ID.
     */
    id?: string;
    /**
     * The response's non-standard meta information.
     */
    meta?: GetScimV2UsersUserIDResponseMeta;
    /**
     * Information about the Postman team member.
     */
    name?: GetScimV2UsersUserIDResponseName;
    /**
     * A list of schema resource URIs.
     */
    schemas?: string[];
    /**
     * The team member's SCIM username.
     */
    userName?: string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface GetScimV2UsersUserIDResponseMeta {
    /**
     * The date and time at which the team member was created.
     */
    created?: string;
    /**
     * The date and time at which the team member was last modified.
     */
    lastModified?: string;
    /**
     * The resource type.
     */
    resourceType?: string;
    [property: string]: any;
}

/**
 * Information about the Postman team member.
 */
export interface GetScimV2UsersUserIDResponseName {
    /**
     * The team member's last name.
     */
    familyName?: string;
    /**
     * The team member's first name.
     */
    givenName?: string;
    [property: string]: any;
}

export interface GetScimV2UsersUserIDResponse400 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2UsersUserIDResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2UsersUserIDResponse403 {
    /**
     * Information about the error.
     */
    detail?:  string;
    schemas?: string[];
    /**
     * The error status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2UsersUserIDResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetScimV2UsersUserIDResponse429 {
    /**
     * Information about the error.
     */
    detail?:  string;
    schemas?: string[];
    /**
     * The error status code.
     */
    status?: number;
    [property: string]: any;
}

export interface GetScimV2UsersUserIDResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface GetSecretTypesResponse {
    data?: GetSecretTypesResponseDataItem[];
    meta?: GetSecretTypesResponseMeta;
    [property: string]: any;
}

/**
 * Information about the secret type.
 */
export interface GetSecretTypesResponseDataItem {
    /**
     * The ID of the secret type.
     */
    id?: string;
    /**
     * The name of the secret type.
     */
    name?: string;
    /**
     * The origin of the secret type:
     * - `DEFAULT` — Supported by default in Postman.
     * - `TEAM_REGEX` — A custom regex added by an Admin or Super Admin user in the **Configure
     * Alerts** section of the [**Team
     * Settings**](https://learning.postman.com/docs/administration/team-settings/) interface.
     */
    type?: DatumType;
    [property: string]: any;
}

/**
 * The origin of the secret type:
 * - `DEFAULT` — Supported by default in Postman.
 * - `TEAM_REGEX` — A custom regex added by an Admin or Super Admin user in the **Configure
 * Alerts** section of the [**Team
 * Settings**](https://learning.postman.com/docs/administration/team-settings/) interface.
 */
export enum DatumType {
    Default = "DEFAULT",
    TeamRegex = "TEAM_REGEX",
}

export interface GetSecretTypesResponseMeta {
    /**
     * The total number of supported secrets.
     */
    total?: number;
    [property: string]: any;
}

export interface GetSecretTypesResponse401 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetSecretTypesResponse403 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetSecretTypesResponse500 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface GetTagsSlugEntitiesResponse {
    /**
     * An object containing the paginated elements.
     */
    data?: GetTagsSlugEntitiesResponseData;
    /**
     * The response's pagination information.
     */
    meta?: GetTagsSlugEntitiesResponseMeta;
    [property: string]: any;
}

/**
 * An object containing the paginated elements.
 */
export interface GetTagsSlugEntitiesResponseData {
    /**
     * A list of the Postman elements that contain the given tag.
     */
    entities: GetTagsSlugEntitiesResponseDataEntitiesItem[];
    [property: string]: any;
}

export interface GetTagsSlugEntitiesResponseDataEntitiesItem {
    /**
     * The element's unique ID.
     */
    entityID?: string;
    /**
     * The type of Postman element.
     */
    entityType?: EntityTypeEnum;
    [property: string]: any;
}

/**
 * The response's pagination information.
 */
export interface GetTagsSlugEntitiesResponseMeta {
    /**
     * The number of tagged elements returned in the response.
     */
    count: number;
    /**
     * The pagination cursor that points to the next record in the results set.
     */
    nextCursor?: string;
    [property: string]: any;
}

export interface GetTagsSlugEntitiesResponse400 {
    /**
     * A short summary of the problem.
     */
    error?: string;
    /**
     * Information about the error.
     */
    message?: string;
    /**
     * The error's HTTP status code.
     */
    statusCode?: number;
    [property: string]: any;
}

export interface GetTagsSlugEntitiesResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetTagsSlugEntitiesResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetTagsSlugEntitiesResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetTagsSlugEntitiesResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetWorkspacesResponse {
    workspaces?: GetWorkspacesResponseWorkspacesItem[];
    [property: string]: any;
}

/**
 * Information about the workspace.
 */
export interface GetWorkspacesResponseWorkspacesItem {
    /**
     * The workspace's ID.
     */
    id?: string;
    /**
     * The workspace's name.
     */
    name?: string;
    /**
     * The type of workspace.
     */
    type?: VisibilityEnum;
    /**
     * The workspace's visibility.
     * [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility)
     * determines who can access the workspace:
     *
     * - `personal` — Only you can access the workspace.
     * - `team` — All team members can access the workspace.
     * - `private` — Only invited team members can access the workspace ([Professional and
     * Enterprise plans only](https://www.postman.com/pricing)).
     * - `public` — Everyone can access the workspace.
     * - `partner` — Only invited team members and
     * [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/)
     * can access the workspace ([Enterprise Ultimate plans](https://www.postman.com/pricing)
     * only).
     */
    visibility?: VisibilityEnum;
    [property: string]: any;
}

/**
 * The type of workspace.
 *
 * The workspace's visibility.
 * [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility)
 * determines who can access the workspace:
 *
 * - `personal` — Only you can access the workspace.
 * - `team` — All team members can access the workspace.
 * - `private` — Only invited team members can access the workspace ([Professional and
 * Enterprise plans only](https://www.postman.com/pricing)).
 * - `public` — Everyone can access the workspace.
 * - `partner` — Only invited team members and
 * [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/)
 * can access the workspace ([Enterprise Ultimate plans](https://www.postman.com/pricing)
 * only).
 *
 *
 * The type of workspace:
 *
 * - `personal`
 * - `private` — Private workspaces are available on Postman [Professional and Enterprise
 * plans](https://www.postman.com/pricing).
 * - `public`
 * - `team`
 * - `partner` — [Partner
 * Workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/)
 * are available on Postman [Enterprise Ultimate plans](https://www.postman.com/pricing).
 */
export enum VisibilityEnum {
    Partner = "partner",
    Personal = "personal",
    Private = "private",
    Public = "public",
    Team = "team",
}

export interface GetWorkspacesResponse401 {
    error?: GetWorkspacesResponse401Error;
    [property: string]: any;
}

export interface GetWorkspacesResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetWorkspacesResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetWorkspacesResponse500 {
    error?: GetWorkspacesResponse500Error;
    [property: string]: any;
}

export interface GetWorkspacesResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the workspace's global variables.
 */
export interface GetWorkspacesWorkspaceIDGlobalVariablesResponse {
    /**
     * A list of the workspace's global variables.
     */
    values?: GlobalVariable[];
    [property: string]: any;
}

/**
 * Information about the global variable.
 */
export interface GlobalVariable {
    /**
     * If true, the variable is enabled.
     */
    enabled?: boolean;
    /**
     * The variable's name.
     */
    key?: string;
    /**
     * The [type](https://learning.postman.com/docs/sending-requests/variables/#variable-types)
     * of variable.
     */
    type?: GlobalVariableType;
    /**
     * The variable's value.
     */
    value?: string;
    [property: string]: any;
}

/**
 * The [type](https://learning.postman.com/docs/sending-requests/variables/#variable-types)
 * of variable.
 */
export enum GlobalVariableType {
    Default = "default",
    Secret = "secret",
}

export interface GetWorkspacesWorkspaceIDGlobalVariablesResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The type of error.
     */
    title?: string;
    /**
     * The generic description for the error's class.
     */
    type?: string;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDResponse {
    /**
     * Information about the workspace.
     */
    workspace?: GetWorkspacesWorkspaceIDResponseWorkspace;
    [property: string]: any;
}

/**
 * Information about the workspace.
 */
export interface GetWorkspacesWorkspaceIDResponseWorkspace {
    /**
     * The workspace's APIs.
     */
    apis?: GetWorkspacesWorkspaceIDResponseWorkspaceApisItem[];
    /**
     * The workspace's collections.
     */
    collections?: GetWorkspacesWorkspaceIDResponseWorkspaceCollectionsItem[];
    /**
     * The date and time at which the workspace was created.
     */
    createdAt?: string;
    /**
     * The user ID of the user who created the workspace.
     */
    createdBy?: string;
    /**
     * The workspace's description.
     */
    description?: string;
    /**
     * The workspace's environments.
     */
    environments?: GetWorkspacesWorkspaceIDResponseWorkspaceEnvironmentsItem[];
    /**
     * The workspace's ID.
     */
    id?: string;
    /**
     * The workspace's mock servers.
     */
    mocks?: GetWorkspacesWorkspaceIDResponseWorkspaceMocksItem[];
    /**
     * The workspace's monitors.
     */
    monitors?: GetWorkspacesWorkspaceIDResponseWorkspaceMonitorsItem[];
    /**
     * The workspace's name.
     */
    name?: string;
    /**
     * The type of workspace.
     */
    type?: VisibilityEnum;
    /**
     * The date and time at which the workspace was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user who last updated the workspace.
     */
    updatedBy?: string;
    /**
     * The workspace's visibility.
     * [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility)
     * determines who can access the workspace:
     *
     * - `personal` — Only you can access the workspace.
     * - `team` — All team members can access the workspace.
     * - `private` — Only invited team members can access the workspace ([Professional and
     * Enterprise plans only](https://www.postman.com/pricing)).
     * - `public` — Everyone can access the workspace.
     * - `partner` — Only invited team members and
     * [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/)
     * can access the workspace ([Enterprise Ultimate plans](https://www.postman.com/pricing)
     * only).
     */
    visibility?: VisibilityEnum;
    [property: string]: any;
}

/**
 * Information about the API.
 */
export interface GetWorkspacesWorkspaceIDResponseWorkspaceApisItem {
    /**
     * The API's ID.
     */
    id?: string;
    /**
     * The API's name.
     */
    name?: string;
    /**
     * The API's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

/**
 * Information about the collection.
 */
export interface GetWorkspacesWorkspaceIDResponseWorkspaceCollectionsItem {
    /**
     * The collection's ID.
     */
    id?: string;
    /**
     * The collection's name.
     */
    name?: string;
    /**
     * The collection's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

/**
 * Information about the environment.
 */
export interface GetWorkspacesWorkspaceIDResponseWorkspaceEnvironmentsItem {
    /**
     * The environment's ID.
     */
    id?: string;
    /**
     * The environment's name.
     */
    name?: string;
    /**
     * The environment's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

/**
 * Information about the mock server.
 */
export interface GetWorkspacesWorkspaceIDResponseWorkspaceMocksItem {
    /**
     * If true, the mock server is not active. Mock servers deactivate when a linked collection
     * or environment is deleted.
     */
    deactivated?: boolean;
    /**
     * The mock server's ID.
     */
    id?: string;
    /**
     * The mock server's name.
     */
    name?: string;
    /**
     * The mock server's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

/**
 * Information about the monitor.
 */
export interface GetWorkspacesWorkspaceIDResponseWorkspaceMonitorsItem {
    /**
     * The monitor's ID.
     */
    id?: string;
    /**
     * The monitor's name.
     */
    name?: string;
    /**
     * The monitor's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDResponse401 {
    error?: GetWorkspacesWorkspaceIDResponse401Error;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDResponse404 {
    error?: GetWorkspacesWorkspaceIDResponse404Error;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    /**
     * The error's HTTP status code.
     */
    statusCode?: number;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDResponse500 {
    error?: GetWorkspacesWorkspaceIDResponse500Error;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDTagsResponse {
    /**
     * A list of associated tags.
     */
    tags?: GetWorkspacesWorkspaceIDTagsResponseTagsItem[];
    [property: string]: any;
}

/**
 * Information about the tag.
 */
export interface GetWorkspacesWorkspaceIDTagsResponseTagsItem {
    /**
     * The tag's ID within a team or individual (non-team) user scope.
     */
    slug?: string;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDTagsResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDTagsResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDTagsResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface GetWorkspacesWorkspaceIDTagsResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the Private API Network element.
 */
export interface PANElementCreated {
    /**
     * The date and time at which the element was added.
     */
    addedAt?: string;
    /**
     * The user who added the element.
     */
    addedBy?: number;
    /**
     * The date and time at which the element was created.
     */
    createdAt?: string;
    /**
     * The user who created the element.
     */
    createdBy?: number;
    /**
     * The element's description.
     */
    description?: string;
    /**
     * A list of the element's environments.
     */
    environments?: string[];
    /**
     * The element's Postman URL.
     */
    href?: string;
    /**
     * The element's ID or UID.
     */
    id?: string;
    /**
     * The element's name.
     */
    name?: string;
    /**
     * The parent folder's ID.
     */
    parentFolderID?: number;
    /**
     * The element's summary.
     */
    summary?: string;
    /**
     * The element's type.
     */
    type?: string;
    /**
     * The date and time at which the element was last updated.
     */
    updatedAt?: string;
    /**
     * The user who last updated the element.
     */
    updatedBy?: number;
    [property: string]: any;
}

/**
 * Information about the Private API Network folder.
 */
export interface PANFolderCreated {
    /**
     * The date and time at which the element was created.
     */
    createdAt?: string;
    /**
     * The user who created the folder.
     */
    createdBy?: number;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The folder's ID.
     */
    id?: number;
    /**
     * The folder's name.
     */
    name?: string;
    /**
     * The parent folder ID.
     */
    parentFolderID?: number;
    /**
     * The folder's type. This is always the `folder` value.
     */
    type?: string;
    /**
     * The date and time at which the folder was updated.
     */
    updatedAt?: string;
    /**
     * The user who updated the folder.
     */
    updatedBy?: number;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDBody {
    collection?: PatchCollectionsCollectionIDBodyCollection;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDBodyCollection {
    auth?:   any;
    events?: any;
    /**
     * An object that contains the collection's updated name and description.
     */
    info?:      PatchCollectionsCollectionIDBodyCollectionInfo;
    variables?: any;
    [property: string]: any;
}

/**
 * An object that contains the collection's updated name and description.
 */
export interface PatchCollectionsCollectionIDBodyCollectionInfo {
    /**
     * The collection's updated description.
     */
    description?: string;
    /**
     * The collection's updated name.
     */
    name?: string;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse {
    collection?: PatchCollectionsCollectionIDResponseCollection;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponseCollection {
    /**
     * The collection's updated description.
     */
    description?: string;
    /**
     * The collection's ID.
     */
    id?: string;
    /**
     * The collection's updated name.
     */
    name?: string;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse400 {
    error?: PatchCollectionsCollectionIDResponse400Error;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse401 {
    error?: PatchCollectionsCollectionIDResponse401Error;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse403 {
    error?: PatchCollectionsCollectionIDResponse403Error;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse404 {
    error?: PatchCollectionsCollectionIDResponse404Error;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: PatchCollectionsCollectionIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PatchCollectionsCollectionIDResponse404ErrorDetails {
    /**
     * The collection ID.
     */
    id?: string;
    /**
     * The instance item.
     */
    item?: string;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse500 {
    error?: PatchCollectionsCollectionIDResponse500Error;
    [property: string]: any;
}

export interface PatchCollectionsCollectionIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PatchScimV2GroupsGroupIDBody {
    /**
     * Information about the group update operation.
     */
    operations?: PatchScimV2GroupsGroupIDBodyOperationsItem[];
    /**
     * The SCIM schema resource URI.
     */
    schemas?: string[];
    [property: string]: any;
}

export interface PatchScimV2GroupsGroupIDBodyOperationsItem {
    /**
     * The operation to perform.
     */
    op?: PurpleOp;
    /**
     * The operation's path. Include this value when you update a group's members.
     */
    path?: string;
    /**
     * The performed operation's value.
     */
    value?: PatchScimV2GroupsGroupIDBodyOperationsItemValue;
    [property: string]: any;
}

/**
 * The operation to perform.
 */
export enum PurpleOp {
    Add = "add",
    Remove = "remove",
    Replace = "replace",
}

/**
 * The performed operation's value.
 */
export interface PatchScimV2GroupsGroupIDBodyOperationsItemValue {
    /**
     * The group's name.
     */
    displayName?: string;
    /**
     * The group's ID.
     */
    id?: string;
    [property: string]: any;
}

export interface PatchScimV2GroupsGroupIDResponse {
    /**
     * The group's name.
     */
    displayName?: string;
    /**
     * The group's external ID.
     */
    externalID?: string;
    /**
     * The group's ID.
     */
    id?: string;
    /**
     * The response's non-standard meta information.
     */
    meta?: PatchScimV2GroupsGroupIDResponseMeta;
    /**
     * The SCIM schema resource URI.
     */
    schemas?: string[];
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface PatchScimV2GroupsGroupIDResponseMeta {
    /**
     * The date and time at which the group was created.
     */
    created?: string;
    /**
     * The date and time at which the group was last modified.
     */
    lastModified?: string;
    /**
     * The resource type.
     */
    resourceType?: string;
    [property: string]: any;
}

export interface PatchScimV2GroupsGroupIDResponse400 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * A list of SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The SCIM type.
     */
    scimType?: string;
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PatchScimV2GroupsGroupIDResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PatchScimV2GroupsGroupIDResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PatchScimV2GroupsGroupIDResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PatchScimV2GroupsGroupIDResponse429 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: number;
    [property: string]: any;
}

export interface PatchScimV2GroupsGroupIDResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PatchScimV2UsersUserIDBody {
    /**
     * Information about the user update operation.
     */
    operations?: PatchScimV2UsersUserIDBodyOperationsItem[];
    /**
     * The SCIM schema resource URI.
     */
    schemas?: string[];
    [property: string]: any;
}

export interface PatchScimV2UsersUserIDBodyOperationsItem {
    /**
     * The operation to perform.
     */
    op?: FluffyOp;
    /**
     * The performed operation's value.
     */
    value?: PatchScimV2UsersUserIDBodyOperationsItemValue;
    [property: string]: any;
}

/**
 * The operation to perform.
 */
export enum FluffyOp {
    Replace = "replace",
}

/**
 * The performed operation's value.
 */
export interface PatchScimV2UsersUserIDBodyOperationsItemValue {
    /**
     * Sets the user's `active` state:
     * - `true` — Activates the user. This lets them authenticate in to your Postman team.
     * - `false` — Removes the user from your Postman team and deactivates the account. This
     * blocks the user from authenticating in to Postman.
     */
    active?: boolean;
    [property: string]: any;
}

export interface PatchScimV2UsersUserIDResponse {
    /**
     * If true, the team member is active.
     */
    active?: boolean;
    /**
     * The team member's external ID.
     */
    externalID?: string;
    /**
     * The team member's SCIM ID.
     */
    id?: string;
    /**
     * The response's non-standard meta information.
     */
    meta?: PatchScimV2UsersUserIDResponseMeta;
    /**
     * Information about the Postman team member.
     */
    name?: PatchScimV2UsersUserIDResponseName;
    /**
     * A list of schema resource URIs.
     */
    schemas?: string[];
    /**
     * The team member's SCIM username.
     */
    userName?: string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface PatchScimV2UsersUserIDResponseMeta {
    /**
     * The date and time at which the team member was created.
     */
    created?: string;
    /**
     * The date and time at which the team member was last modified.
     */
    lastModified?: string;
    /**
     * The resource type.
     */
    resourceType?: string;
    [property: string]: any;
}

/**
 * Information about the Postman team member.
 */
export interface PatchScimV2UsersUserIDResponseName {
    /**
     * The team member's last name.
     */
    familyName?: string;
    /**
     * The team member's first name.
     */
    givenName?: string;
    [property: string]: any;
}

export interface PatchScimV2UsersUserIDResponse400 {
    detail?:  string;
    schemas?: string[];
    status?:  string;
    [property: string]: any;
}

export interface PatchScimV2UsersUserIDResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PatchScimV2UsersUserIDResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PatchScimV2UsersUserIDResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PatchScimV2UsersUserIDResponse429 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: number;
    [property: string]: any;
}

export interface PatchScimV2UsersUserIDResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostApisAPIIDCollectionsResponse {
    /**
     * The collection's ID.
     */
    id?: string;
    [property: string]: any;
}

export interface PostApisAPIIDCollectionsResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDCollectionsResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDCollectionsResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDCollectionsResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the API schema.
 */
export interface PostApisAPIIDSchemasBody {
    /**
     * The list of files that are part of the schema.
     */
    files: PostApisAPIIDSchemasBodyFilesItem[];
    /**
     * The schema's type.
     */
    type: PostApisAPIIDSchemasBodyType;
    [property: string]: any;
}

export interface PostApisAPIIDSchemasBodyFilesItem {
    /**
     * The schema file's stringified contents.
     */
    content?: string;
    /**
     * The schema's file path.
     */
    path?: string;
    /**
     * Information about the schema's root file.
     */
    root?: PostApisAPIIDSchemasBodyFilesItemRoot;
    [property: string]: any;
}

/**
 * Information about the schema's root file.
 */
export interface PostApisAPIIDSchemasBodyFilesItemRoot {
    /**
     * If true, tag the file as the root file. The root tag is only allowed for protobuf
     * specifications.
     */
    enabled?: boolean;
    [property: string]: any;
}

/**
 * The schema's type.
 *
 * The type of schema.
 */
export enum PostApisAPIIDSchemasBodyType {
    Asyncapi2 = "asyncapi:2",
    Graphql = "graphql",
    Openapi1 = "openapi:1",
    Openapi2 = "openapi:2",
    Openapi3 = "openapi:3",
    Openapi3_1 = "openapi:3_1",
    Proto2 = "proto:2",
    Proto3 = "proto:3",
    Raml0_8 = "raml:0_8",
    Raml1 = "raml:1",
    WSDL1 = "wsdl:1",
    WSDL2 = "wsdl:2",
}

/**
 * Information about the created API schema.
 */
export interface PostApisAPIIDSchemasResponse {
    /**
     * The date and time at which the schema was created.
     */
    createdAt?: string;
    /**
     * The user ID of the user that created the schema.
     */
    createdBy?: string;
    /**
     * The list of the schema's files.
     */
    files?: PostApisAPIIDSchemasResponseFilesItem[];
    /**
     * The schema's ID.
     */
    id?: string;
    /**
     * The schema's type.
     */
    type?: PostApisAPIIDSchemasBodyType;
    /**
     * The date and time at which the schema was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user that updated the schema.
     */
    updatedBy?: string;
    [property: string]: any;
}

/**
 * Information about the schema file.
 */
export interface PostApisAPIIDSchemasResponseFilesItem {
    /**
     * The date and time at which the file was created.
     */
    createdAt?: string;
    /**
     * The user Id of the user that created the file.
     */
    createdBy?: string;
    /**
     * The schema file's ID.
     */
    id?: string;
    /**
     * The schema file's name.
     */
    name?: string;
    /**
     * The file system path to the schema file.
     */
    path?: string;
    /**
     * The date and time at which the file was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user that last updated the file.
     */
    updatedBy?: string;
    [property: string]: any;
}

export interface PostApisAPIIDSchemasResponse400 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDSchemasResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDSchemasResponse403 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDSchemasResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDSchemasResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDSchemasResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDVersionsResponse {
    /**
     * The date and time at which the version was created.
     */
    createdAt?: string;
    /**
     * The version's ID.
     */
    id?: string;
    /**
     * The version's name.
     */
    name?: string;
    /**
     * Information about the API version release. For example, changelog notes.
     */
    releaseNotes?: string;
    /**
     * The date and time at which the version was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface PostApisAPIIDVersionsResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDVersionsResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDVersionsResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDVersionsResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisAPIIDVersionsResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the API.
 */
export interface PostApisBody {
    /**
     * The API's description. This supports Markdown formatting.
     */
    description?: string;
    /**
     * The API's name.
     */
    name: string;
    /**
     * The API's short summary.
     */
    summary?: string;
    [property: string]: any;
}

/**
 * The API's base data schema.
 */
export interface PostApisResponse {
    /**
     * The date and time at which the API was created.
     */
    createdAt?: string;
    /**
     * The Postman ID of the user that created the API.
     */
    createdBy?: number;
    /**
     * The API's description.
     */
    description?: string;
    /**
     * The API's ID.
     */
    id?: string;
    /**
     * The API's name.
     */
    name?: string;
    /**
     * The API's short summary.
     */
    summary?: string;
    /**
     * The date and time at which the API was updated.
     */
    updatedAt?: string;
    /**
     * The Postman ID of the user that updated the API.
     */
    updatedBy?: number;
    [property: string]: any;
}

export interface PostApisResponse400 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostApisResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostCollectionsBody {
    /**
     * For a complete list of values, refer to the [collection.json schema
     * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
     */
    collection?: PostCollectionsBodyCollection;
    [property: string]: any;
}

/**
 * For a complete list of values, refer to the [collection.json schema
 * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
 */
export interface PostCollectionsBodyCollection {
    /**
     * An object that contains basic information about the collection. For a complete list of
     * values, refer to the `definitions.info` entry in the [collection.json schema
     * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
     */
    info: PostCollectionsBodyCollectionInfo;
    /**
     * Information about the collection's HTTP requests and responses. For a complete list of
     * values, refer to the `definitions.item` entry in the [collection.json schema
     * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
     */
    item?: PostCollectionsBodyCollectionItemItem[];
    [property: string]: any;
}

/**
 * An object that contains basic information about the collection. For a complete list of
 * values, refer to the `definitions.info` entry in the [collection.json schema
 * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
 */
export interface PostCollectionsBodyCollectionInfo {
    /**
     * The collection's name.
     */
    name: string;
    /**
     * A URL to the collection's schema.
     */
    schema: string;
    [property: string]: any;
}

export interface PostCollectionsBodyCollectionItemItem {
    request: any;
    [property: string]: any;
}

/**
 * Information about the collection folder. For a complete list of properties, refer to the
 * [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 *
 * **Note:**
 *
 * It is recommended that you pass the `name` property in the request body. If you do not,
 * the system uses a null value. As a result, this creates a folder with a blank name.
 */
export interface PostCollectionsCollectionIDFoldersBody {
    /**
     * The ID of a folder in which to create the folder.
     */
    folder?: string;
    /**
     * The folder's name. It is recommended that you pass the `name` property in the request
     * body. If you do not, the system uses a null value. As a result, this creates a folder
     * with a blank name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDFoldersResponse {
    /**
     * Information about the collection folder. For a complete list of properties, refer to the
     * [collection.json schema
     * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
     */
    data?: PostCollectionsCollectionIDFoldersResponseData;
    meta?: any;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    revision?: number;
    [property: string]: any;
}

/**
 * Information about the collection folder. For a complete list of properties, refer to the
 * [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface PostCollectionsCollectionIDFoldersResponseData {
    /**
     * The collection ID that the folder belongs to.
     */
    collection?: string;
    /**
     * The folder's creation date and time.
     */
    createdAt?: string;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * Information about the folder.
     */
    folder?: string;
    /**
     * A list of folders.
     */
    folders?: string[];
    /**
     * A list of folder IDs and their order in the collection.
     */
    foldersOrder?: string[];
    /**
     * The folder's ID.
     */
    id?: string;
    /**
     * The user ID of the user that last updated the folder.
     */
    lastUpdatedBy?: string;
    /**
     * The folder's name.
     */
    name?: string;
    /**
     * A list of request IDs and their order in the created folder.
     */
    order?: string[];
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    /**
     * A list of requests.
     */
    requests?: string[];
    /**
     * The date and time at which the folder was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDFoldersResponse400 {
    error?: PostCollectionsCollectionIDFoldersResponse400Error;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDFoldersResponse400Error {
    /**
     * Information about the error.
     */
    details?: PostCollectionsCollectionIDFoldersResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostCollectionsCollectionIDFoldersResponse400ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDFoldersResponse401 {
    error?: PostCollectionsCollectionIDFoldersResponse401Error;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDFoldersResponse401Error {
    /**
     * Information about the error.
     */
    details?: PostCollectionsCollectionIDFoldersResponse401ErrorDetails;
    /**
     * The error's message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostCollectionsCollectionIDFoldersResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDFoldersResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the request. For a complete list of properties, refer to the
 * `definitions.request` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 *
 * **Note:**
 *
 * It is recommended that you pass the `name` property in the request body. If you do not,
 * the system uses a null value. As a result, this creates a request with a blank name.
 */
export interface PostCollectionsCollectionIDRequestsBody {
    /**
     * The request's name. It is recommended that you pass the `name` property in the request
     * body. If you do not, the system uses a null value. As a result, this creates a request
     * with a blank name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDRequestsResponse {
    /**
     * Information about the created request. For a complete list of properties, refer to the
     * `definitions.request` property in the [collection.json schema
     * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
     */
    data?: PostCollectionsCollectionIDRequestsResponseData;
    meta?: any;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    revision?: number;
    [property: string]: any;
}

/**
 * Information about the created request. For a complete list of properties, refer to the
 * `definitions.request` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface PostCollectionsCollectionIDRequestsResponseData {
    /**
     * The collection ID that the request belongs to.
     */
    collection?: string;
    /**
     * The requeset's creation date and time.
     */
    createdAt?: string;
    /**
     * Information about the request's parent folder.
     */
    folder?: string;
    /**
     * The request's ID.
     */
    id?: string;
    /**
     * The user ID of the user that last updated the folder.
     */
    lastUpdatedBy?: string;
    /**
     * The request's name.
     */
    name?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    /**
     * A list of the request's responses.
     */
    responses?: string[];
    /**
     * A list of response IDs and their order in the folder.
     */
    responsesOrder?: string[];
    /**
     * The date and time at which the request was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDRequestsResponse400 {
    error?: PostCollectionsCollectionIDRequestsResponse400Error;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDRequestsResponse400Error {
    /**
     * Information about the error.
     */
    details?: PostCollectionsCollectionIDRequestsResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostCollectionsCollectionIDRequestsResponse400ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDRequestsResponse401 {
    error?: PostCollectionsCollectionIDRequestsResponse401Error;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDRequestsResponse401Error {
    /**
     * Information about the error.
     */
    details?: PostCollectionsCollectionIDRequestsResponse401ErrorDetails;
    /**
     * The error's message.
     */
    message?: string;
    /**
     * The error's name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostCollectionsCollectionIDRequestsResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDRequestsResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the response. For a complete list of properties, refer to the
 * `definitions.request.responses` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 *
 * **Note:**
 *
 * It is recommended that you pass the `name` property in the request body. If you do not,
 * the system uses a null value. As a result, this creates a response with a blank name.
 */
export interface PostCollectionsCollectionIDResponsesBody {
    /**
     * The response's name. It is recommended that you pass the `name` property in the request
     * body. If you do not, the system uses a null value. As a result, this creates a response
     * with a blank name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDResponsesResponse {
    /**
     * Information about the response. For a complete list of properties, refer to the
     * `definitions.request.responses` property in the [collection.json schema
     * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
     */
    data?: PostCollectionsCollectionIDResponsesResponseData;
    meta?: any;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    revision?: number;
    [property: string]: any;
}

/**
 * Information about the response. For a complete list of properties, refer to the
 * `definitions.request.responses` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface PostCollectionsCollectionIDResponsesResponseData {
    /**
     * The date and time at which the response was created.
     */
    createdAt?: string;
    /**
     * The response's ID.
     */
    id?: string;
    /**
     * The user ID of the user who last updated the response.
     */
    lastUpdatedBy?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    /**
     * The request ID of the response's associated request.
     */
    request?: string;
    /**
     * The date and time at which the response was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDResponsesResponse400 {
    error?: PostCollectionsCollectionIDResponsesResponse400Error;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDResponsesResponse400Error {
    /**
     * Information about the error.
     */
    details?: PostCollectionsCollectionIDResponsesResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostCollectionsCollectionIDResponsesResponse400ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDResponsesResponse401 {
    error?: PostCollectionsCollectionIDResponsesResponse401Error;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDResponsesResponse401Error {
    /**
     * Information about the error.
     */
    details?: PostCollectionsCollectionIDResponsesResponse401ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostCollectionsCollectionIDResponsesResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PostCollectionsCollectionIDResponsesResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostCollectionsForkCollectionIDBody {
    /**
     * The fork's label.
     */
    label: string;
    [property: string]: any;
}

export interface PostCollectionsForkCollectionIDResponse {
    /**
     * Information about the forked collection.
     */
    collection?: PostCollectionsForkCollectionIDResponseCollection;
    [property: string]: any;
}

/**
 * Information about the forked collection.
 */
export interface PostCollectionsForkCollectionIDResponseCollection {
    /**
     * Information about the collection's fork.
     */
    fork?: PostCollectionsForkCollectionIDResponseCollectionFork;
    /**
     * The forked collection's ID.
     */
    id?: string;
    /**
     * The collection's name.
     */
    name?: string;
    /**
     * The forked collection's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

/**
 * Information about the collection's fork.
 */
export interface PostCollectionsForkCollectionIDResponseCollectionFork {
    /**
     * The fork's creation date and time.
     */
    createdAt?: string;
    /**
     * The unique ID of fork's source collection.
     */
    from?: string;
    /**
     * The fork's label.
     */
    label?: string;
    [property: string]: any;
}

export interface PostCollectionsForkCollectionIDResponse401 {
    error?: PostCollectionsForkCollectionIDResponse401Error;
    [property: string]: any;
}

export interface PostCollectionsForkCollectionIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostCollectionsForkCollectionIDResponse404 {
    error?: PostCollectionsForkCollectionIDResponse404Error;
    [property: string]: any;
}

export interface PostCollectionsForkCollectionIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: PostCollectionsForkCollectionIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostCollectionsForkCollectionIDResponse404ErrorDetails {
    /**
     * The collection ID.
     */
    id?: string;
    /**
     * The instance item.
     */
    item?: string;
    [property: string]: any;
}

export interface PostCollectionsForkCollectionIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostCollectionsForkCollectionIDResponse500 {
    error?: PostCollectionsForkCollectionIDResponse500Error;
    [property: string]: any;
}

export interface PostCollectionsForkCollectionIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostCollectionsMergeBody {
    /**
     * The destination collection's unique ID.
     */
    destination: string;
    /**
     * The forked collection's unique ID.
     */
    source: string;
    /**
     * The fork's merge strategy:
     *
     * - `deleteSource` — The system deletes the forked collection after a successful merge into
     * the destination collection.
     * - `updateSourceWithDestination` — The system only merges the forked collection into the
     * destination collection.
     */
    strategy?: Strategy;
    [property: string]: any;
}

/**
 * The fork's merge strategy:
 *
 * - `deleteSource` — The system deletes the forked collection after a successful merge into
 * the destination collection.
 * - `updateSourceWithDestination` — The system only merges the forked collection into the
 * destination collection.
 */
export enum Strategy {
    DeleteSource = "deleteSource",
    UpdateSourceWithDestination = "updateSourceWithDestination",
}

export interface PostCollectionsMergeResponse {
    collection?: PostCollectionsMergeResponseCollection;
    [property: string]: any;
}

export interface PostCollectionsMergeResponseCollection {
    /**
     * The source collection's ID.
     */
    id?: string;
    /**
     * The source collection's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface PostCollectionsMergeResponse401 {
    error?: PostCollectionsMergeResponse401Error;
    [property: string]: any;
}

export interface PostCollectionsMergeResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostCollectionsMergeResponse404 {
    error?: PostCollectionsMergeResponse404Error;
    [property: string]: any;
}

export interface PostCollectionsMergeResponse404Error {
    /**
     * Information about the error.
     */
    details?: PostCollectionsMergeResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostCollectionsMergeResponse404ErrorDetails {
    /**
     * The collection ID.
     */
    id?: string;
    /**
     * The instance item.
     */
    item?: string;
    [property: string]: any;
}

export interface PostCollectionsMergeResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostCollectionsMergeResponse500 {
    error?: PostCollectionsMergeResponse500Error;
    [property: string]: any;
}

export interface PostCollectionsMergeResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostCollectionsResponse {
    collection?: PostCollectionsResponseCollection;
    [property: string]: any;
}

export interface PostCollectionsResponseCollection {
    /**
     * The collection's ID.
     */
    id?: string;
    /**
     * The collection's name.
     */
    name?: string;
    /**
     * The collection's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface PostCollectionsResponse400 {
    error?: PostCollectionsResponse400Error;
    [property: string]: any;
}

export interface PostCollectionsResponse400Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostCollectionsResponse401 {
    error?: PostCollectionsResponse401Error;
    [property: string]: any;
}

export interface PostCollectionsResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostCollectionsResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostCollectionsResponse500 {
    error?: PostCollectionsResponse500Error;
    [property: string]: any;
}

export interface PostCollectionsResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostDetectedSecretsQueriesBody {
    /**
     * If true, return secrets with a `resolved` status.
     */
    resolved?: boolean;
    /**
     * A list of secrets types to query. For a list of valid IDs, use the GET `/secret-types`
     * endpoint.
     */
    secretTypes?: string[];
    /**
     * A list of the types of resolution statuses to query.
     */
    statuses?: Resolution[];
    /**
     * A list of workspaces IDs to query.
     */
    workspaceIDS?: string[];
    /**
     * A list of workspace [visibility
     * settings](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility)
     * to query. This currently supports the `team` and `public` settings.
     */
    workspaceVisiblities?: string[];
    [property: string]: any;
}

/**
 * The secret resolution status type:
 * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
 * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
 * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
 * publishing it.
 *
 *
 * The secret's updated resolution status:
 * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
 * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
 * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
 * publishing it.
 */
export enum Resolution {
    AcceptedRisk = "ACCEPTED_RISK",
    FalsePositive = "FALSE_POSITIVE",
    Revoked = "REVOKED",
}

export interface PostDetectedSecretsQueriesResponse {
    data?: PostDetectedSecretsQueriesResponseDataItem[];
    /**
     * The response's meta information for paginated results.
     */
    meta?: PostDetectedSecretsQueriesResponseMeta;
    [property: string]: any;
}

/**
 * Information about the secret finding.
 */
export interface PostDetectedSecretsQueriesResponseDataItem {
    /**
     * The date and time at which the secret was first detected.
     */
    detectedAt?: string;
    /**
     * The secret's obfuscated value.
     */
    obfuscatedSecret?: string;
    /**
     * The number of times the secret was found in the workspace.
     */
    occurrences?: number;
    /**
     * The secret's current status:
     * - `ACTIVE` — The secret is active.
     * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
     * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
     * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
     * publishing it.
     */
    resolution?: ResolutionEnum;
    /**
     * The SHA-256 hash of the detected secret.
     */
    secretHash?: string;
    /**
     * The detected secret's ID.
     */
    secretID?: string;
    /**
     * The type of the secret.
     */
    secretType?: string;
    /**
     * The ID of the workspace that contains the secret.
     */
    workspaceID?: string;
    /**
     * The workspace's [visibility
     * setting](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility).
     */
    workspaceVisibility?: WorkspaceVisibility;
    [property: string]: any;
}

/**
 * The workspace's [visibility
 * setting](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility).
 *
 * The new workspace visibility
 * [type](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility).
 * This property does **not** support the following workspace visibility changes:
 * - `private` to `public`
 * - `public` to `private`
 * - `private` to `personal`
 * - `team` to `personal`
 * - `public` to `personal` for a team user
 */
export enum WorkspaceVisibility {
    Personal = "personal",
    Private = "private",
    Public = "public",
    Team = "team",
}

/**
 * The response's meta information for paginated results.
 */
export interface PostDetectedSecretsQueriesResponseMeta {
    /**
     * The maximum number of records in the paginated response.
     */
    limit?: number;
    /**
     * The Base64-encoded value that points to the next record in the results set.
     */
    nextCursor?: null | string;
    /**
     * The number of records that match the defined criteria. This will only be present if the
     * `include` query parameter is specified with the `meta.total` value.
     */
    total?: number;
    [property: string]: any;
}

export interface PostDetectedSecretsQueriesResponse400 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostDetectedSecretsQueriesResponse401 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostDetectedSecretsQueriesResponse403 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostDetectedSecretsQueriesResponse500 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PostEnvironmentsBody {
    environment?: PostEnvironmentsBodyEnvironment;
    [property: string]: any;
}

export interface PostEnvironmentsBodyEnvironment {
    /**
     * The environment's name.
     */
    name: string;
    /**
     * Information about the environment's variables.
     */
    values?: Array<PostEnvironmentsBodyEnvironmentValuesItemItem[]>;
    [property: string]: any;
}

export interface PostEnvironmentsBodyEnvironmentValuesItemItem {
    /**
     * If true, the variable is enabled.
     */
    enabled?: boolean;
    /**
     * The variable's name.
     */
    key?: string;
    /**
     * The variable type.
     */
    type?: PurpleType;
    /**
     * The variable's value.
     */
    value?: string;
    [property: string]: any;
}

export interface PostEnvironmentsResponse {
    environment?: PostEnvironmentsResponseEnvironment;
    [property: string]: any;
}

export interface PostEnvironmentsResponseEnvironment {
    /**
     * The environment's ID.
     */
    id?: string;
    /**
     * The environment's name.
     */
    name?: string;
    /**
     * The environment's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface PostEnvironmentsResponse400 {
    error?: PostEnvironmentsResponse400Error;
    [property: string]: any;
}

export interface PostEnvironmentsResponse400Error {
    details?: string[];
    message?: string;
    name?:    string;
    [property: string]: any;
}

export interface PostEnvironmentsResponse401 {
    error?: PostEnvironmentsResponse401Error;
    [property: string]: any;
}

export interface PostEnvironmentsResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostEnvironmentsResponse403 {
    error?: PostEnvironmentsResponse403Error;
    [property: string]: any;
}

export interface PostEnvironmentsResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostEnvironmentsResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostEnvironmentsResponse500 {
    error?: PostEnvironmentsResponse500Error;
    [property: string]: any;
}

export interface PostEnvironmentsResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostImportOpenapiResponse {
    collections?: PostImportOpenapiResponseCollectionsItem[];
    [property: string]: any;
}

export interface PostImportOpenapiResponseCollectionsItem {
    /**
     * The collection's ID.
     */
    id?: string;
    /**
     * The collection's name.
     */
    name?: string;
    /**
     * The collection's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface PostImportOpenapiResponse400 {
    error?: PostImportOpenapiResponse400Error;
    [property: string]: any;
}

export interface PostImportOpenapiResponse400Error {
    /**
     * Information about the error.
     */
    details?: PostImportOpenapiResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostImportOpenapiResponse400ErrorDetails {
    /**
     * The parameter name.
     */
    param?: string;
    [property: string]: any;
}

export interface PostImportOpenapiResponse401 {
    error?: PostImportOpenapiResponse401Error;
    [property: string]: any;
}

export interface PostImportOpenapiResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostImportOpenapiResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostImportOpenapiResponse500 {
    error?: PostImportOpenapiResponse500Error;
    [property: string]: any;
}

export interface PostImportOpenapiResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMocksBody {
    mock?: PostMocksBodyMock;
    [property: string]: any;
}

export interface PostMocksBodyMock {
    /**
     * The mock's associated collection unique ID.
     */
    collection: string;
    /**
     * The mock server's associated environment ID.
     */
    environment?: string;
    /**
     * The mock server's name.
     */
    name?: string;
    /**
     * If true, the mock server is set private. By default, mock servers are public and can
     * receive requests from anyone and anywhere.
     */
    private?: boolean;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse {
    mock?: PostMocksMockIDPublishResponseMock;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponseMock {
    /**
     * The mock server's ID.
     */
    id?: string;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse400 {
    error?: PostMocksMockIDPublishResponse400Error;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse401 {
    error?: PostMocksMockIDPublishResponse401Error;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse404 {
    error?: PostMocksMockIDPublishResponse404Error;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse404Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse500 {
    error?: PostMocksMockIDPublishResponse500Error;
    [property: string]: any;
}

export interface PostMocksMockIDPublishResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesBody {
    serverResponse?: PostMocksMockIDServerResponsesBodyServerResponse;
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesBodyServerResponse {
    /**
     * The server response's body that returns when calling the mock server.
     */
    body?: string;
    /**
     * The server response's request headers, such as Content-Type, Accept, encoding, and other
     * information.
     */
    headers?: PostMocksMockIDServerResponsesBodyServerResponseHeadersItem[];
    /**
     * The server response's body language type.
     */
    language?: DeleteMocksMockIDServerResponsesServerResponseIDResponseLanguage;
    /**
     * The server response's name.
     */
    name: string;
    /**
     * The server response's 5xx HTTP response code. This property **only** accepts 5xx values.
     */
    statusCode: number;
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesBodyServerResponseHeadersItem {
    /**
     * The request header's key value.
     */
    key?: string;
    /**
     * The request header's value.
     */
    value?: string;
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesResponse400 {
    error?: PostMocksMockIDServerResponsesResponse400Error;
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesResponse400Error {
    /**
     * Information about the error.
     */
    details?: PostMocksMockIDServerResponsesResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostMocksMockIDServerResponsesResponse400ErrorDetails {
    /**
     * Information about the missing parameter.
     */
    param?: string[];
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesResponse401 {
    error?: PostMocksMockIDServerResponsesResponse401Error;
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesResponse500 {
    error?: PostMocksMockIDServerResponsesResponse500Error;
    [property: string]: any;
}

export interface PostMocksMockIDServerResponsesResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the server response.
 */
export interface PostMocksMockIDServerResponsesResponseItem {
    /**
     * The date and time at which the server response was created.
     */
    createdAt?: string;
    /**
     * The user ID of the user who created the server response.
     */
    createdBy?: string;
    /**
     * The server response's ID.
     */
    id?: string;
    /**
     * The server response's name.
     */
    name?: string;
    /**
     * The server response's 5xx HTTP response code.
     */
    statusCode?: number;
    /**
     * The date and time at which the server response was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user who last updated the server response.
     */
    updatedBy?: string;
    [property: string]: any;
}

export interface PostMocksResponse {
    mock?: PostMocksResponseMock;
    [property: string]: any;
}

export interface PostMocksResponseMock {
    /**
     * The mock's associated collection unique ID.
     */
    collection?: string;
    /**
     * Information about the mock server's configuration.
     */
    config?: PostMocksResponseMockConfig;
    /**
     * The date and time at which the mock server was created.
     */
    createdAt?: string;
    /**
     * The mock's associated environment unique ID.
     */
    environment?: string;
    /**
     * The mock server's ID.
     */
    id?: string;
    /**
     * The mock server URL.
     */
    mockURL?: string;
    /**
     * The ID of mock server's owner.
     */
    owner?: string;
    /**
     * The mock server's unique ID.
     */
    uid?: string;
    /**
     * The date and time at which the mock server was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

/**
 * Information about the mock server's configuration.
 */
export interface PostMocksResponseMockConfig {
    /**
     * Information about the mock server's simulated network delay settings. This returns a null
     * value if there are no configured network delay settings.
     */
    delay?: null | PostMocksResponseMockConfigDelay;
    /**
     * A list of the mock server's headers.
     */
    headers?: string[];
    /**
     * If true, match the request body.
     */
    matchBody?: boolean;
    /**
     * If true, match query parameters.
     */
    matchQueryParams?: boolean;
    /**
     * If true, use wildcard variable matching.
     */
    matchWildcards?: boolean;
    /**
     * The ID of mock server's default response for requests. All calls to the mock server will
     * return the defined response.
     */
    serverResponseID?: null | string;
    [property: string]: any;
}

export interface PostMocksResponseMockConfigDelay {
    /**
     * The configured delay, in milliseconds.
     */
    duration?: number;
    /**
     * The simulated fixed network delay value:
     *
     * - `1` — 2G (300 ms).
     * - `2` — 3G (100 ms).
     *
     * The object does not return this value for custom delay values.
     */
    preset?: Preset;
    /**
     * The type of simulated delay value:
     *
     * - `fixed` — The delay value is a fixed value.
     */
    type?: GetMocksResponseMocksItemConfigDelayType;
    [property: string]: any;
}

export interface PostMocksResponse400 {
    error?: PostMocksResponse400Error;
    [property: string]: any;
}

export interface PostMocksResponse400Error {
    /**
     * Information about the error.
     */
    details?: PostMocksResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PostMocksResponse400ErrorDetails {
    /**
     * Information about the missing parameter.
     */
    param?: string[];
    [property: string]: any;
}

export interface PostMocksResponse401 {
    error?: PostMocksResponse401Error;
    [property: string]: any;
}

export interface PostMocksResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMocksResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostMocksResponse500 {
    error?: PostMocksResponse500Error;
    [property: string]: any;
}

export interface PostMocksResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMonitorsBody {
    monitor?: PostMonitorsBodyMonitor;
    [property: string]: any;
}

export interface PostMonitorsBodyMonitor {
    /**
     * The monitor's associated collection unique ID.
     */
    collection?: string;
    /**
     * The monitor's associated environment unique ID.
     */
    environment?: string;
    /**
     * The monitor's name.
     */
    name?: string;
    /**
     * Information about the monitor's schedule.
     */
    schedule?: PostMonitorsBodyMonitorSchedule;
    [property: string]: any;
}

/**
 * Information about the monitor's schedule.
 */
export interface PostMonitorsBodyMonitorSchedule {
    /**
     * The monitor's run frequency, based on the given cron pattern.
     * At this time you can only create monitors with limited schedules. For information about
     * the available schedules, see our [Postman Monitors](https://monitor.getpostman.com)
     * collection.
     */
    cron?: string;
    /**
     * The monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
     */
    timezone?: string;
    [property: string]: any;
}

export interface PostMonitorsMonitorIDRunResponse {
    /**
     * Information about the monitor run.
     */
    run?: PostMonitorsMonitorIDRunResponseRun;
    [property: string]: any;
}

/**
 * Information about the monitor run.
 */
export interface PostMonitorsMonitorIDRunResponseRun {
    /**
     * Information about the monitor run's executions.
     */
    executions?: PostMonitorsMonitorIDRunResponseRunExecutionsItem[];
    /**
     * If the monitor run failed, information about the run's failures.
     */
    failures?: any[];
    /**
     * Information about the monitor.
     */
    info?: PostMonitorsMonitorIDRunResponseRunInfo;
    /**
     * Information about the monitor run's stats.
     */
    stats?: PostMonitorsMonitorIDRunResponseRunStats;
    [property: string]: any;
}

export interface PostMonitorsMonitorIDRunResponseRunExecutionsItem {
    /**
     * The execution ID.
     */
    id?: number;
    /**
     * Information about the executed item.
     */
    item?: PostMonitorsMonitorIDRunResponseRunExecutionsItemItem;
    /**
     * Information about the monitor run's requests.
     */
    request?: PostMonitorsMonitorIDRunResponseRunExecutionsItemRequest;
    /**
     * Information about the monitor run's response.
     */
    response?: PostMonitorsMonitorIDRunResponseRunExecutionsItemResponse;
    [property: string]: any;
}

/**
 * Information about the executed item.
 */
export interface PostMonitorsMonitorIDRunResponseRunExecutionsItemItem {
    /**
     * The executed item's name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the monitor run's requests.
 */
export interface PostMonitorsMonitorIDRunResponseRunExecutionsItemRequest {
    body?:    any;
    headers?: any;
    /**
     * The request method.
     */
    method?: string;
    /**
     * The date and time of the request.
     */
    timestamp?: string;
    /**
     * The request's URL.
     */
    url?: string;
    [property: string]: any;
}

/**
 * Information about the monitor run's response.
 */
export interface PostMonitorsMonitorIDRunResponseRunExecutionsItemResponse {
    body?: any;
    /**
     * The response's HTTP status code.
     */
    code?:    number;
    headers?: any;
    /**
     * The response size, in bytes.
     */
    responseSize?: number;
    /**
     * The response time, in milliseconds.
     */
    responseTime?: number;
    [property: string]: any;
}

/**
 * Information about the monitor.
 */
export interface PostMonitorsMonitorIDRunResponseRunInfo {
    /**
     * The monitor's associated collection unique ID.
     */
    collectionUid?: string;
    /**
     * The monitor's associated environment unique ID.
     */
    environmentUid?: string;
    /**
     * The date and time at which the monitor's run completed.
     */
    finishedAt?: string;
    /**
     * The monitor's run job ID.
     */
    jobID?: string;
    /**
     * The monitor's ID.
     */
    monitorID?: string;
    /**
     * The monitor's name.
     */
    name?: string;
    /**
     * The date and time at which the monitor run began.
     */
    startedAt?: string;
    /**
     * The monitor run's status.
     */
    status?: string;
    [property: string]: any;
}

/**
 * Information about the monitor run's stats.
 */
export interface PostMonitorsMonitorIDRunResponseRunStats {
    /**
     * The monitor run's assertions stats.
     */
    assertions?: PostMonitorsMonitorIDRunResponseRunStatsAssertions;
    /**
     * The monitor run's request stats.
     */
    requests?: PostMonitorsMonitorIDRunResponseRunStatsRequests;
    [property: string]: any;
}

/**
 * The monitor run's assertions stats.
 */
export interface PostMonitorsMonitorIDRunResponseRunStatsAssertions {
    /**
     * The total number of test failures.
     */
    failed?: number;
    /**
     * The total number of tests performed.
     */
    total?: number;
    [property: string]: any;
}

/**
 * The monitor run's request stats.
 */
export interface PostMonitorsMonitorIDRunResponseRunStatsRequests {
    /**
     * The number of request failures.
     */
    failed?: number;
    /**
     * The total number of requests.
     */
    total?: number;
    [property: string]: any;
}

export interface PostMonitorsMonitorIDRunResponse401 {
    error?: PostMonitorsMonitorIDRunResponse401Error;
    [property: string]: any;
}

export interface PostMonitorsMonitorIDRunResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMonitorsMonitorIDRunResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostMonitorsMonitorIDRunResponse500 {
    error?: PostMonitorsMonitorIDRunResponse500Error;
    [property: string]: any;
}

export interface PostMonitorsMonitorIDRunResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMonitorsResponse {
    monitor?: PostMonitorsResponseMonitor;
    [property: string]: any;
}

export interface PostMonitorsResponseMonitor {
    /**
     * The monitor's ID.
     */
    id?: string;
    /**
     * The monitor's name.
     */
    name?: string;
    /**
     * The monitor's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface PostMonitorsResponse400 {
    error?: PostMonitorsResponse400Error;
    [property: string]: any;
}

export interface PostMonitorsResponse400Error {
    details?: any;
    message?: string;
    name?:    string;
    [property: string]: any;
}

export interface PostMonitorsResponse401 {
    error?: PostMonitorsResponse401Error;
    [property: string]: any;
}

export interface PostMonitorsResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMonitorsResponse403 {
    error?: PostMonitorsResponse403Error;
    [property: string]: any;
}

export interface PostMonitorsResponse403Error {
    /**
     * The error description.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostMonitorsResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostMonitorsResponse500 {
    error?: PostMonitorsResponse500Error;
    [property: string]: any;
}

export interface PostMonitorsResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostNetworkPrivateResponse401 {
    error?: PostNetworkPrivateResponse401Error;
    [property: string]: any;
}

export interface PostNetworkPrivateResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostNetworkPrivateResponse403 {
    error?: PostNetworkPrivateResponse403Error;
    [property: string]: any;
}

export interface PostNetworkPrivateResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostNetworkPrivateResponse404 {
    error?: PostNetworkPrivateResponse404Error;
    [property: string]: any;
}

export interface PostNetworkPrivateResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostNetworkPrivateResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostNetworkPrivateResponse500 {
    error?: PostNetworkPrivateResponse500Error;
    [property: string]: any;
}

export interface PostNetworkPrivateResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostScimV2GroupsBody {
    /**
     * If true, activates the user. This lets them authenticate in to your Postman team.
     */
    active?: boolean;
    /**
     * The user's external ID.
     */
    externalID?: string;
    /**
     * A list of groups to which to assign the user to.
     */
    groups?: string[];
    /**
     * The user's IETF locale.
     */
    locale?: string;
    /**
     * Information about the user's name.
     */
    name?: PostScimV2GroupsBodyName;
    /**
     * The SCIM schema resource URI.
     */
    schemas?: string[];
    /**
     * The user's username.
     */
    userName?: string;
    [property: string]: any;
}

/**
 * Information about the user's name.
 */
export interface PostScimV2GroupsBodyName {
    /**
     * The user's last name.
     */
    familyName?: string;
    /**
     * The user's first name.
     */
    givenName?: string;
    [property: string]: any;
}

export interface PostScimV2GroupsResponse {
    /**
     * If true, the user is active.
     */
    active?: boolean;
    /**
     * The user's external ID.
     */
    externalID?: string;
    /**
     * The user's SCIM ID.
     */
    id?: string;
    /**
     * The response's non-standard meta information.
     */
    meta?: PostScimV2GroupsResponseMeta;
    name?: PostScimV2GroupsResponseName;
    /**
     * The SCIM schema URI.
     */
    schemas?: string[];
    /**
     * The user's username.
     */
    userName?: string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface PostScimV2GroupsResponseMeta {
    /**
     * The date and time at which the user was created.
     */
    created?: string;
    /**
     * The date and time at which the user was last modified.
     */
    lastModified?: string;
    /**
     * The SCIM resource type.
     */
    resourceType?: MetaResourceType;
    [property: string]: any;
}

/**
 * The SCIM resource type.
 */
export enum MetaResourceType {
    User = "User",
}

export interface PostScimV2GroupsResponseName {
    /**
     * The user's last name.
     */
    familyName?: string;
    /**
     * The user's first name.
     */
    givenName?: string;
    [property: string]: any;
}

export interface PostScimV2GroupsResponse400 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * A list of SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The SCIM type.
     */
    scimType?: string;
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostScimV2GroupsResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostScimV2GroupsResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostScimV2GroupsResponse409 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The SCIM type.
     */
    scimType?: string;
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostScimV2GroupsResponse429 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: number;
    [property: string]: any;
}

export interface PostScimV2GroupsResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostScimV2UsersBody {
    /**
     * If true, activates the user. This lets them authenticate in to your Postman team.
     */
    active?: boolean;
    /**
     * The user's external ID.
     */
    externalID?: string;
    /**
     * A list of groups to which to assign the user to.
     */
    groups?: string[];
    /**
     * The user's IETF locale.
     */
    locale?: string;
    /**
     * Information about the user's name.
     */
    name?: PostScimV2UsersBodyName;
    /**
     * The SCIM schema resource URI.
     */
    schemas?: string[];
    /**
     * The user's username.
     */
    userName?: string;
    [property: string]: any;
}

/**
 * Information about the user's name.
 */
export interface PostScimV2UsersBodyName {
    /**
     * The user's last name.
     */
    familyName?: string;
    /**
     * The user's first name.
     */
    givenName?: string;
    [property: string]: any;
}

export interface PostScimV2UsersResponse {
    /**
     * If true, the user is active.
     */
    active?: boolean;
    /**
     * The user's external ID.
     */
    externalID?: string;
    /**
     * The user's SCIM ID.
     */
    id?: string;
    /**
     * The response's non-standard meta information.
     */
    meta?: PostScimV2UsersResponseMeta;
    name?: PostScimV2UsersResponseName;
    /**
     * The SCIM schema URI.
     */
    schemas?: string[];
    /**
     * The user's username.
     */
    userName?: string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface PostScimV2UsersResponseMeta {
    /**
     * The date and time at which the user was created.
     */
    created?: string;
    /**
     * The date and time at which the user was last modified.
     */
    lastModified?: string;
    /**
     * The SCIM resource type.
     */
    resourceType?: MetaResourceType;
    [property: string]: any;
}

export interface PostScimV2UsersResponseName {
    /**
     * The user's last name.
     */
    familyName?: string;
    /**
     * The user's first name.
     */
    givenName?: string;
    [property: string]: any;
}

export interface PostScimV2UsersResponse400 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * A list of SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The SCIM type.
     */
    scimType?: string;
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostScimV2UsersResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostScimV2UsersResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostScimV2UsersResponse409 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The SCIM type.
     */
    scimType?: string;
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostScimV2UsersResponse429 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: number;
    [property: string]: any;
}

export interface PostScimV2UsersResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PostSecurityAPIValidationBody {
    schema?: PostSecurityAPIValidationBodySchema;
    [property: string]: any;
}

export interface PostSecurityAPIValidationBodySchema {
    /**
     * The definition format.
     */
    language: SchemaLanguage;
    /**
     * The stringified API definition.
     */
    schema: string;
    /**
     * The definition type.
     */
    type: FluffyType;
    [property: string]: any;
}

/**
 * The definition format.
 */
export enum SchemaLanguage {
    JSON = "json",
    YAML = "yaml",
}

/**
 * The definition type.
 */
export enum FluffyType {
    Openapi2 = "openapi2",
    Openapi3 = "openapi3",
}

export interface PostSecurityAPIValidationResponse {
    /**
     * Information about each issue discovered in the analysis. Each object includes the
     * violation's severity and category, the location of the issue, data paths, and other
     * information. This returns an empty object if there are no issues present in the schema.
     *
     * If there are issues, this returns the `possibleFixUrl` response in each warning object.
     * This provides a link to documentation you can use to resolve the warning.
     */
    warnings?: any[];
    [property: string]: any;
}

export interface PostSecurityAPIValidationResponse400 {
    error?: PostSecurityAPIValidationResponse400Error;
    [property: string]: any;
}

export interface PostSecurityAPIValidationResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostSecurityAPIValidationResponse401 {
    error?: PostSecurityAPIValidationResponse401Error;
    [property: string]: any;
}

export interface PostSecurityAPIValidationResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostSecurityAPIValidationResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostSecurityAPIValidationResponse500 {
    error?: PostSecurityAPIValidationResponse500Error;
    [property: string]: any;
}

export interface PostSecurityAPIValidationResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostWebhooksBody {
    webhook?: PostWebhooksBodyWebhook;
    [property: string]: any;
}

export interface PostWebhooksBodyWebhook {
    /**
     * The unique ID of the collection to trigger when calling this webhook.
     */
    collection?: string;
    /**
     * The webhook's name. On success, the system creates a new monitor with this name in the
     * **Monitors** tab.
     */
    name?: string;
    [property: string]: any;
}

export interface PostWebhooksResponse {
    /**
     * Information about the webhook.
     */
    webhook?: PostWebhooksResponseWebhook;
    [property: string]: any;
}

/**
 * Information about the webhook.
 */
export interface PostWebhooksResponseWebhook {
    /**
     * The unique ID of the webhook's associated collection.
     */
    collection?: string;
    /**
     * The webhook's ID.
     */
    id?: string;
    /**
     * The webhook's name.
     */
    name?: string;
    /**
     * The webhook's unique ID.
     */
    uid?: string;
    /**
     * The webhook's URL.
     */
    webhookURL?: string;
    [property: string]: any;
}

export interface PostWebhooksResponse401 {
    error?: PostWebhooksResponse401Error;
    [property: string]: any;
}

export interface PostWebhooksResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostWebhooksResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostWebhooksResponse500 {
    error?: PostWebhooksResponse500Error;
    [property: string]: any;
}

export interface PostWebhooksResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostWorkspacesBody {
    /**
     * Information about the workspace.
     */
    workspace?: PostWorkspacesBodyWorkspace;
    [property: string]: any;
}

/**
 * Information about the workspace.
 */
export interface PostWorkspacesBodyWorkspace {
    /**
     * The workspace's description.
     */
    description?: string;
    /**
     * The workspace's name.
     */
    name: string;
    /**
     * The type of workspace:
     *
     * - `personal`
     * - `private` — Private workspaces are available on Postman [Professional and Enterprise
     * plans](https://www.postman.com/pricing).
     * - `public`
     * - `team`
     * - `partner` — [Partner
     * Workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/)
     * are available on Postman [Enterprise Ultimate plans](https://www.postman.com/pricing).
     */
    type: VisibilityEnum;
    [property: string]: any;
}

export interface PostWorkspacesResponse {
    /**
     * Information about the created workspace.
     */
    workspace?: PostWorkspacesResponseWorkspace;
    [property: string]: any;
}

/**
 * Information about the created workspace.
 */
export interface PostWorkspacesResponseWorkspace {
    /**
     * The workspace's ID.
     */
    id?: string;
    /**
     * The workspace's name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostWorkspacesResponse400 {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostWorkspacesResponse401 {
    error?: PostWorkspacesResponse401Error;
    [property: string]: any;
}

export interface PostWorkspacesResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PostWorkspacesResponse404 {
    error?: PostWorkspacesResponse404Error;
    [property: string]: any;
}

export interface PostWorkspacesResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PostWorkspacesResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PostWorkspacesResponse500 {
    error?: PostWorkspacesResponse500Error;
    [property: string]: any;
}

export interface PostWorkspacesResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the API.
 */
export interface PutApisAPIIDBody {
    /**
     * The API's description. This supports Markdown formatting.
     */
    description?: string;
    /**
     * The API's name.
     */
    name: string;
    /**
     * The API's short summary.
     */
    summary?: string;
    [property: string]: any;
}

export interface PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse {
    /**
     * The created task ID. You can use this ID to track the status of syncing an API collection
     * with an API schema.
     */
    taskID?: string;
    [property: string]: any;
}

export interface PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the API.
 */
export interface PutApisAPIIDResponse {
    /**
     * The date and time at which the API was created.
     */
    createdAt?: string;
    /**
     * The user ID of the user that created the API.
     */
    createdBy?: string;
    /**
     * The API's description. This supports Markdown formatting.
     */
    description?: string;
    /**
     * The API's ID.
     */
    id?: string;
    /**
     * The API's name.
     */
    name: string;
    /**
     * The API's summary.
     */
    summary?: string;
    /**
     * The date and time at which the API was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user that updated the API.
     */
    updatedBy?: string;
    [property: string]: any;
}

export interface PutApisAPIIDResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about schema file.
 */
export interface PutApisAPIIDSchemasSchemaIDFilesFilePathBody {
    /**
     * The schema file's content.
     */
    content: string;
    /**
     * The schema file's name.
     */
    name?: string;
    /**
     * Information about the schema's root file. This tag only applies to protobuf
     * specifications.
     */
    root?: PutApisAPIIDSchemasSchemaIDFilesFilePathBodyRoot;
    [property: string]: any;
}

/**
 * Information about the schema's root file. This tag only applies to protobuf
 * specifications.
 */
export interface PutApisAPIIDSchemasSchemaIDFilesFilePathBodyRoot {
    /**
     * If true, tag the file as the root file.
     */
    enabled?: boolean;
    [property: string]: any;
}

/**
 * Information about the schema file.
 */
export interface PutApisAPIIDSchemasSchemaIDFilesFilePathResponse {
    /**
     * The date and time at which the file was created.
     */
    createdAt?: string;
    /**
     * The user Id of the user that created the file.
     */
    createdBy?: string;
    /**
     * The schema file's ID.
     */
    id?: string;
    /**
     * The schema file's name.
     */
    name?: string;
    /**
     * The file system path to the schema file.
     */
    path?: string;
    /**
     * The date and time at which the file was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user that last updated the file.
     */
    updatedBy?: string;
    [property: string]: any;
}

export interface PutApisAPIIDSchemasSchemaIDFilesFilePathResponse400 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDSchemasSchemaIDFilesFilePathResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDSchemasSchemaIDFilesFilePathResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDSchemasSchemaIDFilesFilePathResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDSchemasSchemaIDFilesFilePathResponse422 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDSchemasSchemaIDFilesFilePathResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDTagsBody {
    /**
     * A list of the associated tags as slugs.
     */
    tags: PutApisAPIIDTagsBodyTagsItem[];
    [property: string]: any;
}

/**
 * Information about the tag.
 */
export interface PutApisAPIIDTagsBodyTagsItem {
    /**
     * The tag's ID within a team or individual (non-team) user scope.
     */
    slug: string;
    [property: string]: any;
}

export interface PutApisAPIIDTagsResponse {
    /**
     * A list of associated tags.
     */
    tags?: PutApisAPIIDTagsResponseTagsItem[];
    [property: string]: any;
}

/**
 * Information about the tag.
 */
export interface PutApisAPIIDTagsResponseTagsItem {
    /**
     * The tag's ID within a team or individual (non-team) user scope.
     */
    slug?: string;
    [property: string]: any;
}

export interface PutApisAPIIDTagsResponse400 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDTagsResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDTagsResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDTagsResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

/**
 * Information about the API version.
 */
export interface PutApisAPIIDVersionsVersionIDBody {
    /**
     * The version's name.
     */
    name: string;
    /**
     * The version's Markdown-supported release notes.
     */
    releaseNotes?: string;
    [property: string]: any;
}

export interface PutApisAPIIDVersionsVersionIDResponse {
    /**
     * The date and time at which the version was created.
     */
    createdAt?: string;
    /**
     * The version's ID.
     */
    id?: string;
    /**
     * The version's name.
     */
    name?: string;
    /**
     * The version's release notes.
     */
    releaseNotes?: string;
    /**
     * The date and time at which the version was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface PutApisAPIIDVersionsVersionIDResponse401 {
    /**
     * Details about the error.
     */
    detail?: string;
    /**
     * The error instance.
     */
    instance?: string;
    /**
     * The HTTP status code.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The error type.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDVersionsVersionIDResponse403 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDVersionsVersionIDResponse404 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutApisAPIIDVersionsVersionIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDBody {
    /**
     * For a complete list of values, refer to the [collection.json schema
     * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
     */
    collection?: PutCollectionsCollectionIDBodyCollection;
    [property: string]: any;
}

/**
 * For a complete list of values, refer to the [collection.json schema
 * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
 */
export interface PutCollectionsCollectionIDBodyCollection {
    /**
     * An object that contains basic information about the collection. For a complete list of
     * values, refer to the `definitions.info` entry in the [collection.json schema
     * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
     */
    info: PutCollectionsCollectionIDBodyCollectionInfo;
    /**
     * Information about the collection's contents, such as folders, requests, and responses.
     * For a complete list of values, refer to the `/tmp/.tmpG0mSJG/item.json-group` entry in
     * the [collection.json schema
     * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
     */
    item: PutCollectionsCollectionIDBodyCollectionItemItem[];
    [property: string]: any;
}

/**
 * An object that contains basic information about the collection. For a complete list of
 * values, refer to the `definitions.info` entry in the [collection.json schema
 * file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
 */
export interface PutCollectionsCollectionIDBodyCollectionInfo {
    /**
     * The collection's description.
     */
    description?: string;
    /**
     * The collection's name.
     */
    name: string;
    /**
     * A URL to the collection's schema.
     */
    schema: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDBodyCollectionItemItem {
    /**
     * The collection item's ID.
     */
    id?: string;
    /**
     * The collection item's name.
     */
    name?: string;
    /**
     * The collection item's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

/**
 * The folder properties to update. For a complete list of properties, refer to the
 * [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface PutCollectionsCollectionIDFoldersFolderIDBody {
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The folder's name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDFoldersFolderIDResponse {
    /**
     * The folder's updated information, including the updated properties. For a complete list
     * of properties, refer to the [collection.json schema
     * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
     */
    data?: PutCollectionsCollectionIDFoldersFolderIDResponseData;
    meta?: any;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    revision?: number;
    [property: string]: any;
}

/**
 * The folder's updated information, including the updated properties. For a complete list
 * of properties, refer to the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface PutCollectionsCollectionIDFoldersFolderIDResponseData {
    /**
     * The collection ID that the folder belongs to.
     */
    collection?: string;
    /**
     * The folder's creation date and time.
     */
    createdAt?: string;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * Information about the folder.
     */
    folder?: string;
    /**
     * The folder's ID.
     */
    id?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    lastRevision?: number;
    /**
     * The user ID of the user that last updated the folder.
     */
    lastUpdatedBy?: string;
    /**
     * The folder's name.
     */
    name?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    /**
     * The date and time at which the folder was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDFoldersFolderIDResponse400 {
    error?: PutCollectionsCollectionIDFoldersFolderIDResponse400Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDFoldersFolderIDResponse400Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDFoldersFolderIDResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDFoldersFolderIDResponse400ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDFoldersFolderIDResponse401 {
    error?: PutCollectionsCollectionIDFoldersFolderIDResponse401Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDFoldersFolderIDResponse401Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails;
    /**
     * The error's message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDFoldersFolderIDResponse404 {
    error?: PutCollectionsCollectionIDFoldersFolderIDResponse404Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDFoldersFolderIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The folder's ID.
     */
    modelID?: string;
    /**
     * The user ID of the folder's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDFoldersFolderIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

/**
 * The request properties to update. For a complete list of properties, refer to the
 * `definitions.request` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface PutCollectionsCollectionIDRequestsRequestIDBody {
    /**
     * The request's method.
     */
    method?: Method;
    /**
     * The request's name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * The request's method.
 */
export enum Method {
    Copy = "COPY",
    Delete = "DELETE",
    Get = "GET",
    Head = "HEAD",
    Link = "LINK",
    Lock = "LOCK",
    Options = "OPTIONS",
    Patch = "PATCH",
    Post = "POST",
    Propfind = "PROPFIND",
    Purge = "PURGE",
    Put = "PUT",
    Unlink = "UNLINK",
    Unlock = "UNLOCK",
    View = "VIEW",
}

export interface PutCollectionsCollectionIDRequestsRequestIDResponse {
    /**
     * Information about the updated request. For a complete list of properties, refer to the
     * `definitions.request` property in the [collection.json schema
     * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
     */
    data?: PutCollectionsCollectionIDRequestsRequestIDResponseData;
    meta?: any;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    revision?: number;
    [property: string]: any;
}

/**
 * Information about the updated request. For a complete list of properties, refer to the
 * `definitions.request` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface PutCollectionsCollectionIDRequestsRequestIDResponseData {
    /**
     * The request's creation date and time.
     */
    createdAt?: string;
    /**
     * The request's description.
     */
    description?: string;
    /**
     * The request's ID.
     */
    id?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    lastRevision?: number;
    /**
     * The user ID of the user that last updated the request.
     */
    lastUpdatedBy?: string;
    /**
     * The request's name.
     */
    name?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    /**
     * The date and time at which the request was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDRequestsRequestIDResponse400 {
    error?: PutCollectionsCollectionIDRequestsRequestIDResponse400Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDRequestsRequestIDResponse400Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDRequestsRequestIDResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDRequestsRequestIDResponse400ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDRequestsRequestIDResponse401 {
    error?: PutCollectionsCollectionIDRequestsRequestIDResponse401Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDRequestsRequestIDResponse401Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails;
    /**
     * The error's message.
     */
    message?: string;
    /**
     * The error's name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDRequestsRequestIDResponse404 {
    error?: PutCollectionsCollectionIDRequestsRequestIDResponse404Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDRequestsRequestIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The request's ID.
     */
    modelID?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDRequestsRequestIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse {
    collection?: PutCollectionsCollectionIDResponseCollection;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponseCollection {
    /**
     * The collection's ID.
     */
    id?: string;
    /**
     * The collection's name.
     */
    name?: string;
    /**
     * The collection's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse400 {
    error?: PutCollectionsCollectionIDResponse400Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse400Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse401 {
    error?: PutCollectionsCollectionIDResponse401Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse403 {
    error?: PutCollectionsCollectionIDResponse403Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse404 {
    error?: PutCollectionsCollectionIDResponse404Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDResponse404ErrorDetails {
    /**
     * The collection ID.
     */
    id?: string;
    /**
     * The instance item.
     */
    item?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse500 {
    error?: PutCollectionsCollectionIDResponse500Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * The response properties to update. For a complete list of properties, refer to the
 * `definitions.request.responses` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface PutCollectionsCollectionIDResponsesResponseIDBody {
    /**
     * The response's name.
     */
    name?: string;
    /**
     * The response's HTTP response code information.
     */
    responseCode?: PutCollectionsCollectionIDResponsesResponseIDBodyResponseCode;
    [property: string]: any;
}

/**
 * The response's HTTP response code information.
 */
export interface PutCollectionsCollectionIDResponsesResponseIDBodyResponseCode {
    /**
     * The response's HTTP response status code.
     */
    code?: number;
    /**
     * The name of the status code.
     */
    name?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponsesResponseIDResponse {
    /**
     * Information about the updated response. For a complete list of request properties, refer
     * to the `definitions.request` property in the [collection.json schema
     * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
     */
    data?: PutCollectionsCollectionIDResponsesResponseIDResponseData;
    meta?: any;
    /**
     * The request's ID.
     */
    modelID?: string;
    [property: string]: any;
}

/**
 * Information about the updated response. For a complete list of request properties, refer
 * to the `definitions.request` property in the [collection.json schema
 * file](https://schema.postman.com/collection/json/v1.0.0/draft-07/collection.json).
 */
export interface PutCollectionsCollectionIDResponsesResponseIDResponseData {
    /**
     * The request's creation date and time.
     */
    createdAt?: string;
    /**
     * The request's ID.
     */
    id?: string;
    /**
     * An internal revision ID. Its value increments each time the resource changes. You can use
     * this ID to track whether there were changes since the last time you fetched the resource.
     */
    lastRevision?: number;
    /**
     * The user ID of the user that last updated the request.
     */
    lastUpdatedBy?: string;
    /**
     * The request's name.
     */
    name?: string;
    /**
     * The user ID of the request's owner.
     */
    owner?: string;
    /**
     * The date and time at which the request was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponsesResponseIDResponse400 {
    error?: PutCollectionsCollectionIDResponsesResponseIDResponse400Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponsesResponseIDResponse400Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDResponsesResponseIDResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDResponsesResponseIDResponse400ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponsesResponseIDResponse401 {
    error?: PutCollectionsCollectionIDResponsesResponseIDResponse401Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponsesResponseIDResponse401Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponsesResponseIDResponse404 {
    error?: PutCollectionsCollectionIDResponsesResponseIDResponse404Error;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponsesResponseIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: PutCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails {
    /**
     * The resource name.
     */
    model?: string;
    /**
     * The response's ID.
     */
    modelID?: string;
    /**
     * The user ID of the response's owner.
     */
    owner?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDResponsesResponseIDResponse500 {
    /**
     * Details about the error message.
     */
    detail?: string;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDTagsBody {
    /**
     * A list of the associated tags as slugs.
     */
    tags: PutCollectionsCollectionIDTagsBodyTagsItem[];
    [property: string]: any;
}

/**
 * Information about the tag.
 */
export interface PutCollectionsCollectionIDTagsBodyTagsItem {
    /**
     * The tag's ID within a team or individual (non-team) user scope.
     */
    slug: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDTagsResponse {
    /**
     * A list of associated tags.
     */
    tags?: PutCollectionsCollectionIDTagsResponseTagsItem[];
    [property: string]: any;
}

/**
 * Information about the tag.
 */
export interface PutCollectionsCollectionIDTagsResponseTagsItem {
    /**
     * The tag's ID within a team or individual (non-team) user scope.
     */
    slug?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDTagsResponse400 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDTagsResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDTagsResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDTagsResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutCollectionsCollectionIDTagsResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutDetectedSecretsSecretIDBody {
    /**
     * The secret's updated resolution status:
     * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
     * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
     * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
     * publishing it.
     */
    resolution: Resolution;
    /**
     * The ID of the workspace that contains the secret.
     */
    workspaceID: string;
    [property: string]: any;
}

export interface PutDetectedSecretsSecretIDResponse {
    /**
     * The history of the secret's resolution status changes.
     */
    history?: PutDetectedSecretsSecretIDResponseHistoryItem[];
    /**
     * The secret's current resolution status:
     * - `ACTIVE` — The secret is active.
     * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
     * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
     * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
     * publishing it.
     */
    resolution?: ResolutionEnum;
    /**
     * The SHA-256 hash of the detected secret.
     */
    secretHash?: string;
    /**
     * The ID of the workspace that contains the secret.
     */
    workspaceID?: string;
    [property: string]: any;
}

export interface PutDetectedSecretsSecretIDResponseHistoryItem {
    /**
     * The ID of the user that updated the secret's resolution status.
     */
    actor?: number;
    /**
     * The date and time at which the resolution status was updated.
     */
    createdAt?: string;
    /**
     * The secret's updated resolution status:
     * - `ACTIVE` — The secret is active.
     * - `FALSE_POSITIVE` — The discovered secret is not an actual secret.
     * - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.
     * - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of
     * publishing it.
     */
    resolution?: ResolutionEnum;
    [property: string]: any;
}

export interface PutDetectedSecretsSecretIDResponse401 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutDetectedSecretsSecretIDResponse403 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutDetectedSecretsSecretIDResponse500 {
    /**
     * The instance identifying the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The HTTP status code generated by the origin server.
     */
    status?: number;
    /**
     * The generic description for the error's class.
     */
    title?: string;
    /**
     * The type of error.
     */
    type?: string;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDBody {
    environment?: PutEnvironmentsEnvironmentIDBodyEnvironment;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDBodyEnvironment {
    /**
     * The environment's name.
     */
    name: string;
    /**
     * Information about the environment's variables.
     */
    values?: Array<PutEnvironmentsEnvironmentIDBodyEnvironmentValuesItemItem[]>;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDBodyEnvironmentValuesItemItem {
    /**
     * If true, the variable is enabled.
     */
    enabled?: boolean;
    /**
     * The variable's name.
     */
    key?: string;
    /**
     * The variable type.
     */
    type?: PurpleType;
    /**
     * The variable's value.
     */
    value?: string;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDResponse {
    environment?: PutEnvironmentsEnvironmentIDResponseEnvironment;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDResponseEnvironment {
    id?:   string;
    name?: string;
    uid?:  string;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDResponse400 {
    error?: PutEnvironmentsEnvironmentIDResponse400Error;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDResponse400Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDResponse401 {
    error?: PutEnvironmentsEnvironmentIDResponse401Error;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDResponse500 {
    error?: PutEnvironmentsEnvironmentIDResponse500Error;
    [property: string]: any;
}

export interface PutEnvironmentsEnvironmentIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutMocksMockIDBody {
    mock?: PutMocksMockIDBodyMock;
    [property: string]: any;
}

export interface PutMocksMockIDBodyMock {
    /**
     * The mock server's configuration settings.
     */
    config?: PutMocksMockIDBodyMockConfig;
    /**
     * The mock server's description.
     */
    description?: string;
    /**
     * The associated environment's unique ID.
     */
    environment?: string;
    /**
     * The mock server's name.
     */
    name?: string;
    /**
     * If true, the mock server is set private. By default, mock servers are public and can
     * receive requests from anyone and anywhere.
     */
    private?: boolean;
    /**
     * The API's version tag ID.
     */
    versionTag?: string;
    [property: string]: any;
}

/**
 * The mock server's configuration settings.
 */
export interface PutMocksMockIDBodyMockConfig {
    /**
     * The server response ID. This sets the given server response as the default response for
     * each request.
     *
     * To deactivate a server response, pass a null value.
     */
    serverResponseID?: null | string;
    [property: string]: any;
}

export interface PutMocksMockIDResponse {
    mock?: PutMocksMockIDResponseMock;
    [property: string]: any;
}

export interface PutMocksMockIDResponseMock {
    /**
     * The mock's associated collection unique ID.
     */
    collection?: string;
    /**
     * Information about the mock server's configuration.
     */
    config?: PutMocksMockIDResponseMockConfig;
    /**
     * The date and time at which the mock server was created.
     */
    createdAt?: string;
    /**
     * The mock server's associated environment ID.
     */
    environment?: string;
    /**
     * The mock server's ID.
     */
    id?: string;
    /**
     * The mock server URL.
     */
    mockURL?: string;
    /**
     * The mock server's name.
     */
    name?: string;
    /**
     * The ID of mock server's owner.
     */
    owner?: string;
    /**
     * The mock server's unique ID.
     */
    uid?: string;
    /**
     * The date and time at which the mock server was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

/**
 * Information about the mock server's configuration.
 */
export interface PutMocksMockIDResponseMockConfig {
    /**
     * A list of the mock server's headers.
     */
    headers?: any[];
    /**
     * If true, match the request body.
     */
    matchBody?: boolean;
    /**
     * If true, match query parameters.
     */
    matchQueryParams?: boolean;
    /**
     * If true, use wildcard variable matching.
     */
    matchWildcards?: boolean;
    [property: string]: any;
}

export interface PutMocksMockIDResponse401 {
    error?: PutMocksMockIDResponse401Error;
    [property: string]: any;
}

export interface PutMocksMockIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PutMocksMockIDResponse404 {
    error?: PutMocksMockIDResponse404Error;
    [property: string]: any;
}

export interface PutMocksMockIDResponse404Error {
    /**
     * Information about the error.
     */
    details?: string[];
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutMocksMockIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PutMocksMockIDResponse500 {
    error?: PutMocksMockIDResponse500Error;
    [property: string]: any;
}

export interface PutMocksMockIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDBody {
    serverResponse?: PutMocksMockIDServerResponsesServerResponseIDBodyServerResponse;
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDBodyServerResponse {
    /**
     * The server response's body that returns when calling the mock server.
     */
    body?: string;
    /**
     * The server response's request headers, such as Content-Type, Accept, encoding, and other
     * information.
     */
    headers?: PutMocksMockIDServerResponsesServerResponseIDBodyServerResponseHeadersItem[];
    /**
     * The server response's body language type.
     */
    language?: DeleteMocksMockIDServerResponsesServerResponseIDResponseLanguage;
    /**
     * The server response's name.
     */
    name?: string;
    /**
     * The server response's 5xx HTTP response code. This property **only** accepts 5xx values.
     */
    statusCode?: number;
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDBodyServerResponseHeadersItem {
    /**
     * The request header's key value.
     */
    key?: string;
    /**
     * The request header's value.
     */
    value?: string;
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDResponse400 {
    error?: PutMocksMockIDServerResponsesServerResponseIDResponse400Error;
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDResponse400Error {
    /**
     * Information about the error.
     */
    details?: PutMocksMockIDServerResponsesServerResponseIDResponse400ErrorDetails;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the error.
 */
export interface PutMocksMockIDServerResponsesServerResponseIDResponse400ErrorDetails {
    /**
     * Information about the missing parameter.
     */
    param?: string[];
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDResponse401 {
    error?: PutMocksMockIDServerResponsesServerResponseIDResponse401Error;
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDResponse500 {
    error?: PutMocksMockIDServerResponsesServerResponseIDResponse500Error;
    [property: string]: any;
}

export interface PutMocksMockIDServerResponsesServerResponseIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the server response.
 */
export interface PutMocksMockIDServerResponsesServerResponseIDResponseItem {
    /**
     * The date and time at which the server response was created.
     */
    createdAt?: string;
    /**
     * The user ID of the user who created the server response.
     */
    createdBy?: string;
    /**
     * The server response's ID.
     */
    id?: string;
    /**
     * The server response's name.
     */
    name?: string;
    /**
     * The server response's 5xx HTTP response code.
     */
    statusCode?: number;
    /**
     * The date and time at which the server response was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user who last updated the server response.
     */
    updatedBy?: string;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDBody {
    monitor?: PutMonitorsMonitorIDBodyMonitor;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDBodyMonitor {
    /**
     * The monitor's name.
     */
    name?: string;
    /**
     * Information about the monitor's schedule.
     */
    schedule?: PutMonitorsMonitorIDBodyMonitorSchedule;
    [property: string]: any;
}

/**
 * Information about the monitor's schedule.
 */
export interface PutMonitorsMonitorIDBodyMonitorSchedule {
    cron?: any;
    /**
     * The monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
     */
    timezone?: string;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDResponse {
    monitor?: PutMonitorsMonitorIDResponseMonitor;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDResponseMonitor {
    /**
     * The monitor's ID.
     */
    id?: string;
    /**
     * The monitor's name.
     */
    name?: string;
    /**
     * The monitor's unique ID.
     */
    uid?: string;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDResponse401 {
    error?: PutMonitorsMonitorIDResponse401Error;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDResponse404 {
    error?: PutMonitorsMonitorIDResponse404Error;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDResponse500 {
    error?: PutMonitorsMonitorIDResponse500Error;
    [property: string]: any;
}

export interface PutMonitorsMonitorIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateElementTypeElementIDResponse401 {
    error?: PutNetworkPrivateElementTypeElementIDResponse401Error;
    [property: string]: any;
}

export interface PutNetworkPrivateElementTypeElementIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateElementTypeElementIDResponse403 {
    error?: PutNetworkPrivateElementTypeElementIDResponse403Error;
    [property: string]: any;
}

export interface PutNetworkPrivateElementTypeElementIDResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateElementTypeElementIDResponse404 {
    error?: PutNetworkPrivateElementTypeElementIDResponse404Error;
    [property: string]: any;
}

export interface PutNetworkPrivateElementTypeElementIDResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateElementTypeElementIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateElementTypeElementIDResponse500 {
    error?: PutNetworkPrivateElementTypeElementIDResponse500Error;
    [property: string]: any;
}

export interface PutNetworkPrivateElementTypeElementIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDBody {
    /**
     * The response to the user's request.
     */
    response?: PutNetworkPrivateNetworkEntityRequestRequestIDBodyResponse;
    /**
     * The request's status.
     */
    status: PutNetworkPrivateNetworkEntityRequestRequestIDBodyStatus;
    [property: string]: any;
}

/**
 * The response to the user's request.
 */
export interface PutNetworkPrivateNetworkEntityRequestRequestIDBodyResponse {
    /**
     * A message that details why the user's request was denied.
     */
    message?: string;
    [property: string]: any;
}

/**
 * The request's status.
 */
export enum PutNetworkPrivateNetworkEntityRequestRequestIDBodyStatus {
    Approved = "approved",
    Denied = "denied",
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponse {
    /**
     * Information about the Private API Network request.
     */
    request?: PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItem[];
    [property: string]: any;
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItem {
    /**
     * The date and time at which the request was created.
     */
    createdAt?: string;
    /**
     * The ID of the user who created the request.
     */
    createdBy?: number;
    /**
     * Information about the requested element.
     */
    element?: PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItemElement;
    /**
     * The request's ID.
     */
    id?: number;
    /**
     * The user's optional message included in the request.
     */
    message?: string;
    /**
     * Information about the response to the element's request. This object only returns when
     * the network manager denied a request with a message.
     */
    response?: PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItemResponse;
    /**
     * The request's status.
     */
    status?: PutNetworkPrivateNetworkEntityRequestRequestIDBodyStatus;
    [property: string]: any;
}

/**
 * Information about the requested element.
 */
export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItemElement {
    /**
     * The date and time at which the element was approved and added to the Private API Network.
     */
    createdAt?: string;
    /**
     * The user ID of the user who requested to add the element to the Private API Network.
     */
    createdBy?: number;
    /**
     * The element's ID.
     */
    id?: string;
    /**
     * The element's name.
     */
    name?: string;
    /**
     * The element's short summary.
     */
    summary?: string;
    /**
     * The element type.
     */
    type?: EntityTypeEnum;
    [property: string]: any;
}

/**
 * Information about the response to the element's request. This object only returns when
 * the network manager denied a request with a message.
 */
export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItemResponse {
    /**
     * The date and time at which the network manager denied the request.
     */
    createdAt?: string;
    /**
     * The network manager's user ID.
     */
    createdBy?: number;
    /**
     * The network manager's request response message.
     */
    message?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponse400 {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: Name;
    [property: string]: any;
}

/**
 * The error name.
 */
export enum Name {
    InvalidParamsError = "invalidParamsError",
    RequestAlreadyResponded = "requestAlreadyResponded",
    RequestEntityAlreadyPublished = "requestEntityAlreadyPublished",
    RequestNotFound = "RequestNotFound",
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponse401 {
    error?: PutNetworkPrivateNetworkEntityRequestRequestIDResponse401Error;
    [property: string]: any;
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponse401Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error message.
     */
    name?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponse403 {
    error?: PutNetworkPrivateNetworkEntityRequestRequestIDResponse403Error;
    [property: string]: any;
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponse500 {
    error?: PutNetworkPrivateNetworkEntityRequestRequestIDResponse500Error;
    [property: string]: any;
}

export interface PutNetworkPrivateNetworkEntityRequestRequestIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutScimV2UsersUserIDBody {
    /**
     * Information about the user's name.
     */
    name?: PutScimV2UsersUserIDBodyName;
    /**
     * The SCIM schema resource URI.
     */
    schemas?: string[];
    [property: string]: any;
}

/**
 * Information about the user's name.
 */
export interface PutScimV2UsersUserIDBodyName {
    /**
     * The user's last name.
     */
    familyName?: string;
    /**
     * The user's first name.
     */
    givenName?: string;
    [property: string]: any;
}

export interface PutScimV2UsersUserIDResponse {
    /**
     * If true, the team member is active.
     */
    active?: boolean;
    /**
     * The team member's external ID.
     */
    externalID?: string;
    /**
     * The team member's SCIM ID.
     */
    id?: string;
    /**
     * The response's non-standard meta information.
     */
    meta?: PutScimV2UsersUserIDResponseMeta;
    /**
     * Information about the Postman team member.
     */
    name?: PutScimV2UsersUserIDResponseName;
    /**
     * A list of schema resource URIs.
     */
    schemas?: string[];
    /**
     * The team member's SCIM username.
     */
    userName?: string;
    [property: string]: any;
}

/**
 * The response's non-standard meta information.
 */
export interface PutScimV2UsersUserIDResponseMeta {
    /**
     * The date and time at which the team member was created.
     */
    created?: string;
    /**
     * The date and time at which the team member was last modified.
     */
    lastModified?: string;
    /**
     * The resource type.
     */
    resourceType?: string;
    [property: string]: any;
}

/**
 * Information about the Postman team member.
 */
export interface PutScimV2UsersUserIDResponseName {
    /**
     * The team member's last name.
     */
    familyName?: string;
    /**
     * The team member's first name.
     */
    givenName?: string;
    [property: string]: any;
}

export interface PutScimV2UsersUserIDResponse400 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * A list of SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The SCIM type.
     */
    scimType?: string;
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PutScimV2UsersUserIDResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PutScimV2UsersUserIDResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PutScimV2UsersUserIDResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PutScimV2UsersUserIDResponse429 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: number;
    [property: string]: any;
}

export interface PutScimV2UsersUserIDResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The SCIM schema resource URIs.
     */
    schemas?: string[];
    /**
     * The HTTP status code.
     */
    status?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDBody {
    workspace?: PutWorkspacesWorkspaceIDBodyWorkspace;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDBodyWorkspace {
    /**
     * The new workspace description.
     */
    description?: string;
    /**
     * The workspace's new name.
     */
    name?: string;
    /**
     * The new workspace visibility
     * [type](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility).
     * This property does **not** support the following workspace visibility changes:
     * - `private` to `public`
     * - `public` to `private`
     * - `private` to `personal`
     * - `team` to `personal`
     * - `public` to `personal` for a team user
     */
    type?: WorkspaceVisibility;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDGlobalVariablesBody {
    /**
     * A list of the workspace's global variables.
     */
    values?: GlobalVariable[];
    [property: string]: any;
}

/**
 * Information about the workspace's updated global variables.
 */
export interface PutWorkspacesWorkspaceIDGlobalVariablesResponse {
    /**
     * A list of the workspace's global variables.
     */
    values?: Array<GlobalVariable[]>;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDGlobalVariablesResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The type of error.
     */
    title?: string;
    /**
     * The generic description for the error's class.
     */
    type?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDResponse {
    /**
     * Information about the updated workspace.
     */
    workspace?: PutWorkspacesWorkspaceIDResponseWorkspace;
    [property: string]: any;
}

/**
 * Information about the updated workspace.
 */
export interface PutWorkspacesWorkspaceIDResponseWorkspace {
    /**
     * The workspace's ID.
     */
    id?: string;
    /**
     * The workspace's name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDResponse400 {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDResponse403 {
    error?: PutWorkspacesWorkspaceIDResponse403Error;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDResponse403Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDResponse404 {
    error?: PutWorkspacesWorkspaceIDResponse404Error;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDResponse404Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDResponse429 {
    /**
     * The error name.
     */
    error?: string;
    /**
     * The error message.
     */
    message?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDResponse500 {
    error?: PutWorkspacesWorkspaceIDResponse500Error;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDResponse500Error {
    /**
     * The error message.
     */
    message?: string;
    /**
     * The error name.
     */
    name?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDTagsBody {
    /**
     * A list of the associated tags as slugs.
     */
    tags: PutWorkspacesWorkspaceIDTagsBodyTagsItem[];
    [property: string]: any;
}

/**
 * Information about the tag.
 */
export interface PutWorkspacesWorkspaceIDTagsBodyTagsItem {
    /**
     * The tag's ID within a team or individual (non-team) user scope.
     */
    slug: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDTagsResponse {
    /**
     * A list of associated tags.
     */
    tags?: PutWorkspacesWorkspaceIDTagsResponseTagsItem[];
    [property: string]: any;
}

/**
 * Information about the tag.
 */
export interface PutWorkspacesWorkspaceIDTagsResponseTagsItem {
    /**
     * The tag's ID within a team or individual (non-team) user scope.
     */
    slug?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDTagsResponse400 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDTagsResponse401 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDTagsResponse403 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDTagsResponse404 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

export interface PutWorkspacesWorkspaceIDTagsResponse500 {
    /**
     * Information about the error.
     */
    detail?: string;
    /**
     * The URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * The error's HTTP status code.
     */
    status?: number;
    /**
     * A short summary of the problem.
     */
    title?: string;
    /**
     * The URI reference ([RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)) that identifies
     * the type of problem.
     */
    type?: string;
    [property: string]: any;
}

/**
 * The API's base data schema.
 */
export interface APIBase {
    /**
     * The date and time at which the API was created.
     */
    createdAt?: string;
    /**
     * The Postman ID of the user that created the API.
     */
    createdBy?: number;
    /**
     * The API's description.
     */
    description?: string;
    /**
     * The API's ID.
     */
    id?: string;
    /**
     * The API's name.
     */
    name?: string;
    /**
     * The API's short summary.
     */
    summary?: string;
    /**
     * The date and time at which the API was updated.
     */
    updatedAt?: string;
    /**
     * The Postman ID of the user that updated the API.
     */
    updatedBy?: number;
    [property: string]: any;
}

/**
 * Detailed information about the API.
 */
export interface APIDetails {
    /**
     * The API's collections.
     */
    collections?: APIDetailsCollectionsItem[];
    /**
     * Information about the API's Git repository integration.
     */
    gitInfo?: APIDetailsGitInfo;
    /**
     * The API's schemas.
     */
    schemas?: APIDetailsSchemasItem[];
    /**
     * The API's versions.
     */
    versions?: APIDetailsVersionsItem[];
    [property: string]: any;
}

/**
 * Information about the collection.
 */
export interface APIDetailsCollectionsItem {
    /**
     * The collection's ID.
     */
    id?: string;
    [property: string]: any;
}

/**
 * Information about the API's Git repository integration.
 */
export interface APIDetailsGitInfo {
    /**
     * The API definition's collection repository folder location.
     */
    collectionFolder?: string;
    /**
     * The domain at which the Git repository is hosted.
     */
    domain?: null | string;
    /**
     * The organization that owns the repository.
     */
    organization?: string;
    /**
     * The repository's name.
     */
    repository?: string;
    /**
     * The API definition's repository folder location. This returns an empty string if the
     * connected repository uses a root file.
     */
    schemaFolder?: string;
    [property: string]: any;
}

/**
 * Information about the schema.
 */
export interface APIDetailsSchemasItem {
    /**
     * The schema's ID.
     */
    id?: string;
    [property: string]: any;
}

/**
 * Information about the version.
 */
export interface APIDetailsVersionsItem {
    /**
     * The version's ID.
     */
    id?: string;
    /**
     * The version's name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the API version.
 */
export interface CreateAPIVersionGitLinked {
    /**
     * The branch ID.
     */
    branch?: string;
    /**
     * A list of the version's collections.
     */
    collections?: CreateAPIVersionGitLinkedCollectionsItem[];
    /**
     * The version's name.
     */
    name?: string;
    /**
     * Information about the API version release. For example, changelog notes.
     */
    releaseNotes?: string;
    /**
     * A list of the version's schemas.
     */
    schemas?: CreateAPIVersionGitLinkedSchemasItem[];
    [property: string]: any;
}

/**
 * Information about the collection.
 */
export interface CreateAPIVersionGitLinkedCollectionsItem {
    /**
     * Path to a collection in the Git repository.
     */
    filePath?: string;
    [property: string]: any;
}

/**
 * Information about the schema.
 */
export interface CreateAPIVersionGitLinkedSchemasItem {
    /**
     * The path to the root directory where schemas are stored in the Git repository.
     */
    directoryPath?: string;
    [property: string]: any;
}

/**
 * Information about the API version.
 */
export interface CreateAPIVersionNonGitLinked {
    /**
     * A list of the version's collections.
     */
    collections?: CreateAPIVersionNonGitLinkedCollectionsItem[];
    /**
     * The version's name.
     */
    name?: string;
    /**
     * Information about the API version release. For example, changelog notes.
     */
    releaseNotes?: string;
    /**
     * A list of the version's schemas.
     */
    schemas?: CreateAPIVersionNonGitLinkedSchemasItem[];
    [property: string]: any;
}

/**
 * Information about the collection.
 */
export interface CreateAPIVersionNonGitLinkedCollectionsItem {
    /**
     * The collection's ID.
     */
    id?: string;
    [property: string]: any;
}

/**
 * Information about the schema.
 */
export interface CreateAPIVersionNonGitLinkedSchemasItem {
    /**
     * The schema's ID.
     */
    id?: string;
    [property: string]: any;
}

/**
 * Information about the API schema.
 */
export interface CreateAPISchema {
    /**
     * The list of files that are part of the schema.
     */
    files: CreateAPISchemaFilesItem[];
    /**
     * The schema's type.
     */
    type: PostApisAPIIDSchemasBodyType;
    [property: string]: any;
}

export interface CreateAPISchemaFilesItem {
    /**
     * The serilalized content of the schema.
     */
    content?: string;
    /**
     * The schema's file path.
     */
    path?: string;
    /**
     * Information about the schema's root file.
     */
    root?: CreateAPISchemaFilesItemRoot;
    [property: string]: any;
}

/**
 * Information about the schema's root file.
 */
export interface CreateAPISchemaFilesItemRoot {
    /**
     * If true, tag the file as the root file. The root tag is only allowed for protobuf
     * specifications.
     */
    enabled?: boolean;
    [property: string]: any;
}

export interface CreatePANAPI {
    api?: CreatePanAPIAPI;
    [property: string]: any;
}

export interface CreatePanAPIAPI {
    /**
     * The API's ID.
     */
    id: string;
    /**
     * The API's parent folder ID.
     */
    parentFolderID: number;
    [property: string]: any;
}

export interface CreatePANCollection {
    collection?: CreatePanCollectionCollection;
    [property: string]: any;
}

export interface CreatePanCollectionCollection {
    /**
     * A list of environments to add to the collection.
     */
    environments?: string[];
    /**
     * The collection's ID.
     */
    id: string;
    /**
     * The collection's parent folder ID.
     */
    parentFolderID: number;
    /**
     * The collection's summary.
     */
    summary?: string;
    [property: string]: any;
}

export interface CreatePANFolder {
    folder?: CreatePanFolderFolder;
    [property: string]: any;
}

export interface CreatePanFolderFolder {
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The folder's name.
     */
    name: string;
    /**
     * The folder's parent folder ID. This value defaults to `0`.
     */
    parentFolderID?: number;
    [property: string]: any;
}

export interface CreatePANWorkspace {
    workspace?: CreatePanWorkspaceWorkspace;
    [property: string]: any;
}

export interface CreatePanWorkspaceWorkspace {
    /**
     * The workspace's ID.
     */
    id: string;
    /**
     * The workspace's parent folder ID.
     */
    parentFolderID: number;
    [property: string]: any;
}

/**
 * Information about the API.
 */
export interface CreateUpdateAPI {
    /**
     * The API's description. This supports Markdown formatting.
     */
    description?: string;
    /**
     * The API's name.
     */
    name: string;
    /**
     * The API's short summary.
     */
    summary?: string;
    [property: string]: any;
}

/**
 * Information about the API's Git repository integration.
 */
export interface GitInfo {
    /**
     * The API definition's collection repository folder location.
     */
    collectionFolder?: string;
    /**
     * The domain at which the Git repository is hosted.
     */
    domain?: null | string;
    /**
     * The organization that owns the repository.
     */
    organization?: string;
    /**
     * The repository's name.
     */
    repository?: string;
    /**
     * The API definition's repository folder location. This returns an empty string if the
     * connected repository uses a root file.
     */
    schemaFolder?: string;
    [property: string]: any;
}

export interface ImportExportFile {
    /**
     * A file containing a valid user's export .zip file.
     */
    input: string;
    /**
     * The `file` type value.
     */
    type: ImportExportFileType;
    [property: string]: any;
}

/**
 * The `file` type value.
 */
export enum ImportExportFileType {
    File = "file",
}

export interface JSONSchema {
    input?:   any;
    options?: any;
    /**
     * The OpenAPI definition type.
     */
    type?: JSONSchemaType;
    [property: string]: any;
}

/**
 * The OpenAPI definition type.
 */
export enum JSONSchemaType {
    JSON = "json",
}

export interface JSONStringified {
    /**
     * The stringified OpenAPI definition.
     */
    input?:   string;
    options?: any;
    /**
     * The OpenAPI definition type.
     */
    type?: JSONSchemaType;
    [property: string]: any;
}

/**
 * The response's meta information for paginated results.
 */
export interface Meta {
    /**
     * The maximum number of records in the paginated response.
     */
    limit?: number;
    /**
     * The Base64-encoded value that points to the next record in the results set.
     */
    nextCursor?: string;
    /**
     * The number of records that match the defined criteria.
     */
    total?: number;
    [property: string]: any;
}

/**
 * Information about the schema file.
 */
export interface SchemaFileBase {
    /**
     * The date and time at which the file was created.
     */
    createdAt?: string;
    /**
     * The user Id of the user that created the file.
     */
    createdBy?: string;
    /**
     * The schema file's ID.
     */
    id?: string;
    /**
     * The schema file's name.
     */
    name?: string;
    /**
     * The file system path to the schema file.
     */
    path?: string;
    /**
     * The date and time at which the file was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user that last updated the file.
     */
    updatedBy?: string;
    [property: string]: any;
}

/**
 * Information about the schema file.
 */
export interface SchemaFileContents {
    /**
     * The schema file's content.
     */
    content?: string;
    /**
     * The date and time at which the file was created.
     */
    createdAt?: string;
    /**
     * The user Id of the user that created the file.
     */
    createdBy?: string;
    /**
     * The schema file's ID.
     */
    id?: string;
    /**
     * The schema file's name.
     */
    name?: string;
    /**
     * The file system path to the schema file.
     */
    path?: string;
    /**
     * The date and time at which the file was last updated.
     */
    updatedAt?: string;
    /**
     * The user ID of the user that last updated the file.
     */
    updatedBy?: string;
    [property: string]: any;
}

/**
 * Information about the error that occurred during the task's processing.
 */
export interface TaskError {
    error?: TaskErrorError;
    [property: string]: any;
}

export interface TaskErrorError {
    /**
     * The task's error message.
     */
    message?: string;
    [property: string]: any;
}

/**
 * Information about the task's resources.
 */
export interface TaskResource {
    resources?: TaskResourceResourcesItem[];
    [property: string]: any;
}

export interface TaskResourceResourcesItem {
    /**
     * The task's ID.
     */
    id?: string;
    /**
     * The task's assigned resource URL.
     */
    url?: string;
    [property: string]: any;
}

export interface UpdatePANAPI {
    api?: UpdatePanAPIAPI;
    [property: string]: any;
}

export interface UpdatePanAPIAPI {
    /**
     * The API's new parent folder ID.
     */
    parentFolderID?: number;
    [property: string]: any;
}

export interface UpdatePANCollection {
    collection?: UpdatePanCollectionCollection;
    [property: string]: any;
}

export interface UpdatePanCollectionCollection {
    /**
     * The collection's updated environments.
     */
    environments?: UpdatePanCollectionCollectionEnvironments;
    /**
     * The collection's new parent folder ID.
     */
    parentFolderID?: number;
    /**
     * The collection's updated summary.
     */
    summary?: string;
    [property: string]: any;
}

/**
 * The collection's updated environments.
 */
export interface UpdatePanCollectionCollectionEnvironments {
    add?:    string[];
    remove?: string[];
    [property: string]: any;
}

export interface UpdatePANFolder {
    folder?: UpdatePanFolderFolder;
    [property: string]: any;
}

export interface UpdatePanFolderFolder {
    /**
     * The folder's updated description.
     */
    description?: string;
    /**
     * The folder's new name.
     */
    name?: string;
    /**
     * The folder's new parent folder ID.
     */
    parentFolderID?: number;
    [property: string]: any;
}

export interface UpdatePANWorkspace {
    workspace?: UpdatePanWorkspaceWorkspace;
    [property: string]: any;
}

export interface UpdatePanWorkspaceWorkspace {
    /**
     * The workspace's new parent folder ID.
     */
    parentFolderID?: number;
    [property: string]: any;
}

/**
 * Information about the API version.
 */
export interface VersionBase {
    /**
     * The date and time at which the version was created.
     */
    createdAt?: string;
    /**
     * The version's ID.
     */
    id?: string;
    /**
     * The version's name.
     */
    name?: string;
    /**
     * The version's release notes.
     */
    releaseNotes?: string;
    /**
     * The date and time at which the version was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

/**
 * Detailed information about the API version.
 */
export interface VersionExtended {
    /**
     * A list of the version's collections.
     */
    collections?: VersionExtendedCollectionsItem[];
    /**
     * The date and time at which the version was created.
     */
    createdAt?: string;
    /**
     * The version's ID.
     */
    id?: string;
    /**
     * The version's name.
     */
    name?: string;
    /**
     * The version's release notes.
     */
    releaseNotes?: string;
    /**
     * A list of the version's API schemas.
     */
    schemas?: VersionExtendedSchemasItem[];
    /**
     * The date and time at which the version was last updated.
     */
    updatedAt?: string;
    [property: string]: any;
}

/**
 * Information about the collection.
 */
export interface VersionExtendedCollectionsItem {
    /**
     * The collection's unique ID.
     */
    id?: string;
    /**
     * The collection's name.
     */
    name?: string;
    [property: string]: any;
}

/**
 * Information about the schema.
 */
export interface VersionExtendedSchemasItem {
    /**
     * The schema's unique ID.
     */
    id?: string;
    /**
     * The type of schema.
     */
    type?: PostApisAPIIDSchemasBodyType;
    [property: string]: any;
}

// Converts JSON strings to/from your types
// and asserts the results of JSON.parse at runtime
export class Convert {
    public static toDeleteApisAPIIDResponse401(json: string): DeleteApisAPIIDResponse401 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDResponse401"));
    }

    public static deleteApisAPIIDResponse401ToJson(value: DeleteApisAPIIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDResponse401")), null, 2);
    }

    public static toDeleteApisAPIIDResponse403(json: string): DeleteApisAPIIDResponse403 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDResponse403"));
    }

    public static deleteApisAPIIDResponse403ToJson(value: DeleteApisAPIIDResponse403): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDResponse403")), null, 2);
    }

    public static toDeleteApisAPIIDResponse404(json: string): DeleteApisAPIIDResponse404 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDResponse404"));
    }

    public static deleteApisAPIIDResponse404ToJson(value: DeleteApisAPIIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDResponse404")), null, 2);
    }

    public static toDeleteApisAPIIDResponse422(json: string): DeleteApisAPIIDResponse422 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDResponse422"));
    }

    public static deleteApisAPIIDResponse422ToJson(value: DeleteApisAPIIDResponse422): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDResponse422")), null, 2);
    }

    public static toDeleteApisAPIIDResponse500(json: string): DeleteApisAPIIDResponse500 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDResponse500"));
    }

    public static deleteApisAPIIDResponse500ToJson(value: DeleteApisAPIIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDResponse500")), null, 2);
    }

    public static toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400(json: string): DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400"));
    }

    public static deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400ToJson(value: DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400")), null, 2);
    }

    public static toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401(json: string): DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401"));
    }

    public static deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401ToJson(value: DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401")), null, 2);
    }

    public static toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403(json: string): DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403"));
    }

    public static deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403ToJson(value: DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403")), null, 2);
    }

    public static toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404(json: string): DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404"));
    }

    public static deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404ToJson(value: DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404")), null, 2);
    }

    public static toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422(json: string): DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422"));
    }

    public static deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422ToJson(value: DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422")), null, 2);
    }

    public static toDeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500(json: string): DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500"));
    }

    public static deleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500ToJson(value: DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500")), null, 2);
    }

    public static toDeleteApisAPIIDVersionsVersionIDResponse400(json: string): DeleteApisAPIIDVersionsVersionIDResponse400 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDVersionsVersionIDResponse400"));
    }

    public static deleteApisAPIIDVersionsVersionIDResponse400ToJson(value: DeleteApisAPIIDVersionsVersionIDResponse400): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDVersionsVersionIDResponse400")), null, 2);
    }

    public static toDeleteApisAPIIDVersionsVersionIDResponse401(json: string): DeleteApisAPIIDVersionsVersionIDResponse401 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDVersionsVersionIDResponse401"));
    }

    public static deleteApisAPIIDVersionsVersionIDResponse401ToJson(value: DeleteApisAPIIDVersionsVersionIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDVersionsVersionIDResponse401")), null, 2);
    }

    public static toDeleteApisAPIIDVersionsVersionIDResponse403(json: string): DeleteApisAPIIDVersionsVersionIDResponse403 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDVersionsVersionIDResponse403"));
    }

    public static deleteApisAPIIDVersionsVersionIDResponse403ToJson(value: DeleteApisAPIIDVersionsVersionIDResponse403): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDVersionsVersionIDResponse403")), null, 2);
    }

    public static toDeleteApisAPIIDVersionsVersionIDResponse404(json: string): DeleteApisAPIIDVersionsVersionIDResponse404 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDVersionsVersionIDResponse404"));
    }

    public static deleteApisAPIIDVersionsVersionIDResponse404ToJson(value: DeleteApisAPIIDVersionsVersionIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDVersionsVersionIDResponse404")), null, 2);
    }

    public static toDeleteApisAPIIDVersionsVersionIDResponse500(json: string): DeleteApisAPIIDVersionsVersionIDResponse500 {
        return cast(JSON.parse(json), r("DeleteApisAPIIDVersionsVersionIDResponse500"));
    }

    public static deleteApisAPIIDVersionsVersionIDResponse500ToJson(value: DeleteApisAPIIDVersionsVersionIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteApisAPIIDVersionsVersionIDResponse500")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDFoldersFolderIDResponse(json: string): DeleteCollectionsCollectionIDFoldersFolderIDResponse {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDFoldersFolderIDResponse"));
    }

    public static deleteCollectionsCollectionIDFoldersFolderIDResponseToJson(value: DeleteCollectionsCollectionIDFoldersFolderIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDFoldersFolderIDResponse")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDFoldersFolderIDResponse401(json: string): DeleteCollectionsCollectionIDFoldersFolderIDResponse401 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDFoldersFolderIDResponse401"));
    }

    public static deleteCollectionsCollectionIDFoldersFolderIDResponse401ToJson(value: DeleteCollectionsCollectionIDFoldersFolderIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDFoldersFolderIDResponse401")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDFoldersFolderIDResponse404(json: string): DeleteCollectionsCollectionIDFoldersFolderIDResponse404 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDFoldersFolderIDResponse404"));
    }

    public static deleteCollectionsCollectionIDFoldersFolderIDResponse404ToJson(value: DeleteCollectionsCollectionIDFoldersFolderIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDFoldersFolderIDResponse404")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDFoldersFolderIDResponse500(json: string): DeleteCollectionsCollectionIDFoldersFolderIDResponse500 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDFoldersFolderIDResponse500"));
    }

    public static deleteCollectionsCollectionIDFoldersFolderIDResponse500ToJson(value: DeleteCollectionsCollectionIDFoldersFolderIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDFoldersFolderIDResponse500")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDRequestsRequestIDResponse(json: string): DeleteCollectionsCollectionIDRequestsRequestIDResponse {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDRequestsRequestIDResponse"));
    }

    public static deleteCollectionsCollectionIDRequestsRequestIDResponseToJson(value: DeleteCollectionsCollectionIDRequestsRequestIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDRequestsRequestIDResponse")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDRequestsRequestIDResponse401(json: string): DeleteCollectionsCollectionIDRequestsRequestIDResponse401 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDRequestsRequestIDResponse401"));
    }

    public static deleteCollectionsCollectionIDRequestsRequestIDResponse401ToJson(value: DeleteCollectionsCollectionIDRequestsRequestIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDRequestsRequestIDResponse401")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDRequestsRequestIDResponse404(json: string): DeleteCollectionsCollectionIDRequestsRequestIDResponse404 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDRequestsRequestIDResponse404"));
    }

    public static deleteCollectionsCollectionIDRequestsRequestIDResponse404ToJson(value: DeleteCollectionsCollectionIDRequestsRequestIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDRequestsRequestIDResponse404")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDRequestsRequestIDResponse500(json: string): DeleteCollectionsCollectionIDRequestsRequestIDResponse500 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDRequestsRequestIDResponse500"));
    }

    public static deleteCollectionsCollectionIDRequestsRequestIDResponse500ToJson(value: DeleteCollectionsCollectionIDRequestsRequestIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDRequestsRequestIDResponse500")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDResponse(json: string): DeleteCollectionsCollectionIDResponse {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDResponse"));
    }

    public static deleteCollectionsCollectionIDResponseToJson(value: DeleteCollectionsCollectionIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDResponse")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDResponse401(json: string): DeleteCollectionsCollectionIDResponse401 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDResponse401"));
    }

    public static deleteCollectionsCollectionIDResponse401ToJson(value: DeleteCollectionsCollectionIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDResponse401")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDResponse404(json: string): DeleteCollectionsCollectionIDResponse404 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDResponse404"));
    }

    public static deleteCollectionsCollectionIDResponse404ToJson(value: DeleteCollectionsCollectionIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDResponse404")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDResponse429(json: string): DeleteCollectionsCollectionIDResponse429 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDResponse429"));
    }

    public static deleteCollectionsCollectionIDResponse429ToJson(value: DeleteCollectionsCollectionIDResponse429): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDResponse429")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDResponse500(json: string): DeleteCollectionsCollectionIDResponse500 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDResponse500"));
    }

    public static deleteCollectionsCollectionIDResponse500ToJson(value: DeleteCollectionsCollectionIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDResponse500")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDResponsesResponseIDResponse(json: string): DeleteCollectionsCollectionIDResponsesResponseIDResponse {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDResponsesResponseIDResponse"));
    }

    public static deleteCollectionsCollectionIDResponsesResponseIDResponseToJson(value: DeleteCollectionsCollectionIDResponsesResponseIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDResponsesResponseIDResponse")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDResponsesResponseIDResponse401(json: string): DeleteCollectionsCollectionIDResponsesResponseIDResponse401 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDResponsesResponseIDResponse401"));
    }

    public static deleteCollectionsCollectionIDResponsesResponseIDResponse401ToJson(value: DeleteCollectionsCollectionIDResponsesResponseIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDResponsesResponseIDResponse401")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDResponsesResponseIDResponse404(json: string): DeleteCollectionsCollectionIDResponsesResponseIDResponse404 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDResponsesResponseIDResponse404"));
    }

    public static deleteCollectionsCollectionIDResponsesResponseIDResponse404ToJson(value: DeleteCollectionsCollectionIDResponsesResponseIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDResponsesResponseIDResponse404")), null, 2);
    }

    public static toDeleteCollectionsCollectionIDResponsesResponseIDResponse500(json: string): DeleteCollectionsCollectionIDResponsesResponseIDResponse500 {
        return cast(JSON.parse(json), r("DeleteCollectionsCollectionIDResponsesResponseIDResponse500"));
    }

    public static deleteCollectionsCollectionIDResponsesResponseIDResponse500ToJson(value: DeleteCollectionsCollectionIDResponsesResponseIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteCollectionsCollectionIDResponsesResponseIDResponse500")), null, 2);
    }

    public static toDeleteEnvironmentsEnvironmentIDResponse(json: string): DeleteEnvironmentsEnvironmentIDResponse {
        return cast(JSON.parse(json), r("DeleteEnvironmentsEnvironmentIDResponse"));
    }

    public static deleteEnvironmentsEnvironmentIDResponseToJson(value: DeleteEnvironmentsEnvironmentIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteEnvironmentsEnvironmentIDResponse")), null, 2);
    }

    public static toDeleteEnvironmentsEnvironmentIDResponse401(json: string): DeleteEnvironmentsEnvironmentIDResponse401 {
        return cast(JSON.parse(json), r("DeleteEnvironmentsEnvironmentIDResponse401"));
    }

    public static deleteEnvironmentsEnvironmentIDResponse401ToJson(value: DeleteEnvironmentsEnvironmentIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteEnvironmentsEnvironmentIDResponse401")), null, 2);
    }

    public static toDeleteEnvironmentsEnvironmentIDResponse404(json: string): DeleteEnvironmentsEnvironmentIDResponse404 {
        return cast(JSON.parse(json), r("DeleteEnvironmentsEnvironmentIDResponse404"));
    }

    public static deleteEnvironmentsEnvironmentIDResponse404ToJson(value: DeleteEnvironmentsEnvironmentIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteEnvironmentsEnvironmentIDResponse404")), null, 2);
    }

    public static toDeleteEnvironmentsEnvironmentIDResponse429(json: string): DeleteEnvironmentsEnvironmentIDResponse429 {
        return cast(JSON.parse(json), r("DeleteEnvironmentsEnvironmentIDResponse429"));
    }

    public static deleteEnvironmentsEnvironmentIDResponse429ToJson(value: DeleteEnvironmentsEnvironmentIDResponse429): string {
        return JSON.stringify(uncast(value, r("DeleteEnvironmentsEnvironmentIDResponse429")), null, 2);
    }

    public static toDeleteEnvironmentsEnvironmentIDResponse500(json: string): DeleteEnvironmentsEnvironmentIDResponse500 {
        return cast(JSON.parse(json), r("DeleteEnvironmentsEnvironmentIDResponse500"));
    }

    public static deleteEnvironmentsEnvironmentIDResponse500ToJson(value: DeleteEnvironmentsEnvironmentIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteEnvironmentsEnvironmentIDResponse500")), null, 2);
    }

    public static toDeleteMocksMockIDResponse(json: string): DeleteMocksMockIDResponse {
        return cast(JSON.parse(json), r("DeleteMocksMockIDResponse"));
    }

    public static deleteMocksMockIDResponseToJson(value: DeleteMocksMockIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDResponse")), null, 2);
    }

    public static toDeleteMocksMockIDResponse400(json: string): DeleteMocksMockIDResponse400 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDResponse400"));
    }

    public static deleteMocksMockIDResponse400ToJson(value: DeleteMocksMockIDResponse400): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDResponse400")), null, 2);
    }

    public static toDeleteMocksMockIDResponse401(json: string): DeleteMocksMockIDResponse401 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDResponse401"));
    }

    public static deleteMocksMockIDResponse401ToJson(value: DeleteMocksMockIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDResponse401")), null, 2);
    }

    public static toDeleteMocksMockIDResponse404(json: string): DeleteMocksMockIDResponse404 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDResponse404"));
    }

    public static deleteMocksMockIDResponse404ToJson(value: DeleteMocksMockIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDResponse404")), null, 2);
    }

    public static toDeleteMocksMockIDResponse429(json: string): DeleteMocksMockIDResponse429 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDResponse429"));
    }

    public static deleteMocksMockIDResponse429ToJson(value: DeleteMocksMockIDResponse429): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDResponse429")), null, 2);
    }

    public static toDeleteMocksMockIDResponse500(json: string): DeleteMocksMockIDResponse500 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDResponse500"));
    }

    public static deleteMocksMockIDResponse500ToJson(value: DeleteMocksMockIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDResponse500")), null, 2);
    }

    public static toDeleteMocksMockIDServerResponsesServerResponseIDResponse(json: string): DeleteMocksMockIDServerResponsesServerResponseIDResponse {
        return cast(JSON.parse(json), r("DeleteMocksMockIDServerResponsesServerResponseIDResponse"));
    }

    public static deleteMocksMockIDServerResponsesServerResponseIDResponseToJson(value: DeleteMocksMockIDServerResponsesServerResponseIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse")), null, 2);
    }

    public static toDeleteMocksMockIDServerResponsesServerResponseIDResponse400(json: string): DeleteMocksMockIDServerResponsesServerResponseIDResponse400 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDServerResponsesServerResponseIDResponse400"));
    }

    public static deleteMocksMockIDServerResponsesServerResponseIDResponse400ToJson(value: DeleteMocksMockIDServerResponsesServerResponseIDResponse400): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse400")), null, 2);
    }

    public static toDeleteMocksMockIDServerResponsesServerResponseIDResponse401(json: string): DeleteMocksMockIDServerResponsesServerResponseIDResponse401 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDServerResponsesServerResponseIDResponse401"));
    }

    public static deleteMocksMockIDServerResponsesServerResponseIDResponse401ToJson(value: DeleteMocksMockIDServerResponsesServerResponseIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse401")), null, 2);
    }

    public static toDeleteMocksMockIDServerResponsesServerResponseIDResponse404(json: string): DeleteMocksMockIDServerResponsesServerResponseIDResponse404 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDServerResponsesServerResponseIDResponse404"));
    }

    public static deleteMocksMockIDServerResponsesServerResponseIDResponse404ToJson(value: DeleteMocksMockIDServerResponsesServerResponseIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse404")), null, 2);
    }

    public static toDeleteMocksMockIDServerResponsesServerResponseIDResponse429(json: string): DeleteMocksMockIDServerResponsesServerResponseIDResponse429 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDServerResponsesServerResponseIDResponse429"));
    }

    public static deleteMocksMockIDServerResponsesServerResponseIDResponse429ToJson(value: DeleteMocksMockIDServerResponsesServerResponseIDResponse429): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse429")), null, 2);
    }

    public static toDeleteMocksMockIDServerResponsesServerResponseIDResponse500(json: string): DeleteMocksMockIDServerResponsesServerResponseIDResponse500 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDServerResponsesServerResponseIDResponse500"));
    }

    public static deleteMocksMockIDServerResponsesServerResponseIDResponse500ToJson(value: DeleteMocksMockIDServerResponsesServerResponseIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse500")), null, 2);
    }

    public static toDeleteMocksMockIDUnpublishResponse(json: string): DeleteMocksMockIDUnpublishResponse {
        return cast(JSON.parse(json), r("DeleteMocksMockIDUnpublishResponse"));
    }

    public static deleteMocksMockIDUnpublishResponseToJson(value: DeleteMocksMockIDUnpublishResponse): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDUnpublishResponse")), null, 2);
    }

    public static toDeleteMocksMockIDUnpublishResponse400(json: string): DeleteMocksMockIDUnpublishResponse400 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDUnpublishResponse400"));
    }

    public static deleteMocksMockIDUnpublishResponse400ToJson(value: DeleteMocksMockIDUnpublishResponse400): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDUnpublishResponse400")), null, 2);
    }

    public static toDeleteMocksMockIDUnpublishResponse401(json: string): DeleteMocksMockIDUnpublishResponse401 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDUnpublishResponse401"));
    }

    public static deleteMocksMockIDUnpublishResponse401ToJson(value: DeleteMocksMockIDUnpublishResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDUnpublishResponse401")), null, 2);
    }

    public static toDeleteMocksMockIDUnpublishResponse404(json: string): DeleteMocksMockIDUnpublishResponse404 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDUnpublishResponse404"));
    }

    public static deleteMocksMockIDUnpublishResponse404ToJson(value: DeleteMocksMockIDUnpublishResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDUnpublishResponse404")), null, 2);
    }

    public static toDeleteMocksMockIDUnpublishResponse429(json: string): DeleteMocksMockIDUnpublishResponse429 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDUnpublishResponse429"));
    }

    public static deleteMocksMockIDUnpublishResponse429ToJson(value: DeleteMocksMockIDUnpublishResponse429): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDUnpublishResponse429")), null, 2);
    }

    public static toDeleteMocksMockIDUnpublishResponse500(json: string): DeleteMocksMockIDUnpublishResponse500 {
        return cast(JSON.parse(json), r("DeleteMocksMockIDUnpublishResponse500"));
    }

    public static deleteMocksMockIDUnpublishResponse500ToJson(value: DeleteMocksMockIDUnpublishResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteMocksMockIDUnpublishResponse500")), null, 2);
    }

    public static toDeleteMonitorsMonitorIDResponse(json: string): DeleteMonitorsMonitorIDResponse {
        return cast(JSON.parse(json), r("DeleteMonitorsMonitorIDResponse"));
    }

    public static deleteMonitorsMonitorIDResponseToJson(value: DeleteMonitorsMonitorIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteMonitorsMonitorIDResponse")), null, 2);
    }

    public static toDeleteMonitorsMonitorIDResponse400(json: string): DeleteMonitorsMonitorIDResponse400 {
        return cast(JSON.parse(json), r("DeleteMonitorsMonitorIDResponse400"));
    }

    public static deleteMonitorsMonitorIDResponse400ToJson(value: DeleteMonitorsMonitorIDResponse400): string {
        return JSON.stringify(uncast(value, r("DeleteMonitorsMonitorIDResponse400")), null, 2);
    }

    public static toDeleteMonitorsMonitorIDResponse401(json: string): DeleteMonitorsMonitorIDResponse401 {
        return cast(JSON.parse(json), r("DeleteMonitorsMonitorIDResponse401"));
    }

    public static deleteMonitorsMonitorIDResponse401ToJson(value: DeleteMonitorsMonitorIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteMonitorsMonitorIDResponse401")), null, 2);
    }

    public static toDeleteMonitorsMonitorIDResponse429(json: string): DeleteMonitorsMonitorIDResponse429 {
        return cast(JSON.parse(json), r("DeleteMonitorsMonitorIDResponse429"));
    }

    public static deleteMonitorsMonitorIDResponse429ToJson(value: DeleteMonitorsMonitorIDResponse429): string {
        return JSON.stringify(uncast(value, r("DeleteMonitorsMonitorIDResponse429")), null, 2);
    }

    public static toDeleteMonitorsMonitorIDResponse500(json: string): DeleteMonitorsMonitorIDResponse500 {
        return cast(JSON.parse(json), r("DeleteMonitorsMonitorIDResponse500"));
    }

    public static deleteMonitorsMonitorIDResponse500ToJson(value: DeleteMonitorsMonitorIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteMonitorsMonitorIDResponse500")), null, 2);
    }

    public static toDeleteNetworkPrivateElementTypeElementIDResponse(json: string): DeleteNetworkPrivateElementTypeElementIDResponse {
        return cast(JSON.parse(json), r("DeleteNetworkPrivateElementTypeElementIDResponse"));
    }

    public static deleteNetworkPrivateElementTypeElementIDResponseToJson(value: DeleteNetworkPrivateElementTypeElementIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteNetworkPrivateElementTypeElementIDResponse")), null, 2);
    }

    public static toDeleteNetworkPrivateElementTypeElementIDResponse400(json: string): DeleteNetworkPrivateElementTypeElementIDResponse400 {
        return cast(JSON.parse(json), r("DeleteNetworkPrivateElementTypeElementIDResponse400"));
    }

    public static deleteNetworkPrivateElementTypeElementIDResponse400ToJson(value: DeleteNetworkPrivateElementTypeElementIDResponse400): string {
        return JSON.stringify(uncast(value, r("DeleteNetworkPrivateElementTypeElementIDResponse400")), null, 2);
    }

    public static toDeleteNetworkPrivateElementTypeElementIDResponse401(json: string): DeleteNetworkPrivateElementTypeElementIDResponse401 {
        return cast(JSON.parse(json), r("DeleteNetworkPrivateElementTypeElementIDResponse401"));
    }

    public static deleteNetworkPrivateElementTypeElementIDResponse401ToJson(value: DeleteNetworkPrivateElementTypeElementIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteNetworkPrivateElementTypeElementIDResponse401")), null, 2);
    }

    public static toDeleteNetworkPrivateElementTypeElementIDResponse403(json: string): DeleteNetworkPrivateElementTypeElementIDResponse403 {
        return cast(JSON.parse(json), r("DeleteNetworkPrivateElementTypeElementIDResponse403"));
    }

    public static deleteNetworkPrivateElementTypeElementIDResponse403ToJson(value: DeleteNetworkPrivateElementTypeElementIDResponse403): string {
        return JSON.stringify(uncast(value, r("DeleteNetworkPrivateElementTypeElementIDResponse403")), null, 2);
    }

    public static toDeleteNetworkPrivateElementTypeElementIDResponse404(json: string): DeleteNetworkPrivateElementTypeElementIDResponse404 {
        return cast(JSON.parse(json), r("DeleteNetworkPrivateElementTypeElementIDResponse404"));
    }

    public static deleteNetworkPrivateElementTypeElementIDResponse404ToJson(value: DeleteNetworkPrivateElementTypeElementIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteNetworkPrivateElementTypeElementIDResponse404")), null, 2);
    }

    public static toDeleteNetworkPrivateElementTypeElementIDResponse429(json: string): DeleteNetworkPrivateElementTypeElementIDResponse429 {
        return cast(JSON.parse(json), r("DeleteNetworkPrivateElementTypeElementIDResponse429"));
    }

    public static deleteNetworkPrivateElementTypeElementIDResponse429ToJson(value: DeleteNetworkPrivateElementTypeElementIDResponse429): string {
        return JSON.stringify(uncast(value, r("DeleteNetworkPrivateElementTypeElementIDResponse429")), null, 2);
    }

    public static toDeleteNetworkPrivateElementTypeElementIDResponse500(json: string): DeleteNetworkPrivateElementTypeElementIDResponse500 {
        return cast(JSON.parse(json), r("DeleteNetworkPrivateElementTypeElementIDResponse500"));
    }

    public static deleteNetworkPrivateElementTypeElementIDResponse500ToJson(value: DeleteNetworkPrivateElementTypeElementIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteNetworkPrivateElementTypeElementIDResponse500")), null, 2);
    }

    public static toDeleteScimV2GroupsGroupIDResponse400(json: string): DeleteScimV2GroupsGroupIDResponse400 {
        return cast(JSON.parse(json), r("DeleteScimV2GroupsGroupIDResponse400"));
    }

    public static deleteScimV2GroupsGroupIDResponse400ToJson(value: DeleteScimV2GroupsGroupIDResponse400): string {
        return JSON.stringify(uncast(value, r("DeleteScimV2GroupsGroupIDResponse400")), null, 2);
    }

    public static toDeleteScimV2GroupsGroupIDResponse401(json: string): DeleteScimV2GroupsGroupIDResponse401 {
        return cast(JSON.parse(json), r("DeleteScimV2GroupsGroupIDResponse401"));
    }

    public static deleteScimV2GroupsGroupIDResponse401ToJson(value: DeleteScimV2GroupsGroupIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteScimV2GroupsGroupIDResponse401")), null, 2);
    }

    public static toDeleteScimV2GroupsGroupIDResponse403(json: string): DeleteScimV2GroupsGroupIDResponse403 {
        return cast(JSON.parse(json), r("DeleteScimV2GroupsGroupIDResponse403"));
    }

    public static deleteScimV2GroupsGroupIDResponse403ToJson(value: DeleteScimV2GroupsGroupIDResponse403): string {
        return JSON.stringify(uncast(value, r("DeleteScimV2GroupsGroupIDResponse403")), null, 2);
    }

    public static toDeleteScimV2GroupsGroupIDResponse404(json: string): DeleteScimV2GroupsGroupIDResponse404 {
        return cast(JSON.parse(json), r("DeleteScimV2GroupsGroupIDResponse404"));
    }

    public static deleteScimV2GroupsGroupIDResponse404ToJson(value: DeleteScimV2GroupsGroupIDResponse404): string {
        return JSON.stringify(uncast(value, r("DeleteScimV2GroupsGroupIDResponse404")), null, 2);
    }

    public static toDeleteScimV2GroupsGroupIDResponse429(json: string): DeleteScimV2GroupsGroupIDResponse429 {
        return cast(JSON.parse(json), r("DeleteScimV2GroupsGroupIDResponse429"));
    }

    public static deleteScimV2GroupsGroupIDResponse429ToJson(value: DeleteScimV2GroupsGroupIDResponse429): string {
        return JSON.stringify(uncast(value, r("DeleteScimV2GroupsGroupIDResponse429")), null, 2);
    }

    public static toDeleteScimV2GroupsGroupIDResponse500(json: string): DeleteScimV2GroupsGroupIDResponse500 {
        return cast(JSON.parse(json), r("DeleteScimV2GroupsGroupIDResponse500"));
    }

    public static deleteScimV2GroupsGroupIDResponse500ToJson(value: DeleteScimV2GroupsGroupIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteScimV2GroupsGroupIDResponse500")), null, 2);
    }

    public static toDeleteWorkspacesWorkspaceIDResponse(json: string): DeleteWorkspacesWorkspaceIDResponse {
        return cast(JSON.parse(json), r("DeleteWorkspacesWorkspaceIDResponse"));
    }

    public static deleteWorkspacesWorkspaceIDResponseToJson(value: DeleteWorkspacesWorkspaceIDResponse): string {
        return JSON.stringify(uncast(value, r("DeleteWorkspacesWorkspaceIDResponse")), null, 2);
    }

    public static toDeleteWorkspacesWorkspaceIDResponse400(json: string): DeleteWorkspacesWorkspaceIDResponse400 {
        return cast(JSON.parse(json), r("DeleteWorkspacesWorkspaceIDResponse400"));
    }

    public static deleteWorkspacesWorkspaceIDResponse400ToJson(value: DeleteWorkspacesWorkspaceIDResponse400): string {
        return JSON.stringify(uncast(value, r("DeleteWorkspacesWorkspaceIDResponse400")), null, 2);
    }

    public static toDeleteWorkspacesWorkspaceIDResponse401(json: string): DeleteWorkspacesWorkspaceIDResponse401 {
        return cast(JSON.parse(json), r("DeleteWorkspacesWorkspaceIDResponse401"));
    }

    public static deleteWorkspacesWorkspaceIDResponse401ToJson(value: DeleteWorkspacesWorkspaceIDResponse401): string {
        return JSON.stringify(uncast(value, r("DeleteWorkspacesWorkspaceIDResponse401")), null, 2);
    }

    public static toDeleteWorkspacesWorkspaceIDResponse429(json: string): DeleteWorkspacesWorkspaceIDResponse429 {
        return cast(JSON.parse(json), r("DeleteWorkspacesWorkspaceIDResponse429"));
    }

    public static deleteWorkspacesWorkspaceIDResponse429ToJson(value: DeleteWorkspacesWorkspaceIDResponse429): string {
        return JSON.stringify(uncast(value, r("DeleteWorkspacesWorkspaceIDResponse429")), null, 2);
    }

    public static toDeleteWorkspacesWorkspaceIDResponse500(json: string): DeleteWorkspacesWorkspaceIDResponse500 {
        return cast(JSON.parse(json), r("DeleteWorkspacesWorkspaceIDResponse500"));
    }

    public static deleteWorkspacesWorkspaceIDResponse500ToJson(value: DeleteWorkspacesWorkspaceIDResponse500): string {
        return JSON.stringify(uncast(value, r("DeleteWorkspacesWorkspaceIDResponse500")), null, 2);
    }

    public static toGetApisAPIIDCollectionsCollectionIDResponse(json: string): GetApisAPIIDCollectionsCollectionIDResponse {
        return cast(JSON.parse(json), r("GetApisAPIIDCollectionsCollectionIDResponse"));
    }

    public static getApisAPIIDCollectionsCollectionIDResponseToJson(value: GetApisAPIIDCollectionsCollectionIDResponse): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDCollectionsCollectionIDResponse")), null, 2);
    }

    public static toGetApisAPIIDCollectionsCollectionIDResponse400(json: string): GetApisAPIIDCollectionsCollectionIDResponse400 {
        return cast(JSON.parse(json), r("GetApisAPIIDCollectionsCollectionIDResponse400"));
    }

    public static getApisAPIIDCollectionsCollectionIDResponse400ToJson(value: GetApisAPIIDCollectionsCollectionIDResponse400): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDCollectionsCollectionIDResponse400")), null, 2);
    }

    public static toGetApisAPIIDCollectionsCollectionIDResponse401(json: string): GetApisAPIIDCollectionsCollectionIDResponse401 {
        return cast(JSON.parse(json), r("GetApisAPIIDCollectionsCollectionIDResponse401"));
    }

    public static getApisAPIIDCollectionsCollectionIDResponse401ToJson(value: GetApisAPIIDCollectionsCollectionIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDCollectionsCollectionIDResponse401")), null, 2);
    }

    public static toGetApisAPIIDCollectionsCollectionIDResponse403(json: string): GetApisAPIIDCollectionsCollectionIDResponse403 {
        return cast(JSON.parse(json), r("GetApisAPIIDCollectionsCollectionIDResponse403"));
    }

    public static getApisAPIIDCollectionsCollectionIDResponse403ToJson(value: GetApisAPIIDCollectionsCollectionIDResponse403): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDCollectionsCollectionIDResponse403")), null, 2);
    }

    public static toGetApisAPIIDCollectionsCollectionIDResponse404(json: string): GetApisAPIIDCollectionsCollectionIDResponse404 {
        return cast(JSON.parse(json), r("GetApisAPIIDCollectionsCollectionIDResponse404"));
    }

    public static getApisAPIIDCollectionsCollectionIDResponse404ToJson(value: GetApisAPIIDCollectionsCollectionIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDCollectionsCollectionIDResponse404")), null, 2);
    }

    public static toGetApisAPIIDCollectionsCollectionIDResponse500(json: string): GetApisAPIIDCollectionsCollectionIDResponse500 {
        return cast(JSON.parse(json), r("GetApisAPIIDCollectionsCollectionIDResponse500"));
    }

    public static getApisAPIIDCollectionsCollectionIDResponse500ToJson(value: GetApisAPIIDCollectionsCollectionIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDCollectionsCollectionIDResponse500")), null, 2);
    }

    public static toGetApisAPIIDResponse401(json: string): GetApisAPIIDResponse401 {
        return cast(JSON.parse(json), r("GetApisAPIIDResponse401"));
    }

    public static getApisAPIIDResponse401ToJson(value: GetApisAPIIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDResponse401")), null, 2);
    }

    public static toGetApisAPIIDResponse404(json: string): GetApisAPIIDResponse404 {
        return cast(JSON.parse(json), r("GetApisAPIIDResponse404"));
    }

    public static getApisAPIIDResponse404ToJson(value: GetApisAPIIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDResponse404")), null, 2);
    }

    public static toGetApisAPIIDResponse422(json: string): GetApisAPIIDResponse422 {
        return cast(JSON.parse(json), r("GetApisAPIIDResponse422"));
    }

    public static getApisAPIIDResponse422ToJson(value: GetApisAPIIDResponse422): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDResponse422")), null, 2);
    }

    public static toGetApisAPIIDResponse500(json: string): GetApisAPIIDResponse500 {
        return cast(JSON.parse(json), r("GetApisAPIIDResponse500"));
    }

    public static getApisAPIIDResponse500ToJson(value: GetApisAPIIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDResponse500")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse(json: string): GetApisAPIIDSchemasSchemaIDFilesFilePathResponse {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesFilePathResponseToJson(value: GetApisAPIIDSchemasSchemaIDFilesFilePathResponse): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse400(json: string): GetApisAPIIDSchemasSchemaIDFilesFilePathResponse400 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse400"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesFilePathResponse400ToJson(value: GetApisAPIIDSchemasSchemaIDFilesFilePathResponse400): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse400")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse401(json: string): GetApisAPIIDSchemasSchemaIDFilesFilePathResponse401 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse401"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesFilePathResponse401ToJson(value: GetApisAPIIDSchemasSchemaIDFilesFilePathResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse401")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse404(json: string): GetApisAPIIDSchemasSchemaIDFilesFilePathResponse404 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse404"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesFilePathResponse404ToJson(value: GetApisAPIIDSchemasSchemaIDFilesFilePathResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse404")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse422(json: string): GetApisAPIIDSchemasSchemaIDFilesFilePathResponse422 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse422"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesFilePathResponse422ToJson(value: GetApisAPIIDSchemasSchemaIDFilesFilePathResponse422): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse422")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesFilePathResponse500(json: string): GetApisAPIIDSchemasSchemaIDFilesFilePathResponse500 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse500"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesFilePathResponse500ToJson(value: GetApisAPIIDSchemasSchemaIDFilesFilePathResponse500): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesFilePathResponse500")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesResponse(json: string): GetApisAPIIDSchemasSchemaIDFilesResponse {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesResponse"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesResponseToJson(value: GetApisAPIIDSchemasSchemaIDFilesResponse): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesResponse")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesResponse400(json: string): GetApisAPIIDSchemasSchemaIDFilesResponse400 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesResponse400"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesResponse400ToJson(value: GetApisAPIIDSchemasSchemaIDFilesResponse400): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesResponse400")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesResponse401(json: string): GetApisAPIIDSchemasSchemaIDFilesResponse401 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesResponse401"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesResponse401ToJson(value: GetApisAPIIDSchemasSchemaIDFilesResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesResponse401")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesResponse404(json: string): GetApisAPIIDSchemasSchemaIDFilesResponse404 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesResponse404"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesResponse404ToJson(value: GetApisAPIIDSchemasSchemaIDFilesResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesResponse404")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesResponse422(json: string): GetApisAPIIDSchemasSchemaIDFilesResponse422 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesResponse422"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesResponse422ToJson(value: GetApisAPIIDSchemasSchemaIDFilesResponse422): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesResponse422")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDFilesResponse500(json: string): GetApisAPIIDSchemasSchemaIDFilesResponse500 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDFilesResponse500"));
    }

    public static getApisAPIIDSchemasSchemaIDFilesResponse500ToJson(value: GetApisAPIIDSchemasSchemaIDFilesResponse500): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDFilesResponse500")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDResponse400(json: string): GetApisAPIIDSchemasSchemaIDResponse400 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDResponse400"));
    }

    public static getApisAPIIDSchemasSchemaIDResponse400ToJson(value: GetApisAPIIDSchemasSchemaIDResponse400): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDResponse400")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDResponse401(json: string): GetApisAPIIDSchemasSchemaIDResponse401 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDResponse401"));
    }

    public static getApisAPIIDSchemasSchemaIDResponse401ToJson(value: GetApisAPIIDSchemasSchemaIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDResponse401")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDResponse403(json: string): GetApisAPIIDSchemasSchemaIDResponse403 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDResponse403"));
    }

    public static getApisAPIIDSchemasSchemaIDResponse403ToJson(value: GetApisAPIIDSchemasSchemaIDResponse403): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDResponse403")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDResponse404(json: string): GetApisAPIIDSchemasSchemaIDResponse404 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDResponse404"));
    }

    public static getApisAPIIDSchemasSchemaIDResponse404ToJson(value: GetApisAPIIDSchemasSchemaIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDResponse404")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDResponse422(json: string): GetApisAPIIDSchemasSchemaIDResponse422 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDResponse422"));
    }

    public static getApisAPIIDSchemasSchemaIDResponse422ToJson(value: GetApisAPIIDSchemasSchemaIDResponse422): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDResponse422")), null, 2);
    }

    public static toGetApisAPIIDSchemasSchemaIDResponse500(json: string): GetApisAPIIDSchemasSchemaIDResponse500 {
        return cast(JSON.parse(json), r("GetApisAPIIDSchemasSchemaIDResponse500"));
    }

    public static getApisAPIIDSchemasSchemaIDResponse500ToJson(value: GetApisAPIIDSchemasSchemaIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDSchemasSchemaIDResponse500")), null, 2);
    }

    public static toGetApisAPIIDTagsResponse(json: string): GetApisAPIIDTagsResponse {
        return cast(JSON.parse(json), r("GetApisAPIIDTagsResponse"));
    }

    public static getApisAPIIDTagsResponseToJson(value: GetApisAPIIDTagsResponse): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTagsResponse")), null, 2);
    }

    public static toGetApisAPIIDTagsResponse401(json: string): GetApisAPIIDTagsResponse401 {
        return cast(JSON.parse(json), r("GetApisAPIIDTagsResponse401"));
    }

    public static getApisAPIIDTagsResponse401ToJson(value: GetApisAPIIDTagsResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTagsResponse401")), null, 2);
    }

    public static toGetApisAPIIDTagsResponse403(json: string): GetApisAPIIDTagsResponse403 {
        return cast(JSON.parse(json), r("GetApisAPIIDTagsResponse403"));
    }

    public static getApisAPIIDTagsResponse403ToJson(value: GetApisAPIIDTagsResponse403): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTagsResponse403")), null, 2);
    }

    public static toGetApisAPIIDTagsResponse404(json: string): GetApisAPIIDTagsResponse404 {
        return cast(JSON.parse(json), r("GetApisAPIIDTagsResponse404"));
    }

    public static getApisAPIIDTagsResponse404ToJson(value: GetApisAPIIDTagsResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTagsResponse404")), null, 2);
    }

    public static toGetApisAPIIDTagsResponse500(json: string): GetApisAPIIDTagsResponse500 {
        return cast(JSON.parse(json), r("GetApisAPIIDTagsResponse500"));
    }

    public static getApisAPIIDTagsResponse500ToJson(value: GetApisAPIIDTagsResponse500): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTagsResponse500")), null, 2);
    }

    public static toGetApisAPIIDTasksTaskIDResponse(json: string): GetApisAPIIDTasksTaskIDResponse {
        return cast(JSON.parse(json), r("GetApisAPIIDTasksTaskIDResponse"));
    }

    public static getApisAPIIDTasksTaskIDResponseToJson(value: GetApisAPIIDTasksTaskIDResponse): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTasksTaskIDResponse")), null, 2);
    }

    public static toGetApisAPIIDTasksTaskIDResponse400(json: string): GetApisAPIIDTasksTaskIDResponse400 {
        return cast(JSON.parse(json), r("GetApisAPIIDTasksTaskIDResponse400"));
    }

    public static getApisAPIIDTasksTaskIDResponse400ToJson(value: GetApisAPIIDTasksTaskIDResponse400): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTasksTaskIDResponse400")), null, 2);
    }

    public static toGetApisAPIIDTasksTaskIDResponse401(json: string): GetApisAPIIDTasksTaskIDResponse401 {
        return cast(JSON.parse(json), r("GetApisAPIIDTasksTaskIDResponse401"));
    }

    public static getApisAPIIDTasksTaskIDResponse401ToJson(value: GetApisAPIIDTasksTaskIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTasksTaskIDResponse401")), null, 2);
    }

    public static toGetApisAPIIDTasksTaskIDResponse403(json: string): GetApisAPIIDTasksTaskIDResponse403 {
        return cast(JSON.parse(json), r("GetApisAPIIDTasksTaskIDResponse403"));
    }

    public static getApisAPIIDTasksTaskIDResponse403ToJson(value: GetApisAPIIDTasksTaskIDResponse403): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTasksTaskIDResponse403")), null, 2);
    }

    public static toGetApisAPIIDTasksTaskIDResponse404(json: string): GetApisAPIIDTasksTaskIDResponse404 {
        return cast(JSON.parse(json), r("GetApisAPIIDTasksTaskIDResponse404"));
    }

    public static getApisAPIIDTasksTaskIDResponse404ToJson(value: GetApisAPIIDTasksTaskIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDTasksTaskIDResponse404")), null, 2);
    }

    public static toGetApisAPIIDVersionsResponse(json: string): GetApisAPIIDVersionsResponse {
        return cast(JSON.parse(json), r("GetApisAPIIDVersionsResponse"));
    }

    public static getApisAPIIDVersionsResponseToJson(value: GetApisAPIIDVersionsResponse): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDVersionsResponse")), null, 2);
    }

    public static toGetApisAPIIDVersionsResponse401(json: string): GetApisAPIIDVersionsResponse401 {
        return cast(JSON.parse(json), r("GetApisAPIIDVersionsResponse401"));
    }

    public static getApisAPIIDVersionsResponse401ToJson(value: GetApisAPIIDVersionsResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDVersionsResponse401")), null, 2);
    }

    public static toGetApisAPIIDVersionsResponse404(json: string): GetApisAPIIDVersionsResponse404 {
        return cast(JSON.parse(json), r("GetApisAPIIDVersionsResponse404"));
    }

    public static getApisAPIIDVersionsResponse404ToJson(value: GetApisAPIIDVersionsResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDVersionsResponse404")), null, 2);
    }

    public static toGetApisAPIIDVersionsResponse422(json: string): GetApisAPIIDVersionsResponse422 {
        return cast(JSON.parse(json), r("GetApisAPIIDVersionsResponse422"));
    }

    public static getApisAPIIDVersionsResponse422ToJson(value: GetApisAPIIDVersionsResponse422): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDVersionsResponse422")), null, 2);
    }

    public static toGetApisAPIIDVersionsResponse500(json: string): GetApisAPIIDVersionsResponse500 {
        return cast(JSON.parse(json), r("GetApisAPIIDVersionsResponse500"));
    }

    public static getApisAPIIDVersionsResponse500ToJson(value: GetApisAPIIDVersionsResponse500): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDVersionsResponse500")), null, 2);
    }

    public static toGetApisAPIIDVersionsVersionIDResponse(json: string): GetApisAPIIDVersionsVersionIDResponse {
        return cast(JSON.parse(json), r("GetApisAPIIDVersionsVersionIDResponse"));
    }

    public static getApisAPIIDVersionsVersionIDResponseToJson(value: GetApisAPIIDVersionsVersionIDResponse): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDVersionsVersionIDResponse")), null, 2);
    }

    public static toGetApisAPIIDVersionsVersionIDResponse401(json: string): GetApisAPIIDVersionsVersionIDResponse401 {
        return cast(JSON.parse(json), r("GetApisAPIIDVersionsVersionIDResponse401"));
    }

    public static getApisAPIIDVersionsVersionIDResponse401ToJson(value: GetApisAPIIDVersionsVersionIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDVersionsVersionIDResponse401")), null, 2);
    }

    public static toGetApisAPIIDVersionsVersionIDResponse404(json: string): GetApisAPIIDVersionsVersionIDResponse404 {
        return cast(JSON.parse(json), r("GetApisAPIIDVersionsVersionIDResponse404"));
    }

    public static getApisAPIIDVersionsVersionIDResponse404ToJson(value: GetApisAPIIDVersionsVersionIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDVersionsVersionIDResponse404")), null, 2);
    }

    public static toGetApisAPIIDVersionsVersionIDResponse500(json: string): GetApisAPIIDVersionsVersionIDResponse500 {
        return cast(JSON.parse(json), r("GetApisAPIIDVersionsVersionIDResponse500"));
    }

    public static getApisAPIIDVersionsVersionIDResponse500ToJson(value: GetApisAPIIDVersionsVersionIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetApisAPIIDVersionsVersionIDResponse500")), null, 2);
    }

    public static toGetApisResponse(json: string): GetApisResponse {
        return cast(JSON.parse(json), r("GetApisResponse"));
    }

    public static getApisResponseToJson(value: GetApisResponse): string {
        return JSON.stringify(uncast(value, r("GetApisResponse")), null, 2);
    }

    public static toGetApisResponse401(json: string): GetApisResponse401 {
        return cast(JSON.parse(json), r("GetApisResponse401"));
    }

    public static getApisResponse401ToJson(value: GetApisResponse401): string {
        return JSON.stringify(uncast(value, r("GetApisResponse401")), null, 2);
    }

    public static toGetApisResponse404(json: string): GetApisResponse404 {
        return cast(JSON.parse(json), r("GetApisResponse404"));
    }

    public static getApisResponse404ToJson(value: GetApisResponse404): string {
        return JSON.stringify(uncast(value, r("GetApisResponse404")), null, 2);
    }

    public static toGetApisResponse422(json: string): GetApisResponse422 {
        return cast(JSON.parse(json), r("GetApisResponse422"));
    }

    public static getApisResponse422ToJson(value: GetApisResponse422): string {
        return JSON.stringify(uncast(value, r("GetApisResponse422")), null, 2);
    }

    public static toGetApisResponse500(json: string): GetApisResponse500 {
        return cast(JSON.parse(json), r("GetApisResponse500"));
    }

    public static getApisResponse500ToJson(value: GetApisResponse500): string {
        return JSON.stringify(uncast(value, r("GetApisResponse500")), null, 2);
    }

    public static toGetAuditLogsResponse(json: string): GetAuditLogsResponse {
        return cast(JSON.parse(json), r("GetAuditLogsResponse"));
    }

    public static getAuditLogsResponseToJson(value: GetAuditLogsResponse): string {
        return JSON.stringify(uncast(value, r("GetAuditLogsResponse")), null, 2);
    }

    public static toGetAuditLogsResponse401(json: string): GetAuditLogsResponse401 {
        return cast(JSON.parse(json), r("GetAuditLogsResponse401"));
    }

    public static getAuditLogsResponse401ToJson(value: GetAuditLogsResponse401): string {
        return JSON.stringify(uncast(value, r("GetAuditLogsResponse401")), null, 2);
    }

    public static toGetAuditLogsResponse429(json: string): GetAuditLogsResponse429 {
        return cast(JSON.parse(json), r("GetAuditLogsResponse429"));
    }

    public static getAuditLogsResponse429ToJson(value: GetAuditLogsResponse429): string {
        return JSON.stringify(uncast(value, r("GetAuditLogsResponse429")), null, 2);
    }

    public static toGetAuditLogsResponse500(json: string): GetAuditLogsResponse500 {
        return cast(JSON.parse(json), r("GetAuditLogsResponse500"));
    }

    public static getAuditLogsResponse500ToJson(value: GetAuditLogsResponse500): string {
        return JSON.stringify(uncast(value, r("GetAuditLogsResponse500")), null, 2);
    }

    public static toGetCollectionsCollectionIDFoldersFolderIDResponse(json: string): GetCollectionsCollectionIDFoldersFolderIDResponse {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDFoldersFolderIDResponse"));
    }

    public static getCollectionsCollectionIDFoldersFolderIDResponseToJson(value: GetCollectionsCollectionIDFoldersFolderIDResponse): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDFoldersFolderIDResponse")), null, 2);
    }

    public static toGetCollectionsCollectionIDFoldersFolderIDResponse401(json: string): GetCollectionsCollectionIDFoldersFolderIDResponse401 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDFoldersFolderIDResponse401"));
    }

    public static getCollectionsCollectionIDFoldersFolderIDResponse401ToJson(value: GetCollectionsCollectionIDFoldersFolderIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDFoldersFolderIDResponse401")), null, 2);
    }

    public static toGetCollectionsCollectionIDFoldersFolderIDResponse404(json: string): GetCollectionsCollectionIDFoldersFolderIDResponse404 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDFoldersFolderIDResponse404"));
    }

    public static getCollectionsCollectionIDFoldersFolderIDResponse404ToJson(value: GetCollectionsCollectionIDFoldersFolderIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDFoldersFolderIDResponse404")), null, 2);
    }

    public static toGetCollectionsCollectionIDFoldersFolderIDResponse500(json: string): GetCollectionsCollectionIDFoldersFolderIDResponse500 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDFoldersFolderIDResponse500"));
    }

    public static getCollectionsCollectionIDFoldersFolderIDResponse500ToJson(value: GetCollectionsCollectionIDFoldersFolderIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDFoldersFolderIDResponse500")), null, 2);
    }

    public static toGetCollectionsCollectionIDRequestsRequestIDResponse(json: string): GetCollectionsCollectionIDRequestsRequestIDResponse {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDRequestsRequestIDResponse"));
    }

    public static getCollectionsCollectionIDRequestsRequestIDResponseToJson(value: GetCollectionsCollectionIDRequestsRequestIDResponse): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDRequestsRequestIDResponse")), null, 2);
    }

    public static toGetCollectionsCollectionIDRequestsRequestIDResponse401(json: string): GetCollectionsCollectionIDRequestsRequestIDResponse401 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDRequestsRequestIDResponse401"));
    }

    public static getCollectionsCollectionIDRequestsRequestIDResponse401ToJson(value: GetCollectionsCollectionIDRequestsRequestIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDRequestsRequestIDResponse401")), null, 2);
    }

    public static toGetCollectionsCollectionIDRequestsRequestIDResponse404(json: string): GetCollectionsCollectionIDRequestsRequestIDResponse404 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDRequestsRequestIDResponse404"));
    }

    public static getCollectionsCollectionIDRequestsRequestIDResponse404ToJson(value: GetCollectionsCollectionIDRequestsRequestIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDRequestsRequestIDResponse404")), null, 2);
    }

    public static toGetCollectionsCollectionIDRequestsRequestIDResponse500(json: string): GetCollectionsCollectionIDRequestsRequestIDResponse500 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDRequestsRequestIDResponse500"));
    }

    public static getCollectionsCollectionIDRequestsRequestIDResponse500ToJson(value: GetCollectionsCollectionIDRequestsRequestIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDRequestsRequestIDResponse500")), null, 2);
    }

    public static toGetCollectionsCollectionIDResponse(json: string): GetCollectionsCollectionIDResponse {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDResponse"));
    }

    public static getCollectionsCollectionIDResponseToJson(value: GetCollectionsCollectionIDResponse): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDResponse")), null, 2);
    }

    public static toGetCollectionsCollectionIDResponse400(json: string): GetCollectionsCollectionIDResponse400 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDResponse400"));
    }

    public static getCollectionsCollectionIDResponse400ToJson(value: GetCollectionsCollectionIDResponse400): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDResponse400")), null, 2);
    }

    public static toGetCollectionsCollectionIDResponse401(json: string): GetCollectionsCollectionIDResponse401 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDResponse401"));
    }

    public static getCollectionsCollectionIDResponse401ToJson(value: GetCollectionsCollectionIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDResponse401")), null, 2);
    }

    public static toGetCollectionsCollectionIDResponse429(json: string): GetCollectionsCollectionIDResponse429 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDResponse429"));
    }

    public static getCollectionsCollectionIDResponse429ToJson(value: GetCollectionsCollectionIDResponse429): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDResponse429")), null, 2);
    }

    public static toGetCollectionsCollectionIDResponse500(json: string): GetCollectionsCollectionIDResponse500 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDResponse500"));
    }

    public static getCollectionsCollectionIDResponse500ToJson(value: GetCollectionsCollectionIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDResponse500")), null, 2);
    }

    public static toGetCollectionsCollectionIDResponsesResponseIDResponse(json: string): GetCollectionsCollectionIDResponsesResponseIDResponse {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDResponsesResponseIDResponse"));
    }

    public static getCollectionsCollectionIDResponsesResponseIDResponseToJson(value: GetCollectionsCollectionIDResponsesResponseIDResponse): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDResponsesResponseIDResponse")), null, 2);
    }

    public static toGetCollectionsCollectionIDResponsesResponseIDResponse401(json: string): GetCollectionsCollectionIDResponsesResponseIDResponse401 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDResponsesResponseIDResponse401"));
    }

    public static getCollectionsCollectionIDResponsesResponseIDResponse401ToJson(value: GetCollectionsCollectionIDResponsesResponseIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDResponsesResponseIDResponse401")), null, 2);
    }

    public static toGetCollectionsCollectionIDResponsesResponseIDResponse404(json: string): GetCollectionsCollectionIDResponsesResponseIDResponse404 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDResponsesResponseIDResponse404"));
    }

    public static getCollectionsCollectionIDResponsesResponseIDResponse404ToJson(value: GetCollectionsCollectionIDResponsesResponseIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDResponsesResponseIDResponse404")), null, 2);
    }

    public static toGetCollectionsCollectionIDResponsesResponseIDResponse500(json: string): GetCollectionsCollectionIDResponsesResponseIDResponse500 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDResponsesResponseIDResponse500"));
    }

    public static getCollectionsCollectionIDResponsesResponseIDResponse500ToJson(value: GetCollectionsCollectionIDResponsesResponseIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDResponsesResponseIDResponse500")), null, 2);
    }

    public static toGetCollectionsCollectionIDTagsResponse(json: string): GetCollectionsCollectionIDTagsResponse {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDTagsResponse"));
    }

    public static getCollectionsCollectionIDTagsResponseToJson(value: GetCollectionsCollectionIDTagsResponse): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDTagsResponse")), null, 2);
    }

    public static toGetCollectionsCollectionIDTagsResponse401(json: string): GetCollectionsCollectionIDTagsResponse401 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDTagsResponse401"));
    }

    public static getCollectionsCollectionIDTagsResponse401ToJson(value: GetCollectionsCollectionIDTagsResponse401): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDTagsResponse401")), null, 2);
    }

    public static toGetCollectionsCollectionIDTagsResponse403(json: string): GetCollectionsCollectionIDTagsResponse403 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDTagsResponse403"));
    }

    public static getCollectionsCollectionIDTagsResponse403ToJson(value: GetCollectionsCollectionIDTagsResponse403): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDTagsResponse403")), null, 2);
    }

    public static toGetCollectionsCollectionIDTagsResponse500(json: string): GetCollectionsCollectionIDTagsResponse500 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDTagsResponse500"));
    }

    public static getCollectionsCollectionIDTagsResponse500ToJson(value: GetCollectionsCollectionIDTagsResponse500): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDTagsResponse500")), null, 2);
    }

    public static toGetCollectionsCollectionIDTransformationsResponse(json: string): GetCollectionsCollectionIDTransformationsResponse {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDTransformationsResponse"));
    }

    public static getCollectionsCollectionIDTransformationsResponseToJson(value: GetCollectionsCollectionIDTransformationsResponse): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDTransformationsResponse")), null, 2);
    }

    public static toGetCollectionsCollectionIDTransformationsResponse401(json: string): GetCollectionsCollectionIDTransformationsResponse401 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDTransformationsResponse401"));
    }

    public static getCollectionsCollectionIDTransformationsResponse401ToJson(value: GetCollectionsCollectionIDTransformationsResponse401): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDTransformationsResponse401")), null, 2);
    }

    public static toGetCollectionsCollectionIDTransformationsResponse404(json: string): GetCollectionsCollectionIDTransformationsResponse404 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDTransformationsResponse404"));
    }

    public static getCollectionsCollectionIDTransformationsResponse404ToJson(value: GetCollectionsCollectionIDTransformationsResponse404): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDTransformationsResponse404")), null, 2);
    }

    public static toGetCollectionsCollectionIDTransformationsResponse500(json: string): GetCollectionsCollectionIDTransformationsResponse500 {
        return cast(JSON.parse(json), r("GetCollectionsCollectionIDTransformationsResponse500"));
    }

    public static getCollectionsCollectionIDTransformationsResponse500ToJson(value: GetCollectionsCollectionIDTransformationsResponse500): string {
        return JSON.stringify(uncast(value, r("GetCollectionsCollectionIDTransformationsResponse500")), null, 2);
    }

    public static toGetCollectionsResponse(json: string): GetCollectionsResponse {
        return cast(JSON.parse(json), r("GetCollectionsResponse"));
    }

    public static getCollectionsResponseToJson(value: GetCollectionsResponse): string {
        return JSON.stringify(uncast(value, r("GetCollectionsResponse")), null, 2);
    }

    public static toGetCollectionsResponse401(json: string): GetCollectionsResponse401 {
        return cast(JSON.parse(json), r("GetCollectionsResponse401"));
    }

    public static getCollectionsResponse401ToJson(value: GetCollectionsResponse401): string {
        return JSON.stringify(uncast(value, r("GetCollectionsResponse401")), null, 2);
    }

    public static toGetCollectionsResponse429(json: string): GetCollectionsResponse429 {
        return cast(JSON.parse(json), r("GetCollectionsResponse429"));
    }

    public static getCollectionsResponse429ToJson(value: GetCollectionsResponse429): string {
        return JSON.stringify(uncast(value, r("GetCollectionsResponse429")), null, 2);
    }

    public static toGetCollectionsResponse500(json: string): GetCollectionsResponse500 {
        return cast(JSON.parse(json), r("GetCollectionsResponse500"));
    }

    public static getCollectionsResponse500ToJson(value: GetCollectionsResponse500): string {
        return JSON.stringify(uncast(value, r("GetCollectionsResponse500")), null, 2);
    }

    public static toGetDetectedSecretsSecretIDLocationsResponse(json: string): GetDetectedSecretsSecretIDLocationsResponse {
        return cast(JSON.parse(json), r("GetDetectedSecretsSecretIDLocationsResponse"));
    }

    public static getDetectedSecretsSecretIDLocationsResponseToJson(value: GetDetectedSecretsSecretIDLocationsResponse): string {
        return JSON.stringify(uncast(value, r("GetDetectedSecretsSecretIDLocationsResponse")), null, 2);
    }

    public static toGetDetectedSecretsSecretIDLocationsResponse400(json: string): GetDetectedSecretsSecretIDLocationsResponse400 {
        return cast(JSON.parse(json), r("GetDetectedSecretsSecretIDLocationsResponse400"));
    }

    public static getDetectedSecretsSecretIDLocationsResponse400ToJson(value: GetDetectedSecretsSecretIDLocationsResponse400): string {
        return JSON.stringify(uncast(value, r("GetDetectedSecretsSecretIDLocationsResponse400")), null, 2);
    }

    public static toGetDetectedSecretsSecretIDLocationsResponse401(json: string): GetDetectedSecretsSecretIDLocationsResponse401 {
        return cast(JSON.parse(json), r("GetDetectedSecretsSecretIDLocationsResponse401"));
    }

    public static getDetectedSecretsSecretIDLocationsResponse401ToJson(value: GetDetectedSecretsSecretIDLocationsResponse401): string {
        return JSON.stringify(uncast(value, r("GetDetectedSecretsSecretIDLocationsResponse401")), null, 2);
    }

    public static toGetDetectedSecretsSecretIDLocationsResponse403(json: string): GetDetectedSecretsSecretIDLocationsResponse403 {
        return cast(JSON.parse(json), r("GetDetectedSecretsSecretIDLocationsResponse403"));
    }

    public static getDetectedSecretsSecretIDLocationsResponse403ToJson(value: GetDetectedSecretsSecretIDLocationsResponse403): string {
        return JSON.stringify(uncast(value, r("GetDetectedSecretsSecretIDLocationsResponse403")), null, 2);
    }

    public static toGetDetectedSecretsSecretIDLocationsResponse500(json: string): GetDetectedSecretsSecretIDLocationsResponse500 {
        return cast(JSON.parse(json), r("GetDetectedSecretsSecretIDLocationsResponse500"));
    }

    public static getDetectedSecretsSecretIDLocationsResponse500ToJson(value: GetDetectedSecretsSecretIDLocationsResponse500): string {
        return JSON.stringify(uncast(value, r("GetDetectedSecretsSecretIDLocationsResponse500")), null, 2);
    }

    public static toGetEnvironmentsEnvironmentIDResponse(json: string): GetEnvironmentsEnvironmentIDResponse {
        return cast(JSON.parse(json), r("GetEnvironmentsEnvironmentIDResponse"));
    }

    public static getEnvironmentsEnvironmentIDResponseToJson(value: GetEnvironmentsEnvironmentIDResponse): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsEnvironmentIDResponse")), null, 2);
    }

    public static toGetEnvironmentsEnvironmentIDResponse400(json: string): GetEnvironmentsEnvironmentIDResponse400 {
        return cast(JSON.parse(json), r("GetEnvironmentsEnvironmentIDResponse400"));
    }

    public static getEnvironmentsEnvironmentIDResponse400ToJson(value: GetEnvironmentsEnvironmentIDResponse400): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsEnvironmentIDResponse400")), null, 2);
    }

    public static toGetEnvironmentsEnvironmentIDResponse401(json: string): GetEnvironmentsEnvironmentIDResponse401 {
        return cast(JSON.parse(json), r("GetEnvironmentsEnvironmentIDResponse401"));
    }

    public static getEnvironmentsEnvironmentIDResponse401ToJson(value: GetEnvironmentsEnvironmentIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsEnvironmentIDResponse401")), null, 2);
    }

    public static toGetEnvironmentsEnvironmentIDResponse429(json: string): GetEnvironmentsEnvironmentIDResponse429 {
        return cast(JSON.parse(json), r("GetEnvironmentsEnvironmentIDResponse429"));
    }

    public static getEnvironmentsEnvironmentIDResponse429ToJson(value: GetEnvironmentsEnvironmentIDResponse429): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsEnvironmentIDResponse429")), null, 2);
    }

    public static toGetEnvironmentsEnvironmentIDResponse500(json: string): GetEnvironmentsEnvironmentIDResponse500 {
        return cast(JSON.parse(json), r("GetEnvironmentsEnvironmentIDResponse500"));
    }

    public static getEnvironmentsEnvironmentIDResponse500ToJson(value: GetEnvironmentsEnvironmentIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsEnvironmentIDResponse500")), null, 2);
    }

    public static toGetEnvironmentsResponse(json: string): GetEnvironmentsResponse {
        return cast(JSON.parse(json), r("GetEnvironmentsResponse"));
    }

    public static getEnvironmentsResponseToJson(value: GetEnvironmentsResponse): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsResponse")), null, 2);
    }

    public static toGetEnvironmentsResponse401(json: string): GetEnvironmentsResponse401 {
        return cast(JSON.parse(json), r("GetEnvironmentsResponse401"));
    }

    public static getEnvironmentsResponse401ToJson(value: GetEnvironmentsResponse401): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsResponse401")), null, 2);
    }

    public static toGetEnvironmentsResponse404(json: string): GetEnvironmentsResponse404 {
        return cast(JSON.parse(json), r("GetEnvironmentsResponse404"));
    }

    public static getEnvironmentsResponse404ToJson(value: GetEnvironmentsResponse404): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsResponse404")), null, 2);
    }

    public static toGetEnvironmentsResponse429(json: string): GetEnvironmentsResponse429 {
        return cast(JSON.parse(json), r("GetEnvironmentsResponse429"));
    }

    public static getEnvironmentsResponse429ToJson(value: GetEnvironmentsResponse429): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsResponse429")), null, 2);
    }

    public static toGetEnvironmentsResponse500(json: string): GetEnvironmentsResponse500 {
        return cast(JSON.parse(json), r("GetEnvironmentsResponse500"));
    }

    public static getEnvironmentsResponse500ToJson(value: GetEnvironmentsResponse500): string {
        return JSON.stringify(uncast(value, r("GetEnvironmentsResponse500")), null, 2);
    }

    public static toGetMeResponse(json: string): GetMeResponse {
        return cast(JSON.parse(json), r("GetMeResponse"));
    }

    public static getMeResponseToJson(value: GetMeResponse): string {
        return JSON.stringify(uncast(value, r("GetMeResponse")), null, 2);
    }

    public static toGetMeResponse401(json: string): GetMeResponse401 {
        return cast(JSON.parse(json), r("GetMeResponse401"));
    }

    public static getMeResponse401ToJson(value: GetMeResponse401): string {
        return JSON.stringify(uncast(value, r("GetMeResponse401")), null, 2);
    }

    public static toGetMeResponse429(json: string): GetMeResponse429 {
        return cast(JSON.parse(json), r("GetMeResponse429"));
    }

    public static getMeResponse429ToJson(value: GetMeResponse429): string {
        return JSON.stringify(uncast(value, r("GetMeResponse429")), null, 2);
    }

    public static toGetMeResponse500(json: string): GetMeResponse500 {
        return cast(JSON.parse(json), r("GetMeResponse500"));
    }

    public static getMeResponse500ToJson(value: GetMeResponse500): string {
        return JSON.stringify(uncast(value, r("GetMeResponse500")), null, 2);
    }

    public static toGetMocksMockIDCallLogsResponse(json: string): GetMocksMockIDCallLogsResponse {
        return cast(JSON.parse(json), r("GetMocksMockIDCallLogsResponse"));
    }

    public static getMocksMockIDCallLogsResponseToJson(value: GetMocksMockIDCallLogsResponse): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDCallLogsResponse")), null, 2);
    }

    public static toGetMocksMockIDCallLogsResponse400(json: string): GetMocksMockIDCallLogsResponse400 {
        return cast(JSON.parse(json), r("GetMocksMockIDCallLogsResponse400"));
    }

    public static getMocksMockIDCallLogsResponse400ToJson(value: GetMocksMockIDCallLogsResponse400): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDCallLogsResponse400")), null, 2);
    }

    public static toGetMocksMockIDCallLogsResponse401(json: string): GetMocksMockIDCallLogsResponse401 {
        return cast(JSON.parse(json), r("GetMocksMockIDCallLogsResponse401"));
    }

    public static getMocksMockIDCallLogsResponse401ToJson(value: GetMocksMockIDCallLogsResponse401): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDCallLogsResponse401")), null, 2);
    }

    public static toGetMocksMockIDCallLogsResponse404(json: string): GetMocksMockIDCallLogsResponse404 {
        return cast(JSON.parse(json), r("GetMocksMockIDCallLogsResponse404"));
    }

    public static getMocksMockIDCallLogsResponse404ToJson(value: GetMocksMockIDCallLogsResponse404): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDCallLogsResponse404")), null, 2);
    }

    public static toGetMocksMockIDCallLogsResponse429(json: string): GetMocksMockIDCallLogsResponse429 {
        return cast(JSON.parse(json), r("GetMocksMockIDCallLogsResponse429"));
    }

    public static getMocksMockIDCallLogsResponse429ToJson(value: GetMocksMockIDCallLogsResponse429): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDCallLogsResponse429")), null, 2);
    }

    public static toGetMocksMockIDCallLogsResponse500(json: string): GetMocksMockIDCallLogsResponse500 {
        return cast(JSON.parse(json), r("GetMocksMockIDCallLogsResponse500"));
    }

    public static getMocksMockIDCallLogsResponse500ToJson(value: GetMocksMockIDCallLogsResponse500): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDCallLogsResponse500")), null, 2);
    }

    public static toGetMocksMockIDResponse(json: string): GetMocksMockIDResponse {
        return cast(JSON.parse(json), r("GetMocksMockIDResponse"));
    }

    public static getMocksMockIDResponseToJson(value: GetMocksMockIDResponse): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDResponse")), null, 2);
    }

    public static toGetMocksMockIDResponse401(json: string): GetMocksMockIDResponse401 {
        return cast(JSON.parse(json), r("GetMocksMockIDResponse401"));
    }

    public static getMocksMockIDResponse401ToJson(value: GetMocksMockIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDResponse401")), null, 2);
    }

    public static toGetMocksMockIDResponse404(json: string): GetMocksMockIDResponse404 {
        return cast(JSON.parse(json), r("GetMocksMockIDResponse404"));
    }

    public static getMocksMockIDResponse404ToJson(value: GetMocksMockIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDResponse404")), null, 2);
    }

    public static toGetMocksMockIDResponse429(json: string): GetMocksMockIDResponse429 {
        return cast(JSON.parse(json), r("GetMocksMockIDResponse429"));
    }

    public static getMocksMockIDResponse429ToJson(value: GetMocksMockIDResponse429): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDResponse429")), null, 2);
    }

    public static toGetMocksMockIDResponse500(json: string): GetMocksMockIDResponse500 {
        return cast(JSON.parse(json), r("GetMocksMockIDResponse500"));
    }

    public static getMocksMockIDResponse500ToJson(value: GetMocksMockIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDResponse500")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesResponse401(json: string): GetMocksMockIDServerResponsesResponse401 {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesResponse401"));
    }

    public static getMocksMockIDServerResponsesResponse401ToJson(value: GetMocksMockIDServerResponsesResponse401): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesResponse401")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesResponse404(json: string): GetMocksMockIDServerResponsesResponse404 {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesResponse404"));
    }

    public static getMocksMockIDServerResponsesResponse404ToJson(value: GetMocksMockIDServerResponsesResponse404): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesResponse404")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesResponse429(json: string): GetMocksMockIDServerResponsesResponse429 {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesResponse429"));
    }

    public static getMocksMockIDServerResponsesResponse429ToJson(value: GetMocksMockIDServerResponsesResponse429): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesResponse429")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesResponse500(json: string): GetMocksMockIDServerResponsesResponse500 {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesResponse500"));
    }

    public static getMocksMockIDServerResponsesResponse500ToJson(value: GetMocksMockIDServerResponsesResponse500): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesResponse500")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesResponseItem(json: string): GetMocksMockIDServerResponsesResponseItem {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesResponseItem"));
    }

    public static getMocksMockIDServerResponsesResponseItemToJson(value: GetMocksMockIDServerResponsesResponseItem): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesResponseItem")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesServerResponseIDResponse400(json: string): GetMocksMockIDServerResponsesServerResponseIDResponse400 {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesServerResponseIDResponse400"));
    }

    public static getMocksMockIDServerResponsesServerResponseIDResponse400ToJson(value: GetMocksMockIDServerResponsesServerResponseIDResponse400): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesServerResponseIDResponse400")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesServerResponseIDResponse401(json: string): GetMocksMockIDServerResponsesServerResponseIDResponse401 {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesServerResponseIDResponse401"));
    }

    public static getMocksMockIDServerResponsesServerResponseIDResponse401ToJson(value: GetMocksMockIDServerResponsesServerResponseIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesServerResponseIDResponse401")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesServerResponseIDResponse404(json: string): GetMocksMockIDServerResponsesServerResponseIDResponse404 {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesServerResponseIDResponse404"));
    }

    public static getMocksMockIDServerResponsesServerResponseIDResponse404ToJson(value: GetMocksMockIDServerResponsesServerResponseIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesServerResponseIDResponse404")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesServerResponseIDResponse429(json: string): GetMocksMockIDServerResponsesServerResponseIDResponse429 {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesServerResponseIDResponse429"));
    }

    public static getMocksMockIDServerResponsesServerResponseIDResponse429ToJson(value: GetMocksMockIDServerResponsesServerResponseIDResponse429): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesServerResponseIDResponse429")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesServerResponseIDResponse500(json: string): GetMocksMockIDServerResponsesServerResponseIDResponse500 {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesServerResponseIDResponse500"));
    }

    public static getMocksMockIDServerResponsesServerResponseIDResponse500ToJson(value: GetMocksMockIDServerResponsesServerResponseIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesServerResponseIDResponse500")), null, 2);
    }

    public static toGetMocksMockIDServerResponsesServerResponseIDResponseItem(json: string): GetMocksMockIDServerResponsesServerResponseIDResponseItem {
        return cast(JSON.parse(json), r("GetMocksMockIDServerResponsesServerResponseIDResponseItem"));
    }

    public static getMocksMockIDServerResponsesServerResponseIDResponseItemToJson(value: GetMocksMockIDServerResponsesServerResponseIDResponseItem): string {
        return JSON.stringify(uncast(value, r("GetMocksMockIDServerResponsesServerResponseIDResponseItem")), null, 2);
    }

    public static toGetMocksResponse(json: string): GetMocksResponse {
        return cast(JSON.parse(json), r("GetMocksResponse"));
    }

    public static getMocksResponseToJson(value: GetMocksResponse): string {
        return JSON.stringify(uncast(value, r("GetMocksResponse")), null, 2);
    }

    public static toGetMocksResponse401(json: string): GetMocksResponse401 {
        return cast(JSON.parse(json), r("GetMocksResponse401"));
    }

    public static getMocksResponse401ToJson(value: GetMocksResponse401): string {
        return JSON.stringify(uncast(value, r("GetMocksResponse401")), null, 2);
    }

    public static toGetMocksResponse429(json: string): GetMocksResponse429 {
        return cast(JSON.parse(json), r("GetMocksResponse429"));
    }

    public static getMocksResponse429ToJson(value: GetMocksResponse429): string {
        return JSON.stringify(uncast(value, r("GetMocksResponse429")), null, 2);
    }

    public static toGetMocksResponse500(json: string): GetMocksResponse500 {
        return cast(JSON.parse(json), r("GetMocksResponse500"));
    }

    public static getMocksResponse500ToJson(value: GetMocksResponse500): string {
        return JSON.stringify(uncast(value, r("GetMocksResponse500")), null, 2);
    }

    public static toGetMonitorsMonitorIDResponse(json: string): GetMonitorsMonitorIDResponse {
        return cast(JSON.parse(json), r("GetMonitorsMonitorIDResponse"));
    }

    public static getMonitorsMonitorIDResponseToJson(value: GetMonitorsMonitorIDResponse): string {
        return JSON.stringify(uncast(value, r("GetMonitorsMonitorIDResponse")), null, 2);
    }

    public static toGetMonitorsMonitorIDResponse401(json: string): GetMonitorsMonitorIDResponse401 {
        return cast(JSON.parse(json), r("GetMonitorsMonitorIDResponse401"));
    }

    public static getMonitorsMonitorIDResponse401ToJson(value: GetMonitorsMonitorIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetMonitorsMonitorIDResponse401")), null, 2);
    }

    public static toGetMonitorsMonitorIDResponse404(json: string): GetMonitorsMonitorIDResponse404 {
        return cast(JSON.parse(json), r("GetMonitorsMonitorIDResponse404"));
    }

    public static getMonitorsMonitorIDResponse404ToJson(value: GetMonitorsMonitorIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetMonitorsMonitorIDResponse404")), null, 2);
    }

    public static toGetMonitorsMonitorIDResponse429(json: string): GetMonitorsMonitorIDResponse429 {
        return cast(JSON.parse(json), r("GetMonitorsMonitorIDResponse429"));
    }

    public static getMonitorsMonitorIDResponse429ToJson(value: GetMonitorsMonitorIDResponse429): string {
        return JSON.stringify(uncast(value, r("GetMonitorsMonitorIDResponse429")), null, 2);
    }

    public static toGetMonitorsMonitorIDResponse500(json: string): GetMonitorsMonitorIDResponse500 {
        return cast(JSON.parse(json), r("GetMonitorsMonitorIDResponse500"));
    }

    public static getMonitorsMonitorIDResponse500ToJson(value: GetMonitorsMonitorIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetMonitorsMonitorIDResponse500")), null, 2);
    }

    public static toGetMonitorsResponse(json: string): GetMonitorsResponse {
        return cast(JSON.parse(json), r("GetMonitorsResponse"));
    }

    public static getMonitorsResponseToJson(value: GetMonitorsResponse): string {
        return JSON.stringify(uncast(value, r("GetMonitorsResponse")), null, 2);
    }

    public static toGetMonitorsResponse401(json: string): GetMonitorsResponse401 {
        return cast(JSON.parse(json), r("GetMonitorsResponse401"));
    }

    public static getMonitorsResponse401ToJson(value: GetMonitorsResponse401): string {
        return JSON.stringify(uncast(value, r("GetMonitorsResponse401")), null, 2);
    }

    public static toGetMonitorsResponse429(json: string): GetMonitorsResponse429 {
        return cast(JSON.parse(json), r("GetMonitorsResponse429"));
    }

    public static getMonitorsResponse429ToJson(value: GetMonitorsResponse429): string {
        return JSON.stringify(uncast(value, r("GetMonitorsResponse429")), null, 2);
    }

    public static toGetMonitorsResponse500(json: string): GetMonitorsResponse500 {
        return cast(JSON.parse(json), r("GetMonitorsResponse500"));
    }

    public static getMonitorsResponse500ToJson(value: GetMonitorsResponse500): string {
        return JSON.stringify(uncast(value, r("GetMonitorsResponse500")), null, 2);
    }

    public static toGetNetworkPrivateNetworkEntityRequestAllResponse(json: string): GetNetworkPrivateNetworkEntityRequestAllResponse {
        return cast(JSON.parse(json), r("GetNetworkPrivateNetworkEntityRequestAllResponse"));
    }

    public static getNetworkPrivateNetworkEntityRequestAllResponseToJson(value: GetNetworkPrivateNetworkEntityRequestAllResponse): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateNetworkEntityRequestAllResponse")), null, 2);
    }

    public static toGetNetworkPrivateNetworkEntityRequestAllResponse400(json: string): GetNetworkPrivateNetworkEntityRequestAllResponse400 {
        return cast(JSON.parse(json), r("GetNetworkPrivateNetworkEntityRequestAllResponse400"));
    }

    public static getNetworkPrivateNetworkEntityRequestAllResponse400ToJson(value: GetNetworkPrivateNetworkEntityRequestAllResponse400): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateNetworkEntityRequestAllResponse400")), null, 2);
    }

    public static toGetNetworkPrivateNetworkEntityRequestAllResponse401(json: string): GetNetworkPrivateNetworkEntityRequestAllResponse401 {
        return cast(JSON.parse(json), r("GetNetworkPrivateNetworkEntityRequestAllResponse401"));
    }

    public static getNetworkPrivateNetworkEntityRequestAllResponse401ToJson(value: GetNetworkPrivateNetworkEntityRequestAllResponse401): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateNetworkEntityRequestAllResponse401")), null, 2);
    }

    public static toGetNetworkPrivateNetworkEntityRequestAllResponse403(json: string): GetNetworkPrivateNetworkEntityRequestAllResponse403 {
        return cast(JSON.parse(json), r("GetNetworkPrivateNetworkEntityRequestAllResponse403"));
    }

    public static getNetworkPrivateNetworkEntityRequestAllResponse403ToJson(value: GetNetworkPrivateNetworkEntityRequestAllResponse403): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateNetworkEntityRequestAllResponse403")), null, 2);
    }

    public static toGetNetworkPrivateNetworkEntityRequestAllResponse429(json: string): GetNetworkPrivateNetworkEntityRequestAllResponse429 {
        return cast(JSON.parse(json), r("GetNetworkPrivateNetworkEntityRequestAllResponse429"));
    }

    public static getNetworkPrivateNetworkEntityRequestAllResponse429ToJson(value: GetNetworkPrivateNetworkEntityRequestAllResponse429): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateNetworkEntityRequestAllResponse429")), null, 2);
    }

    public static toGetNetworkPrivateNetworkEntityRequestAllResponse500(json: string): GetNetworkPrivateNetworkEntityRequestAllResponse500 {
        return cast(JSON.parse(json), r("GetNetworkPrivateNetworkEntityRequestAllResponse500"));
    }

    public static getNetworkPrivateNetworkEntityRequestAllResponse500ToJson(value: GetNetworkPrivateNetworkEntityRequestAllResponse500): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateNetworkEntityRequestAllResponse500")), null, 2);
    }

    public static toGetNetworkPrivateResponse(json: string): GetNetworkPrivateResponse {
        return cast(JSON.parse(json), r("GetNetworkPrivateResponse"));
    }

    public static getNetworkPrivateResponseToJson(value: GetNetworkPrivateResponse): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateResponse")), null, 2);
    }

    public static toGetNetworkPrivateResponse401(json: string): GetNetworkPrivateResponse401 {
        return cast(JSON.parse(json), r("GetNetworkPrivateResponse401"));
    }

    public static getNetworkPrivateResponse401ToJson(value: GetNetworkPrivateResponse401): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateResponse401")), null, 2);
    }

    public static toGetNetworkPrivateResponse403(json: string): GetNetworkPrivateResponse403 {
        return cast(JSON.parse(json), r("GetNetworkPrivateResponse403"));
    }

    public static getNetworkPrivateResponse403ToJson(value: GetNetworkPrivateResponse403): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateResponse403")), null, 2);
    }

    public static toGetNetworkPrivateResponse429(json: string): GetNetworkPrivateResponse429 {
        return cast(JSON.parse(json), r("GetNetworkPrivateResponse429"));
    }

    public static getNetworkPrivateResponse429ToJson(value: GetNetworkPrivateResponse429): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateResponse429")), null, 2);
    }

    public static toGetNetworkPrivateResponse500(json: string): GetNetworkPrivateResponse500 {
        return cast(JSON.parse(json), r("GetNetworkPrivateResponse500"));
    }

    public static getNetworkPrivateResponse500ToJson(value: GetNetworkPrivateResponse500): string {
        return JSON.stringify(uncast(value, r("GetNetworkPrivateResponse500")), null, 2);
    }

    public static toGetScimV2GroupsGroupIDResponse(json: string): GetScimV2GroupsGroupIDResponse {
        return cast(JSON.parse(json), r("GetScimV2GroupsGroupIDResponse"));
    }

    public static getScimV2GroupsGroupIDResponseToJson(value: GetScimV2GroupsGroupIDResponse): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsGroupIDResponse")), null, 2);
    }

    public static toGetScimV2GroupsGroupIDResponse400(json: string): GetScimV2GroupsGroupIDResponse400 {
        return cast(JSON.parse(json), r("GetScimV2GroupsGroupIDResponse400"));
    }

    public static getScimV2GroupsGroupIDResponse400ToJson(value: GetScimV2GroupsGroupIDResponse400): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsGroupIDResponse400")), null, 2);
    }

    public static toGetScimV2GroupsGroupIDResponse401(json: string): GetScimV2GroupsGroupIDResponse401 {
        return cast(JSON.parse(json), r("GetScimV2GroupsGroupIDResponse401"));
    }

    public static getScimV2GroupsGroupIDResponse401ToJson(value: GetScimV2GroupsGroupIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsGroupIDResponse401")), null, 2);
    }

    public static toGetScimV2GroupsGroupIDResponse403(json: string): GetScimV2GroupsGroupIDResponse403 {
        return cast(JSON.parse(json), r("GetScimV2GroupsGroupIDResponse403"));
    }

    public static getScimV2GroupsGroupIDResponse403ToJson(value: GetScimV2GroupsGroupIDResponse403): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsGroupIDResponse403")), null, 2);
    }

    public static toGetScimV2GroupsGroupIDResponse404(json: string): GetScimV2GroupsGroupIDResponse404 {
        return cast(JSON.parse(json), r("GetScimV2GroupsGroupIDResponse404"));
    }

    public static getScimV2GroupsGroupIDResponse404ToJson(value: GetScimV2GroupsGroupIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsGroupIDResponse404")), null, 2);
    }

    public static toGetScimV2GroupsGroupIDResponse429(json: string): GetScimV2GroupsGroupIDResponse429 {
        return cast(JSON.parse(json), r("GetScimV2GroupsGroupIDResponse429"));
    }

    public static getScimV2GroupsGroupIDResponse429ToJson(value: GetScimV2GroupsGroupIDResponse429): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsGroupIDResponse429")), null, 2);
    }

    public static toGetScimV2GroupsGroupIDResponse500(json: string): GetScimV2GroupsGroupIDResponse500 {
        return cast(JSON.parse(json), r("GetScimV2GroupsGroupIDResponse500"));
    }

    public static getScimV2GroupsGroupIDResponse500ToJson(value: GetScimV2GroupsGroupIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsGroupIDResponse500")), null, 2);
    }

    public static toGetScimV2GroupsResponse(json: string): GetScimV2GroupsResponse {
        return cast(JSON.parse(json), r("GetScimV2GroupsResponse"));
    }

    public static getScimV2GroupsResponseToJson(value: GetScimV2GroupsResponse): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsResponse")), null, 2);
    }

    public static toGetScimV2GroupsResponse400(json: string): GetScimV2GroupsResponse400 {
        return cast(JSON.parse(json), r("GetScimV2GroupsResponse400"));
    }

    public static getScimV2GroupsResponse400ToJson(value: GetScimV2GroupsResponse400): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsResponse400")), null, 2);
    }

    public static toGetScimV2GroupsResponse401(json: string): GetScimV2GroupsResponse401 {
        return cast(JSON.parse(json), r("GetScimV2GroupsResponse401"));
    }

    public static getScimV2GroupsResponse401ToJson(value: GetScimV2GroupsResponse401): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsResponse401")), null, 2);
    }

    public static toGetScimV2GroupsResponse403(json: string): GetScimV2GroupsResponse403 {
        return cast(JSON.parse(json), r("GetScimV2GroupsResponse403"));
    }

    public static getScimV2GroupsResponse403ToJson(value: GetScimV2GroupsResponse403): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsResponse403")), null, 2);
    }

    public static toGetScimV2GroupsResponse429(json: string): GetScimV2GroupsResponse429 {
        return cast(JSON.parse(json), r("GetScimV2GroupsResponse429"));
    }

    public static getScimV2GroupsResponse429ToJson(value: GetScimV2GroupsResponse429): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsResponse429")), null, 2);
    }

    public static toGetScimV2GroupsResponse500(json: string): GetScimV2GroupsResponse500 {
        return cast(JSON.parse(json), r("GetScimV2GroupsResponse500"));
    }

    public static getScimV2GroupsResponse500ToJson(value: GetScimV2GroupsResponse500): string {
        return JSON.stringify(uncast(value, r("GetScimV2GroupsResponse500")), null, 2);
    }

    public static toGetScimV2ResourceTypesResponse401(json: string): GetScimV2ResourceTypesResponse401 {
        return cast(JSON.parse(json), r("GetScimV2ResourceTypesResponse401"));
    }

    public static getScimV2ResourceTypesResponse401ToJson(value: GetScimV2ResourceTypesResponse401): string {
        return JSON.stringify(uncast(value, r("GetScimV2ResourceTypesResponse401")), null, 2);
    }

    public static toGetScimV2ResourceTypesResponse500(json: string): GetScimV2ResourceTypesResponse500 {
        return cast(JSON.parse(json), r("GetScimV2ResourceTypesResponse500"));
    }

    public static getScimV2ResourceTypesResponse500ToJson(value: GetScimV2ResourceTypesResponse500): string {
        return JSON.stringify(uncast(value, r("GetScimV2ResourceTypesResponse500")), null, 2);
    }

    public static toGetScimV2ResourceTypesResponseItem(json: string): GetScimV2ResourceTypesResponseItem {
        return cast(JSON.parse(json), r("GetScimV2ResourceTypesResponseItem"));
    }

    public static getScimV2ResourceTypesResponseItemToJson(value: GetScimV2ResourceTypesResponseItem): string {
        return JSON.stringify(uncast(value, r("GetScimV2ResourceTypesResponseItem")), null, 2);
    }

    public static toGetScimV2ServiceProviderConfigResponse(json: string): GetScimV2ServiceProviderConfigResponse {
        return cast(JSON.parse(json), r("GetScimV2ServiceProviderConfigResponse"));
    }

    public static getScimV2ServiceProviderConfigResponseToJson(value: GetScimV2ServiceProviderConfigResponse): string {
        return JSON.stringify(uncast(value, r("GetScimV2ServiceProviderConfigResponse")), null, 2);
    }

    public static toGetScimV2ServiceProviderConfigResponse401(json: string): GetScimV2ServiceProviderConfigResponse401 {
        return cast(JSON.parse(json), r("GetScimV2ServiceProviderConfigResponse401"));
    }

    public static getScimV2ServiceProviderConfigResponse401ToJson(value: GetScimV2ServiceProviderConfigResponse401): string {
        return JSON.stringify(uncast(value, r("GetScimV2ServiceProviderConfigResponse401")), null, 2);
    }

    public static toGetScimV2ServiceProviderConfigResponse500(json: string): GetScimV2ServiceProviderConfigResponse500 {
        return cast(JSON.parse(json), r("GetScimV2ServiceProviderConfigResponse500"));
    }

    public static getScimV2ServiceProviderConfigResponse500ToJson(value: GetScimV2ServiceProviderConfigResponse500): string {
        return JSON.stringify(uncast(value, r("GetScimV2ServiceProviderConfigResponse500")), null, 2);
    }

    public static toGetScimV2UsersResponse(json: string): GetScimV2UsersResponse {
        return cast(JSON.parse(json), r("GetScimV2UsersResponse"));
    }

    public static getScimV2UsersResponseToJson(value: GetScimV2UsersResponse): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersResponse")), null, 2);
    }

    public static toGetScimV2UsersResponse400(json: string): GetScimV2UsersResponse400 {
        return cast(JSON.parse(json), r("GetScimV2UsersResponse400"));
    }

    public static getScimV2UsersResponse400ToJson(value: GetScimV2UsersResponse400): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersResponse400")), null, 2);
    }

    public static toGetScimV2UsersResponse401(json: string): GetScimV2UsersResponse401 {
        return cast(JSON.parse(json), r("GetScimV2UsersResponse401"));
    }

    public static getScimV2UsersResponse401ToJson(value: GetScimV2UsersResponse401): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersResponse401")), null, 2);
    }

    public static toGetScimV2UsersResponse403(json: string): GetScimV2UsersResponse403 {
        return cast(JSON.parse(json), r("GetScimV2UsersResponse403"));
    }

    public static getScimV2UsersResponse403ToJson(value: GetScimV2UsersResponse403): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersResponse403")), null, 2);
    }

    public static toGetScimV2UsersResponse429(json: string): GetScimV2UsersResponse429 {
        return cast(JSON.parse(json), r("GetScimV2UsersResponse429"));
    }

    public static getScimV2UsersResponse429ToJson(value: GetScimV2UsersResponse429): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersResponse429")), null, 2);
    }

    public static toGetScimV2UsersResponse500(json: string): GetScimV2UsersResponse500 {
        return cast(JSON.parse(json), r("GetScimV2UsersResponse500"));
    }

    public static getScimV2UsersResponse500ToJson(value: GetScimV2UsersResponse500): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersResponse500")), null, 2);
    }

    public static toGetScimV2UsersUserIDResponse(json: string): GetScimV2UsersUserIDResponse {
        return cast(JSON.parse(json), r("GetScimV2UsersUserIDResponse"));
    }

    public static getScimV2UsersUserIDResponseToJson(value: GetScimV2UsersUserIDResponse): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersUserIDResponse")), null, 2);
    }

    public static toGetScimV2UsersUserIDResponse400(json: string): GetScimV2UsersUserIDResponse400 {
        return cast(JSON.parse(json), r("GetScimV2UsersUserIDResponse400"));
    }

    public static getScimV2UsersUserIDResponse400ToJson(value: GetScimV2UsersUserIDResponse400): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersUserIDResponse400")), null, 2);
    }

    public static toGetScimV2UsersUserIDResponse401(json: string): GetScimV2UsersUserIDResponse401 {
        return cast(JSON.parse(json), r("GetScimV2UsersUserIDResponse401"));
    }

    public static getScimV2UsersUserIDResponse401ToJson(value: GetScimV2UsersUserIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersUserIDResponse401")), null, 2);
    }

    public static toGetScimV2UsersUserIDResponse403(json: string): GetScimV2UsersUserIDResponse403 {
        return cast(JSON.parse(json), r("GetScimV2UsersUserIDResponse403"));
    }

    public static getScimV2UsersUserIDResponse403ToJson(value: GetScimV2UsersUserIDResponse403): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersUserIDResponse403")), null, 2);
    }

    public static toGetScimV2UsersUserIDResponse404(json: string): GetScimV2UsersUserIDResponse404 {
        return cast(JSON.parse(json), r("GetScimV2UsersUserIDResponse404"));
    }

    public static getScimV2UsersUserIDResponse404ToJson(value: GetScimV2UsersUserIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersUserIDResponse404")), null, 2);
    }

    public static toGetScimV2UsersUserIDResponse429(json: string): GetScimV2UsersUserIDResponse429 {
        return cast(JSON.parse(json), r("GetScimV2UsersUserIDResponse429"));
    }

    public static getScimV2UsersUserIDResponse429ToJson(value: GetScimV2UsersUserIDResponse429): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersUserIDResponse429")), null, 2);
    }

    public static toGetScimV2UsersUserIDResponse500(json: string): GetScimV2UsersUserIDResponse500 {
        return cast(JSON.parse(json), r("GetScimV2UsersUserIDResponse500"));
    }

    public static getScimV2UsersUserIDResponse500ToJson(value: GetScimV2UsersUserIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetScimV2UsersUserIDResponse500")), null, 2);
    }

    public static toGetSecretTypesResponse(json: string): GetSecretTypesResponse {
        return cast(JSON.parse(json), r("GetSecretTypesResponse"));
    }

    public static getSecretTypesResponseToJson(value: GetSecretTypesResponse): string {
        return JSON.stringify(uncast(value, r("GetSecretTypesResponse")), null, 2);
    }

    public static toGetSecretTypesResponse401(json: string): GetSecretTypesResponse401 {
        return cast(JSON.parse(json), r("GetSecretTypesResponse401"));
    }

    public static getSecretTypesResponse401ToJson(value: GetSecretTypesResponse401): string {
        return JSON.stringify(uncast(value, r("GetSecretTypesResponse401")), null, 2);
    }

    public static toGetSecretTypesResponse403(json: string): GetSecretTypesResponse403 {
        return cast(JSON.parse(json), r("GetSecretTypesResponse403"));
    }

    public static getSecretTypesResponse403ToJson(value: GetSecretTypesResponse403): string {
        return JSON.stringify(uncast(value, r("GetSecretTypesResponse403")), null, 2);
    }

    public static toGetSecretTypesResponse500(json: string): GetSecretTypesResponse500 {
        return cast(JSON.parse(json), r("GetSecretTypesResponse500"));
    }

    public static getSecretTypesResponse500ToJson(value: GetSecretTypesResponse500): string {
        return JSON.stringify(uncast(value, r("GetSecretTypesResponse500")), null, 2);
    }

    public static toGetTagsSlugEntitiesResponse(json: string): GetTagsSlugEntitiesResponse {
        return cast(JSON.parse(json), r("GetTagsSlugEntitiesResponse"));
    }

    public static getTagsSlugEntitiesResponseToJson(value: GetTagsSlugEntitiesResponse): string {
        return JSON.stringify(uncast(value, r("GetTagsSlugEntitiesResponse")), null, 2);
    }

    public static toGetTagsSlugEntitiesResponse400(json: string): GetTagsSlugEntitiesResponse400 {
        return cast(JSON.parse(json), r("GetTagsSlugEntitiesResponse400"));
    }

    public static getTagsSlugEntitiesResponse400ToJson(value: GetTagsSlugEntitiesResponse400): string {
        return JSON.stringify(uncast(value, r("GetTagsSlugEntitiesResponse400")), null, 2);
    }

    public static toGetTagsSlugEntitiesResponse401(json: string): GetTagsSlugEntitiesResponse401 {
        return cast(JSON.parse(json), r("GetTagsSlugEntitiesResponse401"));
    }

    public static getTagsSlugEntitiesResponse401ToJson(value: GetTagsSlugEntitiesResponse401): string {
        return JSON.stringify(uncast(value, r("GetTagsSlugEntitiesResponse401")), null, 2);
    }

    public static toGetTagsSlugEntitiesResponse403(json: string): GetTagsSlugEntitiesResponse403 {
        return cast(JSON.parse(json), r("GetTagsSlugEntitiesResponse403"));
    }

    public static getTagsSlugEntitiesResponse403ToJson(value: GetTagsSlugEntitiesResponse403): string {
        return JSON.stringify(uncast(value, r("GetTagsSlugEntitiesResponse403")), null, 2);
    }

    public static toGetTagsSlugEntitiesResponse404(json: string): GetTagsSlugEntitiesResponse404 {
        return cast(JSON.parse(json), r("GetTagsSlugEntitiesResponse404"));
    }

    public static getTagsSlugEntitiesResponse404ToJson(value: GetTagsSlugEntitiesResponse404): string {
        return JSON.stringify(uncast(value, r("GetTagsSlugEntitiesResponse404")), null, 2);
    }

    public static toGetTagsSlugEntitiesResponse500(json: string): GetTagsSlugEntitiesResponse500 {
        return cast(JSON.parse(json), r("GetTagsSlugEntitiesResponse500"));
    }

    public static getTagsSlugEntitiesResponse500ToJson(value: GetTagsSlugEntitiesResponse500): string {
        return JSON.stringify(uncast(value, r("GetTagsSlugEntitiesResponse500")), null, 2);
    }

    public static toGetWorkspacesResponse(json: string): GetWorkspacesResponse {
        return cast(JSON.parse(json), r("GetWorkspacesResponse"));
    }

    public static getWorkspacesResponseToJson(value: GetWorkspacesResponse): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesResponse")), null, 2);
    }

    public static toGetWorkspacesResponse401(json: string): GetWorkspacesResponse401 {
        return cast(JSON.parse(json), r("GetWorkspacesResponse401"));
    }

    public static getWorkspacesResponse401ToJson(value: GetWorkspacesResponse401): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesResponse401")), null, 2);
    }

    public static toGetWorkspacesResponse429(json: string): GetWorkspacesResponse429 {
        return cast(JSON.parse(json), r("GetWorkspacesResponse429"));
    }

    public static getWorkspacesResponse429ToJson(value: GetWorkspacesResponse429): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesResponse429")), null, 2);
    }

    public static toGetWorkspacesResponse500(json: string): GetWorkspacesResponse500 {
        return cast(JSON.parse(json), r("GetWorkspacesResponse500"));
    }

    public static getWorkspacesResponse500ToJson(value: GetWorkspacesResponse500): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesResponse500")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDGlobalVariablesResponse(json: string): GetWorkspacesWorkspaceIDGlobalVariablesResponse {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDGlobalVariablesResponse"));
    }

    public static getWorkspacesWorkspaceIDGlobalVariablesResponseToJson(value: GetWorkspacesWorkspaceIDGlobalVariablesResponse): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDGlobalVariablesResponse")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDGlobalVariablesResponse500(json: string): GetWorkspacesWorkspaceIDGlobalVariablesResponse500 {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDGlobalVariablesResponse500"));
    }

    public static getWorkspacesWorkspaceIDGlobalVariablesResponse500ToJson(value: GetWorkspacesWorkspaceIDGlobalVariablesResponse500): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDGlobalVariablesResponse500")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDResponse(json: string): GetWorkspacesWorkspaceIDResponse {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDResponse"));
    }

    public static getWorkspacesWorkspaceIDResponseToJson(value: GetWorkspacesWorkspaceIDResponse): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDResponse")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDResponse401(json: string): GetWorkspacesWorkspaceIDResponse401 {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDResponse401"));
    }

    public static getWorkspacesWorkspaceIDResponse401ToJson(value: GetWorkspacesWorkspaceIDResponse401): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDResponse401")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDResponse404(json: string): GetWorkspacesWorkspaceIDResponse404 {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDResponse404"));
    }

    public static getWorkspacesWorkspaceIDResponse404ToJson(value: GetWorkspacesWorkspaceIDResponse404): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDResponse404")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDResponse429(json: string): GetWorkspacesWorkspaceIDResponse429 {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDResponse429"));
    }

    public static getWorkspacesWorkspaceIDResponse429ToJson(value: GetWorkspacesWorkspaceIDResponse429): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDResponse429")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDResponse500(json: string): GetWorkspacesWorkspaceIDResponse500 {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDResponse500"));
    }

    public static getWorkspacesWorkspaceIDResponse500ToJson(value: GetWorkspacesWorkspaceIDResponse500): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDResponse500")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDTagsResponse(json: string): GetWorkspacesWorkspaceIDTagsResponse {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDTagsResponse"));
    }

    public static getWorkspacesWorkspaceIDTagsResponseToJson(value: GetWorkspacesWorkspaceIDTagsResponse): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDTagsResponse")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDTagsResponse401(json: string): GetWorkspacesWorkspaceIDTagsResponse401 {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDTagsResponse401"));
    }

    public static getWorkspacesWorkspaceIDTagsResponse401ToJson(value: GetWorkspacesWorkspaceIDTagsResponse401): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDTagsResponse401")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDTagsResponse403(json: string): GetWorkspacesWorkspaceIDTagsResponse403 {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDTagsResponse403"));
    }

    public static getWorkspacesWorkspaceIDTagsResponse403ToJson(value: GetWorkspacesWorkspaceIDTagsResponse403): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDTagsResponse403")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDTagsResponse404(json: string): GetWorkspacesWorkspaceIDTagsResponse404 {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDTagsResponse404"));
    }

    public static getWorkspacesWorkspaceIDTagsResponse404ToJson(value: GetWorkspacesWorkspaceIDTagsResponse404): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDTagsResponse404")), null, 2);
    }

    public static toGetWorkspacesWorkspaceIDTagsResponse500(json: string): GetWorkspacesWorkspaceIDTagsResponse500 {
        return cast(JSON.parse(json), r("GetWorkspacesWorkspaceIDTagsResponse500"));
    }

    public static getWorkspacesWorkspaceIDTagsResponse500ToJson(value: GetWorkspacesWorkspaceIDTagsResponse500): string {
        return JSON.stringify(uncast(value, r("GetWorkspacesWorkspaceIDTagsResponse500")), null, 2);
    }

    public static toPANElementCreated(json: string): PANElementCreated {
        return cast(JSON.parse(json), r("PANElementCreated"));
    }

    public static pANElementCreatedToJson(value: PANElementCreated): string {
        return JSON.stringify(uncast(value, r("PANElementCreated")), null, 2);
    }

    public static toPANFolderCreated(json: string): PANFolderCreated {
        return cast(JSON.parse(json), r("PANFolderCreated"));
    }

    public static pANFolderCreatedToJson(value: PANFolderCreated): string {
        return JSON.stringify(uncast(value, r("PANFolderCreated")), null, 2);
    }

    public static toPatchCollectionsCollectionIDBody(json: string): PatchCollectionsCollectionIDBody {
        return cast(JSON.parse(json), r("PatchCollectionsCollectionIDBody"));
    }

    public static patchCollectionsCollectionIDBodyToJson(value: PatchCollectionsCollectionIDBody): string {
        return JSON.stringify(uncast(value, r("PatchCollectionsCollectionIDBody")), null, 2);
    }

    public static toPatchCollectionsCollectionIDResponse(json: string): PatchCollectionsCollectionIDResponse {
        return cast(JSON.parse(json), r("PatchCollectionsCollectionIDResponse"));
    }

    public static patchCollectionsCollectionIDResponseToJson(value: PatchCollectionsCollectionIDResponse): string {
        return JSON.stringify(uncast(value, r("PatchCollectionsCollectionIDResponse")), null, 2);
    }

    public static toPatchCollectionsCollectionIDResponse400(json: string): PatchCollectionsCollectionIDResponse400 {
        return cast(JSON.parse(json), r("PatchCollectionsCollectionIDResponse400"));
    }

    public static patchCollectionsCollectionIDResponse400ToJson(value: PatchCollectionsCollectionIDResponse400): string {
        return JSON.stringify(uncast(value, r("PatchCollectionsCollectionIDResponse400")), null, 2);
    }

    public static toPatchCollectionsCollectionIDResponse401(json: string): PatchCollectionsCollectionIDResponse401 {
        return cast(JSON.parse(json), r("PatchCollectionsCollectionIDResponse401"));
    }

    public static patchCollectionsCollectionIDResponse401ToJson(value: PatchCollectionsCollectionIDResponse401): string {
        return JSON.stringify(uncast(value, r("PatchCollectionsCollectionIDResponse401")), null, 2);
    }

    public static toPatchCollectionsCollectionIDResponse403(json: string): PatchCollectionsCollectionIDResponse403 {
        return cast(JSON.parse(json), r("PatchCollectionsCollectionIDResponse403"));
    }

    public static patchCollectionsCollectionIDResponse403ToJson(value: PatchCollectionsCollectionIDResponse403): string {
        return JSON.stringify(uncast(value, r("PatchCollectionsCollectionIDResponse403")), null, 2);
    }

    public static toPatchCollectionsCollectionIDResponse404(json: string): PatchCollectionsCollectionIDResponse404 {
        return cast(JSON.parse(json), r("PatchCollectionsCollectionIDResponse404"));
    }

    public static patchCollectionsCollectionIDResponse404ToJson(value: PatchCollectionsCollectionIDResponse404): string {
        return JSON.stringify(uncast(value, r("PatchCollectionsCollectionIDResponse404")), null, 2);
    }

    public static toPatchCollectionsCollectionIDResponse429(json: string): PatchCollectionsCollectionIDResponse429 {
        return cast(JSON.parse(json), r("PatchCollectionsCollectionIDResponse429"));
    }

    public static patchCollectionsCollectionIDResponse429ToJson(value: PatchCollectionsCollectionIDResponse429): string {
        return JSON.stringify(uncast(value, r("PatchCollectionsCollectionIDResponse429")), null, 2);
    }

    public static toPatchCollectionsCollectionIDResponse500(json: string): PatchCollectionsCollectionIDResponse500 {
        return cast(JSON.parse(json), r("PatchCollectionsCollectionIDResponse500"));
    }

    public static patchCollectionsCollectionIDResponse500ToJson(value: PatchCollectionsCollectionIDResponse500): string {
        return JSON.stringify(uncast(value, r("PatchCollectionsCollectionIDResponse500")), null, 2);
    }

    public static toPatchScimV2GroupsGroupIDBody(json: string): PatchScimV2GroupsGroupIDBody {
        return cast(JSON.parse(json), r("PatchScimV2GroupsGroupIDBody"));
    }

    public static patchScimV2GroupsGroupIDBodyToJson(value: PatchScimV2GroupsGroupIDBody): string {
        return JSON.stringify(uncast(value, r("PatchScimV2GroupsGroupIDBody")), null, 2);
    }

    public static toPatchScimV2GroupsGroupIDResponse(json: string): PatchScimV2GroupsGroupIDResponse {
        return cast(JSON.parse(json), r("PatchScimV2GroupsGroupIDResponse"));
    }

    public static patchScimV2GroupsGroupIDResponseToJson(value: PatchScimV2GroupsGroupIDResponse): string {
        return JSON.stringify(uncast(value, r("PatchScimV2GroupsGroupIDResponse")), null, 2);
    }

    public static toPatchScimV2GroupsGroupIDResponse400(json: string): PatchScimV2GroupsGroupIDResponse400 {
        return cast(JSON.parse(json), r("PatchScimV2GroupsGroupIDResponse400"));
    }

    public static patchScimV2GroupsGroupIDResponse400ToJson(value: PatchScimV2GroupsGroupIDResponse400): string {
        return JSON.stringify(uncast(value, r("PatchScimV2GroupsGroupIDResponse400")), null, 2);
    }

    public static toPatchScimV2GroupsGroupIDResponse401(json: string): PatchScimV2GroupsGroupIDResponse401 {
        return cast(JSON.parse(json), r("PatchScimV2GroupsGroupIDResponse401"));
    }

    public static patchScimV2GroupsGroupIDResponse401ToJson(value: PatchScimV2GroupsGroupIDResponse401): string {
        return JSON.stringify(uncast(value, r("PatchScimV2GroupsGroupIDResponse401")), null, 2);
    }

    public static toPatchScimV2GroupsGroupIDResponse403(json: string): PatchScimV2GroupsGroupIDResponse403 {
        return cast(JSON.parse(json), r("PatchScimV2GroupsGroupIDResponse403"));
    }

    public static patchScimV2GroupsGroupIDResponse403ToJson(value: PatchScimV2GroupsGroupIDResponse403): string {
        return JSON.stringify(uncast(value, r("PatchScimV2GroupsGroupIDResponse403")), null, 2);
    }

    public static toPatchScimV2GroupsGroupIDResponse404(json: string): PatchScimV2GroupsGroupIDResponse404 {
        return cast(JSON.parse(json), r("PatchScimV2GroupsGroupIDResponse404"));
    }

    public static patchScimV2GroupsGroupIDResponse404ToJson(value: PatchScimV2GroupsGroupIDResponse404): string {
        return JSON.stringify(uncast(value, r("PatchScimV2GroupsGroupIDResponse404")), null, 2);
    }

    public static toPatchScimV2GroupsGroupIDResponse429(json: string): PatchScimV2GroupsGroupIDResponse429 {
        return cast(JSON.parse(json), r("PatchScimV2GroupsGroupIDResponse429"));
    }

    public static patchScimV2GroupsGroupIDResponse429ToJson(value: PatchScimV2GroupsGroupIDResponse429): string {
        return JSON.stringify(uncast(value, r("PatchScimV2GroupsGroupIDResponse429")), null, 2);
    }

    public static toPatchScimV2GroupsGroupIDResponse500(json: string): PatchScimV2GroupsGroupIDResponse500 {
        return cast(JSON.parse(json), r("PatchScimV2GroupsGroupIDResponse500"));
    }

    public static patchScimV2GroupsGroupIDResponse500ToJson(value: PatchScimV2GroupsGroupIDResponse500): string {
        return JSON.stringify(uncast(value, r("PatchScimV2GroupsGroupIDResponse500")), null, 2);
    }

    public static toPatchScimV2UsersUserIDBody(json: string): PatchScimV2UsersUserIDBody {
        return cast(JSON.parse(json), r("PatchScimV2UsersUserIDBody"));
    }

    public static patchScimV2UsersUserIDBodyToJson(value: PatchScimV2UsersUserIDBody): string {
        return JSON.stringify(uncast(value, r("PatchScimV2UsersUserIDBody")), null, 2);
    }

    public static toPatchScimV2UsersUserIDResponse(json: string): PatchScimV2UsersUserIDResponse {
        return cast(JSON.parse(json), r("PatchScimV2UsersUserIDResponse"));
    }

    public static patchScimV2UsersUserIDResponseToJson(value: PatchScimV2UsersUserIDResponse): string {
        return JSON.stringify(uncast(value, r("PatchScimV2UsersUserIDResponse")), null, 2);
    }

    public static toPatchScimV2UsersUserIDResponse400(json: string): PatchScimV2UsersUserIDResponse400 {
        return cast(JSON.parse(json), r("PatchScimV2UsersUserIDResponse400"));
    }

    public static patchScimV2UsersUserIDResponse400ToJson(value: PatchScimV2UsersUserIDResponse400): string {
        return JSON.stringify(uncast(value, r("PatchScimV2UsersUserIDResponse400")), null, 2);
    }

    public static toPatchScimV2UsersUserIDResponse401(json: string): PatchScimV2UsersUserIDResponse401 {
        return cast(JSON.parse(json), r("PatchScimV2UsersUserIDResponse401"));
    }

    public static patchScimV2UsersUserIDResponse401ToJson(value: PatchScimV2UsersUserIDResponse401): string {
        return JSON.stringify(uncast(value, r("PatchScimV2UsersUserIDResponse401")), null, 2);
    }

    public static toPatchScimV2UsersUserIDResponse403(json: string): PatchScimV2UsersUserIDResponse403 {
        return cast(JSON.parse(json), r("PatchScimV2UsersUserIDResponse403"));
    }

    public static patchScimV2UsersUserIDResponse403ToJson(value: PatchScimV2UsersUserIDResponse403): string {
        return JSON.stringify(uncast(value, r("PatchScimV2UsersUserIDResponse403")), null, 2);
    }

    public static toPatchScimV2UsersUserIDResponse404(json: string): PatchScimV2UsersUserIDResponse404 {
        return cast(JSON.parse(json), r("PatchScimV2UsersUserIDResponse404"));
    }

    public static patchScimV2UsersUserIDResponse404ToJson(value: PatchScimV2UsersUserIDResponse404): string {
        return JSON.stringify(uncast(value, r("PatchScimV2UsersUserIDResponse404")), null, 2);
    }

    public static toPatchScimV2UsersUserIDResponse429(json: string): PatchScimV2UsersUserIDResponse429 {
        return cast(JSON.parse(json), r("PatchScimV2UsersUserIDResponse429"));
    }

    public static patchScimV2UsersUserIDResponse429ToJson(value: PatchScimV2UsersUserIDResponse429): string {
        return JSON.stringify(uncast(value, r("PatchScimV2UsersUserIDResponse429")), null, 2);
    }

    public static toPatchScimV2UsersUserIDResponse500(json: string): PatchScimV2UsersUserIDResponse500 {
        return cast(JSON.parse(json), r("PatchScimV2UsersUserIDResponse500"));
    }

    public static patchScimV2UsersUserIDResponse500ToJson(value: PatchScimV2UsersUserIDResponse500): string {
        return JSON.stringify(uncast(value, r("PatchScimV2UsersUserIDResponse500")), null, 2);
    }

    public static toPostApisAPIIDCollectionsResponse(json: string): PostApisAPIIDCollectionsResponse {
        return cast(JSON.parse(json), r("PostApisAPIIDCollectionsResponse"));
    }

    public static postApisAPIIDCollectionsResponseToJson(value: PostApisAPIIDCollectionsResponse): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDCollectionsResponse")), null, 2);
    }

    public static toPostApisAPIIDCollectionsResponse401(json: string): PostApisAPIIDCollectionsResponse401 {
        return cast(JSON.parse(json), r("PostApisAPIIDCollectionsResponse401"));
    }

    public static postApisAPIIDCollectionsResponse401ToJson(value: PostApisAPIIDCollectionsResponse401): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDCollectionsResponse401")), null, 2);
    }

    public static toPostApisAPIIDCollectionsResponse403(json: string): PostApisAPIIDCollectionsResponse403 {
        return cast(JSON.parse(json), r("PostApisAPIIDCollectionsResponse403"));
    }

    public static postApisAPIIDCollectionsResponse403ToJson(value: PostApisAPIIDCollectionsResponse403): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDCollectionsResponse403")), null, 2);
    }

    public static toPostApisAPIIDCollectionsResponse404(json: string): PostApisAPIIDCollectionsResponse404 {
        return cast(JSON.parse(json), r("PostApisAPIIDCollectionsResponse404"));
    }

    public static postApisAPIIDCollectionsResponse404ToJson(value: PostApisAPIIDCollectionsResponse404): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDCollectionsResponse404")), null, 2);
    }

    public static toPostApisAPIIDCollectionsResponse500(json: string): PostApisAPIIDCollectionsResponse500 {
        return cast(JSON.parse(json), r("PostApisAPIIDCollectionsResponse500"));
    }

    public static postApisAPIIDCollectionsResponse500ToJson(value: PostApisAPIIDCollectionsResponse500): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDCollectionsResponse500")), null, 2);
    }

    public static toPostApisAPIIDSchemasBody(json: string): PostApisAPIIDSchemasBody {
        return cast(JSON.parse(json), r("PostApisAPIIDSchemasBody"));
    }

    public static postApisAPIIDSchemasBodyToJson(value: PostApisAPIIDSchemasBody): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDSchemasBody")), null, 2);
    }

    public static toPostApisAPIIDSchemasResponse(json: string): PostApisAPIIDSchemasResponse {
        return cast(JSON.parse(json), r("PostApisAPIIDSchemasResponse"));
    }

    public static postApisAPIIDSchemasResponseToJson(value: PostApisAPIIDSchemasResponse): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDSchemasResponse")), null, 2);
    }

    public static toPostApisAPIIDSchemasResponse400(json: string): PostApisAPIIDSchemasResponse400 {
        return cast(JSON.parse(json), r("PostApisAPIIDSchemasResponse400"));
    }

    public static postApisAPIIDSchemasResponse400ToJson(value: PostApisAPIIDSchemasResponse400): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDSchemasResponse400")), null, 2);
    }

    public static toPostApisAPIIDSchemasResponse401(json: string): PostApisAPIIDSchemasResponse401 {
        return cast(JSON.parse(json), r("PostApisAPIIDSchemasResponse401"));
    }

    public static postApisAPIIDSchemasResponse401ToJson(value: PostApisAPIIDSchemasResponse401): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDSchemasResponse401")), null, 2);
    }

    public static toPostApisAPIIDSchemasResponse403(json: string): PostApisAPIIDSchemasResponse403 {
        return cast(JSON.parse(json), r("PostApisAPIIDSchemasResponse403"));
    }

    public static postApisAPIIDSchemasResponse403ToJson(value: PostApisAPIIDSchemasResponse403): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDSchemasResponse403")), null, 2);
    }

    public static toPostApisAPIIDSchemasResponse404(json: string): PostApisAPIIDSchemasResponse404 {
        return cast(JSON.parse(json), r("PostApisAPIIDSchemasResponse404"));
    }

    public static postApisAPIIDSchemasResponse404ToJson(value: PostApisAPIIDSchemasResponse404): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDSchemasResponse404")), null, 2);
    }

    public static toPostApisAPIIDSchemasResponse422(json: string): PostApisAPIIDSchemasResponse422 {
        return cast(JSON.parse(json), r("PostApisAPIIDSchemasResponse422"));
    }

    public static postApisAPIIDSchemasResponse422ToJson(value: PostApisAPIIDSchemasResponse422): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDSchemasResponse422")), null, 2);
    }

    public static toPostApisAPIIDSchemasResponse500(json: string): PostApisAPIIDSchemasResponse500 {
        return cast(JSON.parse(json), r("PostApisAPIIDSchemasResponse500"));
    }

    public static postApisAPIIDSchemasResponse500ToJson(value: PostApisAPIIDSchemasResponse500): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDSchemasResponse500")), null, 2);
    }

    public static toPostApisAPIIDVersionsResponse(json: string): PostApisAPIIDVersionsResponse {
        return cast(JSON.parse(json), r("PostApisAPIIDVersionsResponse"));
    }

    public static postApisAPIIDVersionsResponseToJson(value: PostApisAPIIDVersionsResponse): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDVersionsResponse")), null, 2);
    }

    public static toPostApisAPIIDVersionsResponse401(json: string): PostApisAPIIDVersionsResponse401 {
        return cast(JSON.parse(json), r("PostApisAPIIDVersionsResponse401"));
    }

    public static postApisAPIIDVersionsResponse401ToJson(value: PostApisAPIIDVersionsResponse401): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDVersionsResponse401")), null, 2);
    }

    public static toPostApisAPIIDVersionsResponse403(json: string): PostApisAPIIDVersionsResponse403 {
        return cast(JSON.parse(json), r("PostApisAPIIDVersionsResponse403"));
    }

    public static postApisAPIIDVersionsResponse403ToJson(value: PostApisAPIIDVersionsResponse403): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDVersionsResponse403")), null, 2);
    }

    public static toPostApisAPIIDVersionsResponse404(json: string): PostApisAPIIDVersionsResponse404 {
        return cast(JSON.parse(json), r("PostApisAPIIDVersionsResponse404"));
    }

    public static postApisAPIIDVersionsResponse404ToJson(value: PostApisAPIIDVersionsResponse404): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDVersionsResponse404")), null, 2);
    }

    public static toPostApisAPIIDVersionsResponse422(json: string): PostApisAPIIDVersionsResponse422 {
        return cast(JSON.parse(json), r("PostApisAPIIDVersionsResponse422"));
    }

    public static postApisAPIIDVersionsResponse422ToJson(value: PostApisAPIIDVersionsResponse422): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDVersionsResponse422")), null, 2);
    }

    public static toPostApisAPIIDVersionsResponse500(json: string): PostApisAPIIDVersionsResponse500 {
        return cast(JSON.parse(json), r("PostApisAPIIDVersionsResponse500"));
    }

    public static postApisAPIIDVersionsResponse500ToJson(value: PostApisAPIIDVersionsResponse500): string {
        return JSON.stringify(uncast(value, r("PostApisAPIIDVersionsResponse500")), null, 2);
    }

    public static toPostApisBody(json: string): PostApisBody {
        return cast(JSON.parse(json), r("PostApisBody"));
    }

    public static postApisBodyToJson(value: PostApisBody): string {
        return JSON.stringify(uncast(value, r("PostApisBody")), null, 2);
    }

    public static toPostApisResponse(json: string): PostApisResponse {
        return cast(JSON.parse(json), r("PostApisResponse"));
    }

    public static postApisResponseToJson(value: PostApisResponse): string {
        return JSON.stringify(uncast(value, r("PostApisResponse")), null, 2);
    }

    public static toPostApisResponse400(json: string): PostApisResponse400 {
        return cast(JSON.parse(json), r("PostApisResponse400"));
    }

    public static postApisResponse400ToJson(value: PostApisResponse400): string {
        return JSON.stringify(uncast(value, r("PostApisResponse400")), null, 2);
    }

    public static toPostApisResponse401(json: string): PostApisResponse401 {
        return cast(JSON.parse(json), r("PostApisResponse401"));
    }

    public static postApisResponse401ToJson(value: PostApisResponse401): string {
        return JSON.stringify(uncast(value, r("PostApisResponse401")), null, 2);
    }

    public static toPostApisResponse403(json: string): PostApisResponse403 {
        return cast(JSON.parse(json), r("PostApisResponse403"));
    }

    public static postApisResponse403ToJson(value: PostApisResponse403): string {
        return JSON.stringify(uncast(value, r("PostApisResponse403")), null, 2);
    }

    public static toPostApisResponse404(json: string): PostApisResponse404 {
        return cast(JSON.parse(json), r("PostApisResponse404"));
    }

    public static postApisResponse404ToJson(value: PostApisResponse404): string {
        return JSON.stringify(uncast(value, r("PostApisResponse404")), null, 2);
    }

    public static toPostApisResponse500(json: string): PostApisResponse500 {
        return cast(JSON.parse(json), r("PostApisResponse500"));
    }

    public static postApisResponse500ToJson(value: PostApisResponse500): string {
        return JSON.stringify(uncast(value, r("PostApisResponse500")), null, 2);
    }

    public static toPostCollectionsBody(json: string): PostCollectionsBody {
        return cast(JSON.parse(json), r("PostCollectionsBody"));
    }

    public static postCollectionsBodyToJson(value: PostCollectionsBody): string {
        return JSON.stringify(uncast(value, r("PostCollectionsBody")), null, 2);
    }

    public static toPostCollectionsCollectionIDFoldersBody(json: string): PostCollectionsCollectionIDFoldersBody {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDFoldersBody"));
    }

    public static postCollectionsCollectionIDFoldersBodyToJson(value: PostCollectionsCollectionIDFoldersBody): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDFoldersBody")), null, 2);
    }

    public static toPostCollectionsCollectionIDFoldersResponse(json: string): PostCollectionsCollectionIDFoldersResponse {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDFoldersResponse"));
    }

    public static postCollectionsCollectionIDFoldersResponseToJson(value: PostCollectionsCollectionIDFoldersResponse): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDFoldersResponse")), null, 2);
    }

    public static toPostCollectionsCollectionIDFoldersResponse400(json: string): PostCollectionsCollectionIDFoldersResponse400 {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDFoldersResponse400"));
    }

    public static postCollectionsCollectionIDFoldersResponse400ToJson(value: PostCollectionsCollectionIDFoldersResponse400): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDFoldersResponse400")), null, 2);
    }

    public static toPostCollectionsCollectionIDFoldersResponse401(json: string): PostCollectionsCollectionIDFoldersResponse401 {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDFoldersResponse401"));
    }

    public static postCollectionsCollectionIDFoldersResponse401ToJson(value: PostCollectionsCollectionIDFoldersResponse401): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDFoldersResponse401")), null, 2);
    }

    public static toPostCollectionsCollectionIDFoldersResponse500(json: string): PostCollectionsCollectionIDFoldersResponse500 {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDFoldersResponse500"));
    }

    public static postCollectionsCollectionIDFoldersResponse500ToJson(value: PostCollectionsCollectionIDFoldersResponse500): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDFoldersResponse500")), null, 2);
    }

    public static toPostCollectionsCollectionIDRequestsBody(json: string): PostCollectionsCollectionIDRequestsBody {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDRequestsBody"));
    }

    public static postCollectionsCollectionIDRequestsBodyToJson(value: PostCollectionsCollectionIDRequestsBody): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDRequestsBody")), null, 2);
    }

    public static toPostCollectionsCollectionIDRequestsResponse(json: string): PostCollectionsCollectionIDRequestsResponse {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDRequestsResponse"));
    }

    public static postCollectionsCollectionIDRequestsResponseToJson(value: PostCollectionsCollectionIDRequestsResponse): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDRequestsResponse")), null, 2);
    }

    public static toPostCollectionsCollectionIDRequestsResponse400(json: string): PostCollectionsCollectionIDRequestsResponse400 {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDRequestsResponse400"));
    }

    public static postCollectionsCollectionIDRequestsResponse400ToJson(value: PostCollectionsCollectionIDRequestsResponse400): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDRequestsResponse400")), null, 2);
    }

    public static toPostCollectionsCollectionIDRequestsResponse401(json: string): PostCollectionsCollectionIDRequestsResponse401 {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDRequestsResponse401"));
    }

    public static postCollectionsCollectionIDRequestsResponse401ToJson(value: PostCollectionsCollectionIDRequestsResponse401): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDRequestsResponse401")), null, 2);
    }

    public static toPostCollectionsCollectionIDRequestsResponse500(json: string): PostCollectionsCollectionIDRequestsResponse500 {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDRequestsResponse500"));
    }

    public static postCollectionsCollectionIDRequestsResponse500ToJson(value: PostCollectionsCollectionIDRequestsResponse500): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDRequestsResponse500")), null, 2);
    }

    public static toPostCollectionsCollectionIDResponsesBody(json: string): PostCollectionsCollectionIDResponsesBody {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDResponsesBody"));
    }

    public static postCollectionsCollectionIDResponsesBodyToJson(value: PostCollectionsCollectionIDResponsesBody): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDResponsesBody")), null, 2);
    }

    public static toPostCollectionsCollectionIDResponsesResponse(json: string): PostCollectionsCollectionIDResponsesResponse {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDResponsesResponse"));
    }

    public static postCollectionsCollectionIDResponsesResponseToJson(value: PostCollectionsCollectionIDResponsesResponse): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDResponsesResponse")), null, 2);
    }

    public static toPostCollectionsCollectionIDResponsesResponse400(json: string): PostCollectionsCollectionIDResponsesResponse400 {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDResponsesResponse400"));
    }

    public static postCollectionsCollectionIDResponsesResponse400ToJson(value: PostCollectionsCollectionIDResponsesResponse400): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDResponsesResponse400")), null, 2);
    }

    public static toPostCollectionsCollectionIDResponsesResponse401(json: string): PostCollectionsCollectionIDResponsesResponse401 {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDResponsesResponse401"));
    }

    public static postCollectionsCollectionIDResponsesResponse401ToJson(value: PostCollectionsCollectionIDResponsesResponse401): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDResponsesResponse401")), null, 2);
    }

    public static toPostCollectionsCollectionIDResponsesResponse500(json: string): PostCollectionsCollectionIDResponsesResponse500 {
        return cast(JSON.parse(json), r("PostCollectionsCollectionIDResponsesResponse500"));
    }

    public static postCollectionsCollectionIDResponsesResponse500ToJson(value: PostCollectionsCollectionIDResponsesResponse500): string {
        return JSON.stringify(uncast(value, r("PostCollectionsCollectionIDResponsesResponse500")), null, 2);
    }

    public static toPostCollectionsForkCollectionIDBody(json: string): PostCollectionsForkCollectionIDBody {
        return cast(JSON.parse(json), r("PostCollectionsForkCollectionIDBody"));
    }

    public static postCollectionsForkCollectionIDBodyToJson(value: PostCollectionsForkCollectionIDBody): string {
        return JSON.stringify(uncast(value, r("PostCollectionsForkCollectionIDBody")), null, 2);
    }

    public static toPostCollectionsForkCollectionIDResponse(json: string): PostCollectionsForkCollectionIDResponse {
        return cast(JSON.parse(json), r("PostCollectionsForkCollectionIDResponse"));
    }

    public static postCollectionsForkCollectionIDResponseToJson(value: PostCollectionsForkCollectionIDResponse): string {
        return JSON.stringify(uncast(value, r("PostCollectionsForkCollectionIDResponse")), null, 2);
    }

    public static toPostCollectionsForkCollectionIDResponse401(json: string): PostCollectionsForkCollectionIDResponse401 {
        return cast(JSON.parse(json), r("PostCollectionsForkCollectionIDResponse401"));
    }

    public static postCollectionsForkCollectionIDResponse401ToJson(value: PostCollectionsForkCollectionIDResponse401): string {
        return JSON.stringify(uncast(value, r("PostCollectionsForkCollectionIDResponse401")), null, 2);
    }

    public static toPostCollectionsForkCollectionIDResponse404(json: string): PostCollectionsForkCollectionIDResponse404 {
        return cast(JSON.parse(json), r("PostCollectionsForkCollectionIDResponse404"));
    }

    public static postCollectionsForkCollectionIDResponse404ToJson(value: PostCollectionsForkCollectionIDResponse404): string {
        return JSON.stringify(uncast(value, r("PostCollectionsForkCollectionIDResponse404")), null, 2);
    }

    public static toPostCollectionsForkCollectionIDResponse429(json: string): PostCollectionsForkCollectionIDResponse429 {
        return cast(JSON.parse(json), r("PostCollectionsForkCollectionIDResponse429"));
    }

    public static postCollectionsForkCollectionIDResponse429ToJson(value: PostCollectionsForkCollectionIDResponse429): string {
        return JSON.stringify(uncast(value, r("PostCollectionsForkCollectionIDResponse429")), null, 2);
    }

    public static toPostCollectionsForkCollectionIDResponse500(json: string): PostCollectionsForkCollectionIDResponse500 {
        return cast(JSON.parse(json), r("PostCollectionsForkCollectionIDResponse500"));
    }

    public static postCollectionsForkCollectionIDResponse500ToJson(value: PostCollectionsForkCollectionIDResponse500): string {
        return JSON.stringify(uncast(value, r("PostCollectionsForkCollectionIDResponse500")), null, 2);
    }

    public static toPostCollectionsMergeBody(json: string): PostCollectionsMergeBody {
        return cast(JSON.parse(json), r("PostCollectionsMergeBody"));
    }

    public static postCollectionsMergeBodyToJson(value: PostCollectionsMergeBody): string {
        return JSON.stringify(uncast(value, r("PostCollectionsMergeBody")), null, 2);
    }

    public static toPostCollectionsMergeResponse(json: string): PostCollectionsMergeResponse {
        return cast(JSON.parse(json), r("PostCollectionsMergeResponse"));
    }

    public static postCollectionsMergeResponseToJson(value: PostCollectionsMergeResponse): string {
        return JSON.stringify(uncast(value, r("PostCollectionsMergeResponse")), null, 2);
    }

    public static toPostCollectionsMergeResponse401(json: string): PostCollectionsMergeResponse401 {
        return cast(JSON.parse(json), r("PostCollectionsMergeResponse401"));
    }

    public static postCollectionsMergeResponse401ToJson(value: PostCollectionsMergeResponse401): string {
        return JSON.stringify(uncast(value, r("PostCollectionsMergeResponse401")), null, 2);
    }

    public static toPostCollectionsMergeResponse404(json: string): PostCollectionsMergeResponse404 {
        return cast(JSON.parse(json), r("PostCollectionsMergeResponse404"));
    }

    public static postCollectionsMergeResponse404ToJson(value: PostCollectionsMergeResponse404): string {
        return JSON.stringify(uncast(value, r("PostCollectionsMergeResponse404")), null, 2);
    }

    public static toPostCollectionsMergeResponse429(json: string): PostCollectionsMergeResponse429 {
        return cast(JSON.parse(json), r("PostCollectionsMergeResponse429"));
    }

    public static postCollectionsMergeResponse429ToJson(value: PostCollectionsMergeResponse429): string {
        return JSON.stringify(uncast(value, r("PostCollectionsMergeResponse429")), null, 2);
    }

    public static toPostCollectionsMergeResponse500(json: string): PostCollectionsMergeResponse500 {
        return cast(JSON.parse(json), r("PostCollectionsMergeResponse500"));
    }

    public static postCollectionsMergeResponse500ToJson(value: PostCollectionsMergeResponse500): string {
        return JSON.stringify(uncast(value, r("PostCollectionsMergeResponse500")), null, 2);
    }

    public static toPostCollectionsResponse(json: string): PostCollectionsResponse {
        return cast(JSON.parse(json), r("PostCollectionsResponse"));
    }

    public static postCollectionsResponseToJson(value: PostCollectionsResponse): string {
        return JSON.stringify(uncast(value, r("PostCollectionsResponse")), null, 2);
    }

    public static toPostCollectionsResponse400(json: string): PostCollectionsResponse400 {
        return cast(JSON.parse(json), r("PostCollectionsResponse400"));
    }

    public static postCollectionsResponse400ToJson(value: PostCollectionsResponse400): string {
        return JSON.stringify(uncast(value, r("PostCollectionsResponse400")), null, 2);
    }

    public static toPostCollectionsResponse401(json: string): PostCollectionsResponse401 {
        return cast(JSON.parse(json), r("PostCollectionsResponse401"));
    }

    public static postCollectionsResponse401ToJson(value: PostCollectionsResponse401): string {
        return JSON.stringify(uncast(value, r("PostCollectionsResponse401")), null, 2);
    }

    public static toPostCollectionsResponse429(json: string): PostCollectionsResponse429 {
        return cast(JSON.parse(json), r("PostCollectionsResponse429"));
    }

    public static postCollectionsResponse429ToJson(value: PostCollectionsResponse429): string {
        return JSON.stringify(uncast(value, r("PostCollectionsResponse429")), null, 2);
    }

    public static toPostCollectionsResponse500(json: string): PostCollectionsResponse500 {
        return cast(JSON.parse(json), r("PostCollectionsResponse500"));
    }

    public static postCollectionsResponse500ToJson(value: PostCollectionsResponse500): string {
        return JSON.stringify(uncast(value, r("PostCollectionsResponse500")), null, 2);
    }

    public static toPostDetectedSecretsQueriesBody(json: string): PostDetectedSecretsQueriesBody {
        return cast(JSON.parse(json), r("PostDetectedSecretsQueriesBody"));
    }

    public static postDetectedSecretsQueriesBodyToJson(value: PostDetectedSecretsQueriesBody): string {
        return JSON.stringify(uncast(value, r("PostDetectedSecretsQueriesBody")), null, 2);
    }

    public static toPostDetectedSecretsQueriesResponse(json: string): PostDetectedSecretsQueriesResponse {
        return cast(JSON.parse(json), r("PostDetectedSecretsQueriesResponse"));
    }

    public static postDetectedSecretsQueriesResponseToJson(value: PostDetectedSecretsQueriesResponse): string {
        return JSON.stringify(uncast(value, r("PostDetectedSecretsQueriesResponse")), null, 2);
    }

    public static toPostDetectedSecretsQueriesResponse400(json: string): PostDetectedSecretsQueriesResponse400 {
        return cast(JSON.parse(json), r("PostDetectedSecretsQueriesResponse400"));
    }

    public static postDetectedSecretsQueriesResponse400ToJson(value: PostDetectedSecretsQueriesResponse400): string {
        return JSON.stringify(uncast(value, r("PostDetectedSecretsQueriesResponse400")), null, 2);
    }

    public static toPostDetectedSecretsQueriesResponse401(json: string): PostDetectedSecretsQueriesResponse401 {
        return cast(JSON.parse(json), r("PostDetectedSecretsQueriesResponse401"));
    }

    public static postDetectedSecretsQueriesResponse401ToJson(value: PostDetectedSecretsQueriesResponse401): string {
        return JSON.stringify(uncast(value, r("PostDetectedSecretsQueriesResponse401")), null, 2);
    }

    public static toPostDetectedSecretsQueriesResponse403(json: string): PostDetectedSecretsQueriesResponse403 {
        return cast(JSON.parse(json), r("PostDetectedSecretsQueriesResponse403"));
    }

    public static postDetectedSecretsQueriesResponse403ToJson(value: PostDetectedSecretsQueriesResponse403): string {
        return JSON.stringify(uncast(value, r("PostDetectedSecretsQueriesResponse403")), null, 2);
    }

    public static toPostDetectedSecretsQueriesResponse500(json: string): PostDetectedSecretsQueriesResponse500 {
        return cast(JSON.parse(json), r("PostDetectedSecretsQueriesResponse500"));
    }

    public static postDetectedSecretsQueriesResponse500ToJson(value: PostDetectedSecretsQueriesResponse500): string {
        return JSON.stringify(uncast(value, r("PostDetectedSecretsQueriesResponse500")), null, 2);
    }

    public static toPostEnvironmentsBody(json: string): PostEnvironmentsBody {
        return cast(JSON.parse(json), r("PostEnvironmentsBody"));
    }

    public static postEnvironmentsBodyToJson(value: PostEnvironmentsBody): string {
        return JSON.stringify(uncast(value, r("PostEnvironmentsBody")), null, 2);
    }

    public static toPostEnvironmentsResponse(json: string): PostEnvironmentsResponse {
        return cast(JSON.parse(json), r("PostEnvironmentsResponse"));
    }

    public static postEnvironmentsResponseToJson(value: PostEnvironmentsResponse): string {
        return JSON.stringify(uncast(value, r("PostEnvironmentsResponse")), null, 2);
    }

    public static toPostEnvironmentsResponse400(json: string): PostEnvironmentsResponse400 {
        return cast(JSON.parse(json), r("PostEnvironmentsResponse400"));
    }

    public static postEnvironmentsResponse400ToJson(value: PostEnvironmentsResponse400): string {
        return JSON.stringify(uncast(value, r("PostEnvironmentsResponse400")), null, 2);
    }

    public static toPostEnvironmentsResponse401(json: string): PostEnvironmentsResponse401 {
        return cast(JSON.parse(json), r("PostEnvironmentsResponse401"));
    }

    public static postEnvironmentsResponse401ToJson(value: PostEnvironmentsResponse401): string {
        return JSON.stringify(uncast(value, r("PostEnvironmentsResponse401")), null, 2);
    }

    public static toPostEnvironmentsResponse403(json: string): PostEnvironmentsResponse403 {
        return cast(JSON.parse(json), r("PostEnvironmentsResponse403"));
    }

    public static postEnvironmentsResponse403ToJson(value: PostEnvironmentsResponse403): string {
        return JSON.stringify(uncast(value, r("PostEnvironmentsResponse403")), null, 2);
    }

    public static toPostEnvironmentsResponse429(json: string): PostEnvironmentsResponse429 {
        return cast(JSON.parse(json), r("PostEnvironmentsResponse429"));
    }

    public static postEnvironmentsResponse429ToJson(value: PostEnvironmentsResponse429): string {
        return JSON.stringify(uncast(value, r("PostEnvironmentsResponse429")), null, 2);
    }

    public static toPostEnvironmentsResponse500(json: string): PostEnvironmentsResponse500 {
        return cast(JSON.parse(json), r("PostEnvironmentsResponse500"));
    }

    public static postEnvironmentsResponse500ToJson(value: PostEnvironmentsResponse500): string {
        return JSON.stringify(uncast(value, r("PostEnvironmentsResponse500")), null, 2);
    }

    public static toPostImportOpenapiResponse(json: string): PostImportOpenapiResponse {
        return cast(JSON.parse(json), r("PostImportOpenapiResponse"));
    }

    public static postImportOpenapiResponseToJson(value: PostImportOpenapiResponse): string {
        return JSON.stringify(uncast(value, r("PostImportOpenapiResponse")), null, 2);
    }

    public static toPostImportOpenapiResponse400(json: string): PostImportOpenapiResponse400 {
        return cast(JSON.parse(json), r("PostImportOpenapiResponse400"));
    }

    public static postImportOpenapiResponse400ToJson(value: PostImportOpenapiResponse400): string {
        return JSON.stringify(uncast(value, r("PostImportOpenapiResponse400")), null, 2);
    }

    public static toPostImportOpenapiResponse401(json: string): PostImportOpenapiResponse401 {
        return cast(JSON.parse(json), r("PostImportOpenapiResponse401"));
    }

    public static postImportOpenapiResponse401ToJson(value: PostImportOpenapiResponse401): string {
        return JSON.stringify(uncast(value, r("PostImportOpenapiResponse401")), null, 2);
    }

    public static toPostImportOpenapiResponse429(json: string): PostImportOpenapiResponse429 {
        return cast(JSON.parse(json), r("PostImportOpenapiResponse429"));
    }

    public static postImportOpenapiResponse429ToJson(value: PostImportOpenapiResponse429): string {
        return JSON.stringify(uncast(value, r("PostImportOpenapiResponse429")), null, 2);
    }

    public static toPostImportOpenapiResponse500(json: string): PostImportOpenapiResponse500 {
        return cast(JSON.parse(json), r("PostImportOpenapiResponse500"));
    }

    public static postImportOpenapiResponse500ToJson(value: PostImportOpenapiResponse500): string {
        return JSON.stringify(uncast(value, r("PostImportOpenapiResponse500")), null, 2);
    }

    public static toPostMocksBody(json: string): PostMocksBody {
        return cast(JSON.parse(json), r("PostMocksBody"));
    }

    public static postMocksBodyToJson(value: PostMocksBody): string {
        return JSON.stringify(uncast(value, r("PostMocksBody")), null, 2);
    }

    public static toPostMocksMockIDPublishResponse(json: string): PostMocksMockIDPublishResponse {
        return cast(JSON.parse(json), r("PostMocksMockIDPublishResponse"));
    }

    public static postMocksMockIDPublishResponseToJson(value: PostMocksMockIDPublishResponse): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDPublishResponse")), null, 2);
    }

    public static toPostMocksMockIDPublishResponse400(json: string): PostMocksMockIDPublishResponse400 {
        return cast(JSON.parse(json), r("PostMocksMockIDPublishResponse400"));
    }

    public static postMocksMockIDPublishResponse400ToJson(value: PostMocksMockIDPublishResponse400): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDPublishResponse400")), null, 2);
    }

    public static toPostMocksMockIDPublishResponse401(json: string): PostMocksMockIDPublishResponse401 {
        return cast(JSON.parse(json), r("PostMocksMockIDPublishResponse401"));
    }

    public static postMocksMockIDPublishResponse401ToJson(value: PostMocksMockIDPublishResponse401): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDPublishResponse401")), null, 2);
    }

    public static toPostMocksMockIDPublishResponse404(json: string): PostMocksMockIDPublishResponse404 {
        return cast(JSON.parse(json), r("PostMocksMockIDPublishResponse404"));
    }

    public static postMocksMockIDPublishResponse404ToJson(value: PostMocksMockIDPublishResponse404): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDPublishResponse404")), null, 2);
    }

    public static toPostMocksMockIDPublishResponse429(json: string): PostMocksMockIDPublishResponse429 {
        return cast(JSON.parse(json), r("PostMocksMockIDPublishResponse429"));
    }

    public static postMocksMockIDPublishResponse429ToJson(value: PostMocksMockIDPublishResponse429): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDPublishResponse429")), null, 2);
    }

    public static toPostMocksMockIDPublishResponse500(json: string): PostMocksMockIDPublishResponse500 {
        return cast(JSON.parse(json), r("PostMocksMockIDPublishResponse500"));
    }

    public static postMocksMockIDPublishResponse500ToJson(value: PostMocksMockIDPublishResponse500): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDPublishResponse500")), null, 2);
    }

    public static toPostMocksMockIDServerResponsesBody(json: string): PostMocksMockIDServerResponsesBody {
        return cast(JSON.parse(json), r("PostMocksMockIDServerResponsesBody"));
    }

    public static postMocksMockIDServerResponsesBodyToJson(value: PostMocksMockIDServerResponsesBody): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDServerResponsesBody")), null, 2);
    }

    public static toPostMocksMockIDServerResponsesResponse400(json: string): PostMocksMockIDServerResponsesResponse400 {
        return cast(JSON.parse(json), r("PostMocksMockIDServerResponsesResponse400"));
    }

    public static postMocksMockIDServerResponsesResponse400ToJson(value: PostMocksMockIDServerResponsesResponse400): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDServerResponsesResponse400")), null, 2);
    }

    public static toPostMocksMockIDServerResponsesResponse401(json: string): PostMocksMockIDServerResponsesResponse401 {
        return cast(JSON.parse(json), r("PostMocksMockIDServerResponsesResponse401"));
    }

    public static postMocksMockIDServerResponsesResponse401ToJson(value: PostMocksMockIDServerResponsesResponse401): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDServerResponsesResponse401")), null, 2);
    }

    public static toPostMocksMockIDServerResponsesResponse429(json: string): PostMocksMockIDServerResponsesResponse429 {
        return cast(JSON.parse(json), r("PostMocksMockIDServerResponsesResponse429"));
    }

    public static postMocksMockIDServerResponsesResponse429ToJson(value: PostMocksMockIDServerResponsesResponse429): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDServerResponsesResponse429")), null, 2);
    }

    public static toPostMocksMockIDServerResponsesResponse500(json: string): PostMocksMockIDServerResponsesResponse500 {
        return cast(JSON.parse(json), r("PostMocksMockIDServerResponsesResponse500"));
    }

    public static postMocksMockIDServerResponsesResponse500ToJson(value: PostMocksMockIDServerResponsesResponse500): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDServerResponsesResponse500")), null, 2);
    }

    public static toPostMocksMockIDServerResponsesResponseItem(json: string): PostMocksMockIDServerResponsesResponseItem {
        return cast(JSON.parse(json), r("PostMocksMockIDServerResponsesResponseItem"));
    }

    public static postMocksMockIDServerResponsesResponseItemToJson(value: PostMocksMockIDServerResponsesResponseItem): string {
        return JSON.stringify(uncast(value, r("PostMocksMockIDServerResponsesResponseItem")), null, 2);
    }

    public static toPostMocksResponse(json: string): PostMocksResponse {
        return cast(JSON.parse(json), r("PostMocksResponse"));
    }

    public static postMocksResponseToJson(value: PostMocksResponse): string {
        return JSON.stringify(uncast(value, r("PostMocksResponse")), null, 2);
    }

    public static toPostMocksResponse400(json: string): PostMocksResponse400 {
        return cast(JSON.parse(json), r("PostMocksResponse400"));
    }

    public static postMocksResponse400ToJson(value: PostMocksResponse400): string {
        return JSON.stringify(uncast(value, r("PostMocksResponse400")), null, 2);
    }

    public static toPostMocksResponse401(json: string): PostMocksResponse401 {
        return cast(JSON.parse(json), r("PostMocksResponse401"));
    }

    public static postMocksResponse401ToJson(value: PostMocksResponse401): string {
        return JSON.stringify(uncast(value, r("PostMocksResponse401")), null, 2);
    }

    public static toPostMocksResponse429(json: string): PostMocksResponse429 {
        return cast(JSON.parse(json), r("PostMocksResponse429"));
    }

    public static postMocksResponse429ToJson(value: PostMocksResponse429): string {
        return JSON.stringify(uncast(value, r("PostMocksResponse429")), null, 2);
    }

    public static toPostMocksResponse500(json: string): PostMocksResponse500 {
        return cast(JSON.parse(json), r("PostMocksResponse500"));
    }

    public static postMocksResponse500ToJson(value: PostMocksResponse500): string {
        return JSON.stringify(uncast(value, r("PostMocksResponse500")), null, 2);
    }

    public static toPostMonitorsBody(json: string): PostMonitorsBody {
        return cast(JSON.parse(json), r("PostMonitorsBody"));
    }

    public static postMonitorsBodyToJson(value: PostMonitorsBody): string {
        return JSON.stringify(uncast(value, r("PostMonitorsBody")), null, 2);
    }

    public static toPostMonitorsMonitorIDRunResponse(json: string): PostMonitorsMonitorIDRunResponse {
        return cast(JSON.parse(json), r("PostMonitorsMonitorIDRunResponse"));
    }

    public static postMonitorsMonitorIDRunResponseToJson(value: PostMonitorsMonitorIDRunResponse): string {
        return JSON.stringify(uncast(value, r("PostMonitorsMonitorIDRunResponse")), null, 2);
    }

    public static toPostMonitorsMonitorIDRunResponse401(json: string): PostMonitorsMonitorIDRunResponse401 {
        return cast(JSON.parse(json), r("PostMonitorsMonitorIDRunResponse401"));
    }

    public static postMonitorsMonitorIDRunResponse401ToJson(value: PostMonitorsMonitorIDRunResponse401): string {
        return JSON.stringify(uncast(value, r("PostMonitorsMonitorIDRunResponse401")), null, 2);
    }

    public static toPostMonitorsMonitorIDRunResponse429(json: string): PostMonitorsMonitorIDRunResponse429 {
        return cast(JSON.parse(json), r("PostMonitorsMonitorIDRunResponse429"));
    }

    public static postMonitorsMonitorIDRunResponse429ToJson(value: PostMonitorsMonitorIDRunResponse429): string {
        return JSON.stringify(uncast(value, r("PostMonitorsMonitorIDRunResponse429")), null, 2);
    }

    public static toPostMonitorsMonitorIDRunResponse500(json: string): PostMonitorsMonitorIDRunResponse500 {
        return cast(JSON.parse(json), r("PostMonitorsMonitorIDRunResponse500"));
    }

    public static postMonitorsMonitorIDRunResponse500ToJson(value: PostMonitorsMonitorIDRunResponse500): string {
        return JSON.stringify(uncast(value, r("PostMonitorsMonitorIDRunResponse500")), null, 2);
    }

    public static toPostMonitorsResponse(json: string): PostMonitorsResponse {
        return cast(JSON.parse(json), r("PostMonitorsResponse"));
    }

    public static postMonitorsResponseToJson(value: PostMonitorsResponse): string {
        return JSON.stringify(uncast(value, r("PostMonitorsResponse")), null, 2);
    }

    public static toPostMonitorsResponse400(json: string): PostMonitorsResponse400 {
        return cast(JSON.parse(json), r("PostMonitorsResponse400"));
    }

    public static postMonitorsResponse400ToJson(value: PostMonitorsResponse400): string {
        return JSON.stringify(uncast(value, r("PostMonitorsResponse400")), null, 2);
    }

    public static toPostMonitorsResponse401(json: string): PostMonitorsResponse401 {
        return cast(JSON.parse(json), r("PostMonitorsResponse401"));
    }

    public static postMonitorsResponse401ToJson(value: PostMonitorsResponse401): string {
        return JSON.stringify(uncast(value, r("PostMonitorsResponse401")), null, 2);
    }

    public static toPostMonitorsResponse403(json: string): PostMonitorsResponse403 {
        return cast(JSON.parse(json), r("PostMonitorsResponse403"));
    }

    public static postMonitorsResponse403ToJson(value: PostMonitorsResponse403): string {
        return JSON.stringify(uncast(value, r("PostMonitorsResponse403")), null, 2);
    }

    public static toPostMonitorsResponse429(json: string): PostMonitorsResponse429 {
        return cast(JSON.parse(json), r("PostMonitorsResponse429"));
    }

    public static postMonitorsResponse429ToJson(value: PostMonitorsResponse429): string {
        return JSON.stringify(uncast(value, r("PostMonitorsResponse429")), null, 2);
    }

    public static toPostMonitorsResponse500(json: string): PostMonitorsResponse500 {
        return cast(JSON.parse(json), r("PostMonitorsResponse500"));
    }

    public static postMonitorsResponse500ToJson(value: PostMonitorsResponse500): string {
        return JSON.stringify(uncast(value, r("PostMonitorsResponse500")), null, 2);
    }

    public static toPostNetworkPrivateResponse401(json: string): PostNetworkPrivateResponse401 {
        return cast(JSON.parse(json), r("PostNetworkPrivateResponse401"));
    }

    public static postNetworkPrivateResponse401ToJson(value: PostNetworkPrivateResponse401): string {
        return JSON.stringify(uncast(value, r("PostNetworkPrivateResponse401")), null, 2);
    }

    public static toPostNetworkPrivateResponse403(json: string): PostNetworkPrivateResponse403 {
        return cast(JSON.parse(json), r("PostNetworkPrivateResponse403"));
    }

    public static postNetworkPrivateResponse403ToJson(value: PostNetworkPrivateResponse403): string {
        return JSON.stringify(uncast(value, r("PostNetworkPrivateResponse403")), null, 2);
    }

    public static toPostNetworkPrivateResponse404(json: string): PostNetworkPrivateResponse404 {
        return cast(JSON.parse(json), r("PostNetworkPrivateResponse404"));
    }

    public static postNetworkPrivateResponse404ToJson(value: PostNetworkPrivateResponse404): string {
        return JSON.stringify(uncast(value, r("PostNetworkPrivateResponse404")), null, 2);
    }

    public static toPostNetworkPrivateResponse429(json: string): PostNetworkPrivateResponse429 {
        return cast(JSON.parse(json), r("PostNetworkPrivateResponse429"));
    }

    public static postNetworkPrivateResponse429ToJson(value: PostNetworkPrivateResponse429): string {
        return JSON.stringify(uncast(value, r("PostNetworkPrivateResponse429")), null, 2);
    }

    public static toPostNetworkPrivateResponse500(json: string): PostNetworkPrivateResponse500 {
        return cast(JSON.parse(json), r("PostNetworkPrivateResponse500"));
    }

    public static postNetworkPrivateResponse500ToJson(value: PostNetworkPrivateResponse500): string {
        return JSON.stringify(uncast(value, r("PostNetworkPrivateResponse500")), null, 2);
    }

    public static toPostScimV2GroupsBody(json: string): PostScimV2GroupsBody {
        return cast(JSON.parse(json), r("PostScimV2GroupsBody"));
    }

    public static postScimV2GroupsBodyToJson(value: PostScimV2GroupsBody): string {
        return JSON.stringify(uncast(value, r("PostScimV2GroupsBody")), null, 2);
    }

    public static toPostScimV2GroupsResponse(json: string): PostScimV2GroupsResponse {
        return cast(JSON.parse(json), r("PostScimV2GroupsResponse"));
    }

    public static postScimV2GroupsResponseToJson(value: PostScimV2GroupsResponse): string {
        return JSON.stringify(uncast(value, r("PostScimV2GroupsResponse")), null, 2);
    }

    public static toPostScimV2GroupsResponse400(json: string): PostScimV2GroupsResponse400 {
        return cast(JSON.parse(json), r("PostScimV2GroupsResponse400"));
    }

    public static postScimV2GroupsResponse400ToJson(value: PostScimV2GroupsResponse400): string {
        return JSON.stringify(uncast(value, r("PostScimV2GroupsResponse400")), null, 2);
    }

    public static toPostScimV2GroupsResponse401(json: string): PostScimV2GroupsResponse401 {
        return cast(JSON.parse(json), r("PostScimV2GroupsResponse401"));
    }

    public static postScimV2GroupsResponse401ToJson(value: PostScimV2GroupsResponse401): string {
        return JSON.stringify(uncast(value, r("PostScimV2GroupsResponse401")), null, 2);
    }

    public static toPostScimV2GroupsResponse403(json: string): PostScimV2GroupsResponse403 {
        return cast(JSON.parse(json), r("PostScimV2GroupsResponse403"));
    }

    public static postScimV2GroupsResponse403ToJson(value: PostScimV2GroupsResponse403): string {
        return JSON.stringify(uncast(value, r("PostScimV2GroupsResponse403")), null, 2);
    }

    public static toPostScimV2GroupsResponse409(json: string): PostScimV2GroupsResponse409 {
        return cast(JSON.parse(json), r("PostScimV2GroupsResponse409"));
    }

    public static postScimV2GroupsResponse409ToJson(value: PostScimV2GroupsResponse409): string {
        return JSON.stringify(uncast(value, r("PostScimV2GroupsResponse409")), null, 2);
    }

    public static toPostScimV2GroupsResponse429(json: string): PostScimV2GroupsResponse429 {
        return cast(JSON.parse(json), r("PostScimV2GroupsResponse429"));
    }

    public static postScimV2GroupsResponse429ToJson(value: PostScimV2GroupsResponse429): string {
        return JSON.stringify(uncast(value, r("PostScimV2GroupsResponse429")), null, 2);
    }

    public static toPostScimV2GroupsResponse500(json: string): PostScimV2GroupsResponse500 {
        return cast(JSON.parse(json), r("PostScimV2GroupsResponse500"));
    }

    public static postScimV2GroupsResponse500ToJson(value: PostScimV2GroupsResponse500): string {
        return JSON.stringify(uncast(value, r("PostScimV2GroupsResponse500")), null, 2);
    }

    public static toPostScimV2UsersBody(json: string): PostScimV2UsersBody {
        return cast(JSON.parse(json), r("PostScimV2UsersBody"));
    }

    public static postScimV2UsersBodyToJson(value: PostScimV2UsersBody): string {
        return JSON.stringify(uncast(value, r("PostScimV2UsersBody")), null, 2);
    }

    public static toPostScimV2UsersResponse(json: string): PostScimV2UsersResponse {
        return cast(JSON.parse(json), r("PostScimV2UsersResponse"));
    }

    public static postScimV2UsersResponseToJson(value: PostScimV2UsersResponse): string {
        return JSON.stringify(uncast(value, r("PostScimV2UsersResponse")), null, 2);
    }

    public static toPostScimV2UsersResponse400(json: string): PostScimV2UsersResponse400 {
        return cast(JSON.parse(json), r("PostScimV2UsersResponse400"));
    }

    public static postScimV2UsersResponse400ToJson(value: PostScimV2UsersResponse400): string {
        return JSON.stringify(uncast(value, r("PostScimV2UsersResponse400")), null, 2);
    }

    public static toPostScimV2UsersResponse401(json: string): PostScimV2UsersResponse401 {
        return cast(JSON.parse(json), r("PostScimV2UsersResponse401"));
    }

    public static postScimV2UsersResponse401ToJson(value: PostScimV2UsersResponse401): string {
        return JSON.stringify(uncast(value, r("PostScimV2UsersResponse401")), null, 2);
    }

    public static toPostScimV2UsersResponse403(json: string): PostScimV2UsersResponse403 {
        return cast(JSON.parse(json), r("PostScimV2UsersResponse403"));
    }

    public static postScimV2UsersResponse403ToJson(value: PostScimV2UsersResponse403): string {
        return JSON.stringify(uncast(value, r("PostScimV2UsersResponse403")), null, 2);
    }

    public static toPostScimV2UsersResponse409(json: string): PostScimV2UsersResponse409 {
        return cast(JSON.parse(json), r("PostScimV2UsersResponse409"));
    }

    public static postScimV2UsersResponse409ToJson(value: PostScimV2UsersResponse409): string {
        return JSON.stringify(uncast(value, r("PostScimV2UsersResponse409")), null, 2);
    }

    public static toPostScimV2UsersResponse429(json: string): PostScimV2UsersResponse429 {
        return cast(JSON.parse(json), r("PostScimV2UsersResponse429"));
    }

    public static postScimV2UsersResponse429ToJson(value: PostScimV2UsersResponse429): string {
        return JSON.stringify(uncast(value, r("PostScimV2UsersResponse429")), null, 2);
    }

    public static toPostScimV2UsersResponse500(json: string): PostScimV2UsersResponse500 {
        return cast(JSON.parse(json), r("PostScimV2UsersResponse500"));
    }

    public static postScimV2UsersResponse500ToJson(value: PostScimV2UsersResponse500): string {
        return JSON.stringify(uncast(value, r("PostScimV2UsersResponse500")), null, 2);
    }

    public static toPostSecurityAPIValidationBody(json: string): PostSecurityAPIValidationBody {
        return cast(JSON.parse(json), r("PostSecurityAPIValidationBody"));
    }

    public static postSecurityAPIValidationBodyToJson(value: PostSecurityAPIValidationBody): string {
        return JSON.stringify(uncast(value, r("PostSecurityAPIValidationBody")), null, 2);
    }

    public static toPostSecurityAPIValidationResponse(json: string): PostSecurityAPIValidationResponse {
        return cast(JSON.parse(json), r("PostSecurityAPIValidationResponse"));
    }

    public static postSecurityAPIValidationResponseToJson(value: PostSecurityAPIValidationResponse): string {
        return JSON.stringify(uncast(value, r("PostSecurityAPIValidationResponse")), null, 2);
    }

    public static toPostSecurityAPIValidationResponse400(json: string): PostSecurityAPIValidationResponse400 {
        return cast(JSON.parse(json), r("PostSecurityAPIValidationResponse400"));
    }

    public static postSecurityAPIValidationResponse400ToJson(value: PostSecurityAPIValidationResponse400): string {
        return JSON.stringify(uncast(value, r("PostSecurityAPIValidationResponse400")), null, 2);
    }

    public static toPostSecurityAPIValidationResponse401(json: string): PostSecurityAPIValidationResponse401 {
        return cast(JSON.parse(json), r("PostSecurityAPIValidationResponse401"));
    }

    public static postSecurityAPIValidationResponse401ToJson(value: PostSecurityAPIValidationResponse401): string {
        return JSON.stringify(uncast(value, r("PostSecurityAPIValidationResponse401")), null, 2);
    }

    public static toPostSecurityAPIValidationResponse429(json: string): PostSecurityAPIValidationResponse429 {
        return cast(JSON.parse(json), r("PostSecurityAPIValidationResponse429"));
    }

    public static postSecurityAPIValidationResponse429ToJson(value: PostSecurityAPIValidationResponse429): string {
        return JSON.stringify(uncast(value, r("PostSecurityAPIValidationResponse429")), null, 2);
    }

    public static toPostSecurityAPIValidationResponse500(json: string): PostSecurityAPIValidationResponse500 {
        return cast(JSON.parse(json), r("PostSecurityAPIValidationResponse500"));
    }

    public static postSecurityAPIValidationResponse500ToJson(value: PostSecurityAPIValidationResponse500): string {
        return JSON.stringify(uncast(value, r("PostSecurityAPIValidationResponse500")), null, 2);
    }

    public static toPostWebhooksBody(json: string): PostWebhooksBody {
        return cast(JSON.parse(json), r("PostWebhooksBody"));
    }

    public static postWebhooksBodyToJson(value: PostWebhooksBody): string {
        return JSON.stringify(uncast(value, r("PostWebhooksBody")), null, 2);
    }

    public static toPostWebhooksResponse(json: string): PostWebhooksResponse {
        return cast(JSON.parse(json), r("PostWebhooksResponse"));
    }

    public static postWebhooksResponseToJson(value: PostWebhooksResponse): string {
        return JSON.stringify(uncast(value, r("PostWebhooksResponse")), null, 2);
    }

    public static toPostWebhooksResponse401(json: string): PostWebhooksResponse401 {
        return cast(JSON.parse(json), r("PostWebhooksResponse401"));
    }

    public static postWebhooksResponse401ToJson(value: PostWebhooksResponse401): string {
        return JSON.stringify(uncast(value, r("PostWebhooksResponse401")), null, 2);
    }

    public static toPostWebhooksResponse429(json: string): PostWebhooksResponse429 {
        return cast(JSON.parse(json), r("PostWebhooksResponse429"));
    }

    public static postWebhooksResponse429ToJson(value: PostWebhooksResponse429): string {
        return JSON.stringify(uncast(value, r("PostWebhooksResponse429")), null, 2);
    }

    public static toPostWebhooksResponse500(json: string): PostWebhooksResponse500 {
        return cast(JSON.parse(json), r("PostWebhooksResponse500"));
    }

    public static postWebhooksResponse500ToJson(value: PostWebhooksResponse500): string {
        return JSON.stringify(uncast(value, r("PostWebhooksResponse500")), null, 2);
    }

    public static toPostWorkspacesBody(json: string): PostWorkspacesBody {
        return cast(JSON.parse(json), r("PostWorkspacesBody"));
    }

    public static postWorkspacesBodyToJson(value: PostWorkspacesBody): string {
        return JSON.stringify(uncast(value, r("PostWorkspacesBody")), null, 2);
    }

    public static toPostWorkspacesResponse(json: string): PostWorkspacesResponse {
        return cast(JSON.parse(json), r("PostWorkspacesResponse"));
    }

    public static postWorkspacesResponseToJson(value: PostWorkspacesResponse): string {
        return JSON.stringify(uncast(value, r("PostWorkspacesResponse")), null, 2);
    }

    public static toPostWorkspacesResponse400(json: string): PostWorkspacesResponse400 {
        return cast(JSON.parse(json), r("PostWorkspacesResponse400"));
    }

    public static postWorkspacesResponse400ToJson(value: PostWorkspacesResponse400): string {
        return JSON.stringify(uncast(value, r("PostWorkspacesResponse400")), null, 2);
    }

    public static toPostWorkspacesResponse401(json: string): PostWorkspacesResponse401 {
        return cast(JSON.parse(json), r("PostWorkspacesResponse401"));
    }

    public static postWorkspacesResponse401ToJson(value: PostWorkspacesResponse401): string {
        return JSON.stringify(uncast(value, r("PostWorkspacesResponse401")), null, 2);
    }

    public static toPostWorkspacesResponse404(json: string): PostWorkspacesResponse404 {
        return cast(JSON.parse(json), r("PostWorkspacesResponse404"));
    }

    public static postWorkspacesResponse404ToJson(value: PostWorkspacesResponse404): string {
        return JSON.stringify(uncast(value, r("PostWorkspacesResponse404")), null, 2);
    }

    public static toPostWorkspacesResponse429(json: string): PostWorkspacesResponse429 {
        return cast(JSON.parse(json), r("PostWorkspacesResponse429"));
    }

    public static postWorkspacesResponse429ToJson(value: PostWorkspacesResponse429): string {
        return JSON.stringify(uncast(value, r("PostWorkspacesResponse429")), null, 2);
    }

    public static toPostWorkspacesResponse500(json: string): PostWorkspacesResponse500 {
        return cast(JSON.parse(json), r("PostWorkspacesResponse500"));
    }

    public static postWorkspacesResponse500ToJson(value: PostWorkspacesResponse500): string {
        return JSON.stringify(uncast(value, r("PostWorkspacesResponse500")), null, 2);
    }

    public static toPutApisAPIIDBody(json: string): PutApisAPIIDBody {
        return cast(JSON.parse(json), r("PutApisAPIIDBody"));
    }

    public static putApisAPIIDBodyToJson(value: PutApisAPIIDBody): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDBody")), null, 2);
    }

    public static toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse(json: string): PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse {
        return cast(JSON.parse(json), r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse"));
    }

    public static putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponseToJson(value: PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse")), null, 2);
    }

    public static toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400(json: string): PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400 {
        return cast(JSON.parse(json), r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400"));
    }

    public static putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400ToJson(value: PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400")), null, 2);
    }

    public static toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401(json: string): PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401 {
        return cast(JSON.parse(json), r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401"));
    }

    public static putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401ToJson(value: PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401")), null, 2);
    }

    public static toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403(json: string): PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403 {
        return cast(JSON.parse(json), r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403"));
    }

    public static putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403ToJson(value: PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403")), null, 2);
    }

    public static toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404(json: string): PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404 {
        return cast(JSON.parse(json), r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404"));
    }

    public static putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404ToJson(value: PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404")), null, 2);
    }

    public static toPutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422(json: string): PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422 {
        return cast(JSON.parse(json), r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422"));
    }

    public static putApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422ToJson(value: PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422")), null, 2);
    }

    public static toPutApisAPIIDResponse(json: string): PutApisAPIIDResponse {
        return cast(JSON.parse(json), r("PutApisAPIIDResponse"));
    }

    public static putApisAPIIDResponseToJson(value: PutApisAPIIDResponse): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDResponse")), null, 2);
    }

    public static toPutApisAPIIDResponse401(json: string): PutApisAPIIDResponse401 {
        return cast(JSON.parse(json), r("PutApisAPIIDResponse401"));
    }

    public static putApisAPIIDResponse401ToJson(value: PutApisAPIIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDResponse401")), null, 2);
    }

    public static toPutApisAPIIDResponse403(json: string): PutApisAPIIDResponse403 {
        return cast(JSON.parse(json), r("PutApisAPIIDResponse403"));
    }

    public static putApisAPIIDResponse403ToJson(value: PutApisAPIIDResponse403): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDResponse403")), null, 2);
    }

    public static toPutApisAPIIDResponse404(json: string): PutApisAPIIDResponse404 {
        return cast(JSON.parse(json), r("PutApisAPIIDResponse404"));
    }

    public static putApisAPIIDResponse404ToJson(value: PutApisAPIIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDResponse404")), null, 2);
    }

    public static toPutApisAPIIDResponse422(json: string): PutApisAPIIDResponse422 {
        return cast(JSON.parse(json), r("PutApisAPIIDResponse422"));
    }

    public static putApisAPIIDResponse422ToJson(value: PutApisAPIIDResponse422): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDResponse422")), null, 2);
    }

    public static toPutApisAPIIDResponse500(json: string): PutApisAPIIDResponse500 {
        return cast(JSON.parse(json), r("PutApisAPIIDResponse500"));
    }

    public static putApisAPIIDResponse500ToJson(value: PutApisAPIIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDResponse500")), null, 2);
    }

    public static toPutApisAPIIDSchemasSchemaIDFilesFilePathBody(json: string): PutApisAPIIDSchemasSchemaIDFilesFilePathBody {
        return cast(JSON.parse(json), r("PutApisAPIIDSchemasSchemaIDFilesFilePathBody"));
    }

    public static putApisAPIIDSchemasSchemaIDFilesFilePathBodyToJson(value: PutApisAPIIDSchemasSchemaIDFilesFilePathBody): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDSchemasSchemaIDFilesFilePathBody")), null, 2);
    }

    public static toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse(json: string): PutApisAPIIDSchemasSchemaIDFilesFilePathResponse {
        return cast(JSON.parse(json), r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse"));
    }

    public static putApisAPIIDSchemasSchemaIDFilesFilePathResponseToJson(value: PutApisAPIIDSchemasSchemaIDFilesFilePathResponse): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse")), null, 2);
    }

    public static toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse400(json: string): PutApisAPIIDSchemasSchemaIDFilesFilePathResponse400 {
        return cast(JSON.parse(json), r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse400"));
    }

    public static putApisAPIIDSchemasSchemaIDFilesFilePathResponse400ToJson(value: PutApisAPIIDSchemasSchemaIDFilesFilePathResponse400): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse400")), null, 2);
    }

    public static toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse401(json: string): PutApisAPIIDSchemasSchemaIDFilesFilePathResponse401 {
        return cast(JSON.parse(json), r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse401"));
    }

    public static putApisAPIIDSchemasSchemaIDFilesFilePathResponse401ToJson(value: PutApisAPIIDSchemasSchemaIDFilesFilePathResponse401): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse401")), null, 2);
    }

    public static toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse403(json: string): PutApisAPIIDSchemasSchemaIDFilesFilePathResponse403 {
        return cast(JSON.parse(json), r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse403"));
    }

    public static putApisAPIIDSchemasSchemaIDFilesFilePathResponse403ToJson(value: PutApisAPIIDSchemasSchemaIDFilesFilePathResponse403): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse403")), null, 2);
    }

    public static toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse404(json: string): PutApisAPIIDSchemasSchemaIDFilesFilePathResponse404 {
        return cast(JSON.parse(json), r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse404"));
    }

    public static putApisAPIIDSchemasSchemaIDFilesFilePathResponse404ToJson(value: PutApisAPIIDSchemasSchemaIDFilesFilePathResponse404): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse404")), null, 2);
    }

    public static toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse422(json: string): PutApisAPIIDSchemasSchemaIDFilesFilePathResponse422 {
        return cast(JSON.parse(json), r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse422"));
    }

    public static putApisAPIIDSchemasSchemaIDFilesFilePathResponse422ToJson(value: PutApisAPIIDSchemasSchemaIDFilesFilePathResponse422): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse422")), null, 2);
    }

    public static toPutApisAPIIDSchemasSchemaIDFilesFilePathResponse500(json: string): PutApisAPIIDSchemasSchemaIDFilesFilePathResponse500 {
        return cast(JSON.parse(json), r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse500"));
    }

    public static putApisAPIIDSchemasSchemaIDFilesFilePathResponse500ToJson(value: PutApisAPIIDSchemasSchemaIDFilesFilePathResponse500): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDSchemasSchemaIDFilesFilePathResponse500")), null, 2);
    }

    public static toPutApisAPIIDTagsBody(json: string): PutApisAPIIDTagsBody {
        return cast(JSON.parse(json), r("PutApisAPIIDTagsBody"));
    }

    public static putApisAPIIDTagsBodyToJson(value: PutApisAPIIDTagsBody): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDTagsBody")), null, 2);
    }

    public static toPutApisAPIIDTagsResponse(json: string): PutApisAPIIDTagsResponse {
        return cast(JSON.parse(json), r("PutApisAPIIDTagsResponse"));
    }

    public static putApisAPIIDTagsResponseToJson(value: PutApisAPIIDTagsResponse): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDTagsResponse")), null, 2);
    }

    public static toPutApisAPIIDTagsResponse400(json: string): PutApisAPIIDTagsResponse400 {
        return cast(JSON.parse(json), r("PutApisAPIIDTagsResponse400"));
    }

    public static putApisAPIIDTagsResponse400ToJson(value: PutApisAPIIDTagsResponse400): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDTagsResponse400")), null, 2);
    }

    public static toPutApisAPIIDTagsResponse401(json: string): PutApisAPIIDTagsResponse401 {
        return cast(JSON.parse(json), r("PutApisAPIIDTagsResponse401"));
    }

    public static putApisAPIIDTagsResponse401ToJson(value: PutApisAPIIDTagsResponse401): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDTagsResponse401")), null, 2);
    }

    public static toPutApisAPIIDTagsResponse403(json: string): PutApisAPIIDTagsResponse403 {
        return cast(JSON.parse(json), r("PutApisAPIIDTagsResponse403"));
    }

    public static putApisAPIIDTagsResponse403ToJson(value: PutApisAPIIDTagsResponse403): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDTagsResponse403")), null, 2);
    }

    public static toPutApisAPIIDTagsResponse500(json: string): PutApisAPIIDTagsResponse500 {
        return cast(JSON.parse(json), r("PutApisAPIIDTagsResponse500"));
    }

    public static putApisAPIIDTagsResponse500ToJson(value: PutApisAPIIDTagsResponse500): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDTagsResponse500")), null, 2);
    }

    public static toPutApisAPIIDVersionsVersionIDBody(json: string): PutApisAPIIDVersionsVersionIDBody {
        return cast(JSON.parse(json), r("PutApisAPIIDVersionsVersionIDBody"));
    }

    public static putApisAPIIDVersionsVersionIDBodyToJson(value: PutApisAPIIDVersionsVersionIDBody): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDVersionsVersionIDBody")), null, 2);
    }

    public static toPutApisAPIIDVersionsVersionIDResponse(json: string): PutApisAPIIDVersionsVersionIDResponse {
        return cast(JSON.parse(json), r("PutApisAPIIDVersionsVersionIDResponse"));
    }

    public static putApisAPIIDVersionsVersionIDResponseToJson(value: PutApisAPIIDVersionsVersionIDResponse): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDVersionsVersionIDResponse")), null, 2);
    }

    public static toPutApisAPIIDVersionsVersionIDResponse401(json: string): PutApisAPIIDVersionsVersionIDResponse401 {
        return cast(JSON.parse(json), r("PutApisAPIIDVersionsVersionIDResponse401"));
    }

    public static putApisAPIIDVersionsVersionIDResponse401ToJson(value: PutApisAPIIDVersionsVersionIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDVersionsVersionIDResponse401")), null, 2);
    }

    public static toPutApisAPIIDVersionsVersionIDResponse403(json: string): PutApisAPIIDVersionsVersionIDResponse403 {
        return cast(JSON.parse(json), r("PutApisAPIIDVersionsVersionIDResponse403"));
    }

    public static putApisAPIIDVersionsVersionIDResponse403ToJson(value: PutApisAPIIDVersionsVersionIDResponse403): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDVersionsVersionIDResponse403")), null, 2);
    }

    public static toPutApisAPIIDVersionsVersionIDResponse404(json: string): PutApisAPIIDVersionsVersionIDResponse404 {
        return cast(JSON.parse(json), r("PutApisAPIIDVersionsVersionIDResponse404"));
    }

    public static putApisAPIIDVersionsVersionIDResponse404ToJson(value: PutApisAPIIDVersionsVersionIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDVersionsVersionIDResponse404")), null, 2);
    }

    public static toPutApisAPIIDVersionsVersionIDResponse500(json: string): PutApisAPIIDVersionsVersionIDResponse500 {
        return cast(JSON.parse(json), r("PutApisAPIIDVersionsVersionIDResponse500"));
    }

    public static putApisAPIIDVersionsVersionIDResponse500ToJson(value: PutApisAPIIDVersionsVersionIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutApisAPIIDVersionsVersionIDResponse500")), null, 2);
    }

    public static toPutCollectionsCollectionIDBody(json: string): PutCollectionsCollectionIDBody {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDBody"));
    }

    public static putCollectionsCollectionIDBodyToJson(value: PutCollectionsCollectionIDBody): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDBody")), null, 2);
    }

    public static toPutCollectionsCollectionIDFoldersFolderIDBody(json: string): PutCollectionsCollectionIDFoldersFolderIDBody {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDFoldersFolderIDBody"));
    }

    public static putCollectionsCollectionIDFoldersFolderIDBodyToJson(value: PutCollectionsCollectionIDFoldersFolderIDBody): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDFoldersFolderIDBody")), null, 2);
    }

    public static toPutCollectionsCollectionIDFoldersFolderIDResponse(json: string): PutCollectionsCollectionIDFoldersFolderIDResponse {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDFoldersFolderIDResponse"));
    }

    public static putCollectionsCollectionIDFoldersFolderIDResponseToJson(value: PutCollectionsCollectionIDFoldersFolderIDResponse): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDFoldersFolderIDResponse")), null, 2);
    }

    public static toPutCollectionsCollectionIDFoldersFolderIDResponse400(json: string): PutCollectionsCollectionIDFoldersFolderIDResponse400 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDFoldersFolderIDResponse400"));
    }

    public static putCollectionsCollectionIDFoldersFolderIDResponse400ToJson(value: PutCollectionsCollectionIDFoldersFolderIDResponse400): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDFoldersFolderIDResponse400")), null, 2);
    }

    public static toPutCollectionsCollectionIDFoldersFolderIDResponse401(json: string): PutCollectionsCollectionIDFoldersFolderIDResponse401 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDFoldersFolderIDResponse401"));
    }

    public static putCollectionsCollectionIDFoldersFolderIDResponse401ToJson(value: PutCollectionsCollectionIDFoldersFolderIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDFoldersFolderIDResponse401")), null, 2);
    }

    public static toPutCollectionsCollectionIDFoldersFolderIDResponse404(json: string): PutCollectionsCollectionIDFoldersFolderIDResponse404 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDFoldersFolderIDResponse404"));
    }

    public static putCollectionsCollectionIDFoldersFolderIDResponse404ToJson(value: PutCollectionsCollectionIDFoldersFolderIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDFoldersFolderIDResponse404")), null, 2);
    }

    public static toPutCollectionsCollectionIDFoldersFolderIDResponse500(json: string): PutCollectionsCollectionIDFoldersFolderIDResponse500 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDFoldersFolderIDResponse500"));
    }

    public static putCollectionsCollectionIDFoldersFolderIDResponse500ToJson(value: PutCollectionsCollectionIDFoldersFolderIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDFoldersFolderIDResponse500")), null, 2);
    }

    public static toPutCollectionsCollectionIDRequestsRequestIDBody(json: string): PutCollectionsCollectionIDRequestsRequestIDBody {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDRequestsRequestIDBody"));
    }

    public static putCollectionsCollectionIDRequestsRequestIDBodyToJson(value: PutCollectionsCollectionIDRequestsRequestIDBody): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDRequestsRequestIDBody")), null, 2);
    }

    public static toPutCollectionsCollectionIDRequestsRequestIDResponse(json: string): PutCollectionsCollectionIDRequestsRequestIDResponse {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDRequestsRequestIDResponse"));
    }

    public static putCollectionsCollectionIDRequestsRequestIDResponseToJson(value: PutCollectionsCollectionIDRequestsRequestIDResponse): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDRequestsRequestIDResponse")), null, 2);
    }

    public static toPutCollectionsCollectionIDRequestsRequestIDResponse400(json: string): PutCollectionsCollectionIDRequestsRequestIDResponse400 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDRequestsRequestIDResponse400"));
    }

    public static putCollectionsCollectionIDRequestsRequestIDResponse400ToJson(value: PutCollectionsCollectionIDRequestsRequestIDResponse400): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDRequestsRequestIDResponse400")), null, 2);
    }

    public static toPutCollectionsCollectionIDRequestsRequestIDResponse401(json: string): PutCollectionsCollectionIDRequestsRequestIDResponse401 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDRequestsRequestIDResponse401"));
    }

    public static putCollectionsCollectionIDRequestsRequestIDResponse401ToJson(value: PutCollectionsCollectionIDRequestsRequestIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDRequestsRequestIDResponse401")), null, 2);
    }

    public static toPutCollectionsCollectionIDRequestsRequestIDResponse404(json: string): PutCollectionsCollectionIDRequestsRequestIDResponse404 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDRequestsRequestIDResponse404"));
    }

    public static putCollectionsCollectionIDRequestsRequestIDResponse404ToJson(value: PutCollectionsCollectionIDRequestsRequestIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDRequestsRequestIDResponse404")), null, 2);
    }

    public static toPutCollectionsCollectionIDRequestsRequestIDResponse500(json: string): PutCollectionsCollectionIDRequestsRequestIDResponse500 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDRequestsRequestIDResponse500"));
    }

    public static putCollectionsCollectionIDRequestsRequestIDResponse500ToJson(value: PutCollectionsCollectionIDRequestsRequestIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDRequestsRequestIDResponse500")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponse(json: string): PutCollectionsCollectionIDResponse {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponse"));
    }

    public static putCollectionsCollectionIDResponseToJson(value: PutCollectionsCollectionIDResponse): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponse")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponse400(json: string): PutCollectionsCollectionIDResponse400 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponse400"));
    }

    public static putCollectionsCollectionIDResponse400ToJson(value: PutCollectionsCollectionIDResponse400): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponse400")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponse401(json: string): PutCollectionsCollectionIDResponse401 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponse401"));
    }

    public static putCollectionsCollectionIDResponse401ToJson(value: PutCollectionsCollectionIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponse401")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponse403(json: string): PutCollectionsCollectionIDResponse403 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponse403"));
    }

    public static putCollectionsCollectionIDResponse403ToJson(value: PutCollectionsCollectionIDResponse403): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponse403")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponse404(json: string): PutCollectionsCollectionIDResponse404 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponse404"));
    }

    public static putCollectionsCollectionIDResponse404ToJson(value: PutCollectionsCollectionIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponse404")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponse429(json: string): PutCollectionsCollectionIDResponse429 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponse429"));
    }

    public static putCollectionsCollectionIDResponse429ToJson(value: PutCollectionsCollectionIDResponse429): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponse429")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponse500(json: string): PutCollectionsCollectionIDResponse500 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponse500"));
    }

    public static putCollectionsCollectionIDResponse500ToJson(value: PutCollectionsCollectionIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponse500")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponsesResponseIDBody(json: string): PutCollectionsCollectionIDResponsesResponseIDBody {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponsesResponseIDBody"));
    }

    public static putCollectionsCollectionIDResponsesResponseIDBodyToJson(value: PutCollectionsCollectionIDResponsesResponseIDBody): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponsesResponseIDBody")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponsesResponseIDResponse(json: string): PutCollectionsCollectionIDResponsesResponseIDResponse {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponsesResponseIDResponse"));
    }

    public static putCollectionsCollectionIDResponsesResponseIDResponseToJson(value: PutCollectionsCollectionIDResponsesResponseIDResponse): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponsesResponseIDResponse")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponsesResponseIDResponse400(json: string): PutCollectionsCollectionIDResponsesResponseIDResponse400 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponsesResponseIDResponse400"));
    }

    public static putCollectionsCollectionIDResponsesResponseIDResponse400ToJson(value: PutCollectionsCollectionIDResponsesResponseIDResponse400): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponsesResponseIDResponse400")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponsesResponseIDResponse401(json: string): PutCollectionsCollectionIDResponsesResponseIDResponse401 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponsesResponseIDResponse401"));
    }

    public static putCollectionsCollectionIDResponsesResponseIDResponse401ToJson(value: PutCollectionsCollectionIDResponsesResponseIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponsesResponseIDResponse401")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponsesResponseIDResponse404(json: string): PutCollectionsCollectionIDResponsesResponseIDResponse404 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponsesResponseIDResponse404"));
    }

    public static putCollectionsCollectionIDResponsesResponseIDResponse404ToJson(value: PutCollectionsCollectionIDResponsesResponseIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponsesResponseIDResponse404")), null, 2);
    }

    public static toPutCollectionsCollectionIDResponsesResponseIDResponse500(json: string): PutCollectionsCollectionIDResponsesResponseIDResponse500 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDResponsesResponseIDResponse500"));
    }

    public static putCollectionsCollectionIDResponsesResponseIDResponse500ToJson(value: PutCollectionsCollectionIDResponsesResponseIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDResponsesResponseIDResponse500")), null, 2);
    }

    public static toPutCollectionsCollectionIDTagsBody(json: string): PutCollectionsCollectionIDTagsBody {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDTagsBody"));
    }

    public static putCollectionsCollectionIDTagsBodyToJson(value: PutCollectionsCollectionIDTagsBody): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDTagsBody")), null, 2);
    }

    public static toPutCollectionsCollectionIDTagsResponse(json: string): PutCollectionsCollectionIDTagsResponse {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDTagsResponse"));
    }

    public static putCollectionsCollectionIDTagsResponseToJson(value: PutCollectionsCollectionIDTagsResponse): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDTagsResponse")), null, 2);
    }

    public static toPutCollectionsCollectionIDTagsResponse400(json: string): PutCollectionsCollectionIDTagsResponse400 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDTagsResponse400"));
    }

    public static putCollectionsCollectionIDTagsResponse400ToJson(value: PutCollectionsCollectionIDTagsResponse400): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDTagsResponse400")), null, 2);
    }

    public static toPutCollectionsCollectionIDTagsResponse401(json: string): PutCollectionsCollectionIDTagsResponse401 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDTagsResponse401"));
    }

    public static putCollectionsCollectionIDTagsResponse401ToJson(value: PutCollectionsCollectionIDTagsResponse401): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDTagsResponse401")), null, 2);
    }

    public static toPutCollectionsCollectionIDTagsResponse403(json: string): PutCollectionsCollectionIDTagsResponse403 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDTagsResponse403"));
    }

    public static putCollectionsCollectionIDTagsResponse403ToJson(value: PutCollectionsCollectionIDTagsResponse403): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDTagsResponse403")), null, 2);
    }

    public static toPutCollectionsCollectionIDTagsResponse404(json: string): PutCollectionsCollectionIDTagsResponse404 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDTagsResponse404"));
    }

    public static putCollectionsCollectionIDTagsResponse404ToJson(value: PutCollectionsCollectionIDTagsResponse404): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDTagsResponse404")), null, 2);
    }

    public static toPutCollectionsCollectionIDTagsResponse500(json: string): PutCollectionsCollectionIDTagsResponse500 {
        return cast(JSON.parse(json), r("PutCollectionsCollectionIDTagsResponse500"));
    }

    public static putCollectionsCollectionIDTagsResponse500ToJson(value: PutCollectionsCollectionIDTagsResponse500): string {
        return JSON.stringify(uncast(value, r("PutCollectionsCollectionIDTagsResponse500")), null, 2);
    }

    public static toPutDetectedSecretsSecretIDBody(json: string): PutDetectedSecretsSecretIDBody {
        return cast(JSON.parse(json), r("PutDetectedSecretsSecretIDBody"));
    }

    public static putDetectedSecretsSecretIDBodyToJson(value: PutDetectedSecretsSecretIDBody): string {
        return JSON.stringify(uncast(value, r("PutDetectedSecretsSecretIDBody")), null, 2);
    }

    public static toPutDetectedSecretsSecretIDResponse(json: string): PutDetectedSecretsSecretIDResponse {
        return cast(JSON.parse(json), r("PutDetectedSecretsSecretIDResponse"));
    }

    public static putDetectedSecretsSecretIDResponseToJson(value: PutDetectedSecretsSecretIDResponse): string {
        return JSON.stringify(uncast(value, r("PutDetectedSecretsSecretIDResponse")), null, 2);
    }

    public static toPutDetectedSecretsSecretIDResponse401(json: string): PutDetectedSecretsSecretIDResponse401 {
        return cast(JSON.parse(json), r("PutDetectedSecretsSecretIDResponse401"));
    }

    public static putDetectedSecretsSecretIDResponse401ToJson(value: PutDetectedSecretsSecretIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutDetectedSecretsSecretIDResponse401")), null, 2);
    }

    public static toPutDetectedSecretsSecretIDResponse403(json: string): PutDetectedSecretsSecretIDResponse403 {
        return cast(JSON.parse(json), r("PutDetectedSecretsSecretIDResponse403"));
    }

    public static putDetectedSecretsSecretIDResponse403ToJson(value: PutDetectedSecretsSecretIDResponse403): string {
        return JSON.stringify(uncast(value, r("PutDetectedSecretsSecretIDResponse403")), null, 2);
    }

    public static toPutDetectedSecretsSecretIDResponse500(json: string): PutDetectedSecretsSecretIDResponse500 {
        return cast(JSON.parse(json), r("PutDetectedSecretsSecretIDResponse500"));
    }

    public static putDetectedSecretsSecretIDResponse500ToJson(value: PutDetectedSecretsSecretIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutDetectedSecretsSecretIDResponse500")), null, 2);
    }

    public static toPutEnvironmentsEnvironmentIDBody(json: string): PutEnvironmentsEnvironmentIDBody {
        return cast(JSON.parse(json), r("PutEnvironmentsEnvironmentIDBody"));
    }

    public static putEnvironmentsEnvironmentIDBodyToJson(value: PutEnvironmentsEnvironmentIDBody): string {
        return JSON.stringify(uncast(value, r("PutEnvironmentsEnvironmentIDBody")), null, 2);
    }

    public static toPutEnvironmentsEnvironmentIDResponse(json: string): PutEnvironmentsEnvironmentIDResponse {
        return cast(JSON.parse(json), r("PutEnvironmentsEnvironmentIDResponse"));
    }

    public static putEnvironmentsEnvironmentIDResponseToJson(value: PutEnvironmentsEnvironmentIDResponse): string {
        return JSON.stringify(uncast(value, r("PutEnvironmentsEnvironmentIDResponse")), null, 2);
    }

    public static toPutEnvironmentsEnvironmentIDResponse400(json: string): PutEnvironmentsEnvironmentIDResponse400 {
        return cast(JSON.parse(json), r("PutEnvironmentsEnvironmentIDResponse400"));
    }

    public static putEnvironmentsEnvironmentIDResponse400ToJson(value: PutEnvironmentsEnvironmentIDResponse400): string {
        return JSON.stringify(uncast(value, r("PutEnvironmentsEnvironmentIDResponse400")), null, 2);
    }

    public static toPutEnvironmentsEnvironmentIDResponse401(json: string): PutEnvironmentsEnvironmentIDResponse401 {
        return cast(JSON.parse(json), r("PutEnvironmentsEnvironmentIDResponse401"));
    }

    public static putEnvironmentsEnvironmentIDResponse401ToJson(value: PutEnvironmentsEnvironmentIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutEnvironmentsEnvironmentIDResponse401")), null, 2);
    }

    public static toPutEnvironmentsEnvironmentIDResponse429(json: string): PutEnvironmentsEnvironmentIDResponse429 {
        return cast(JSON.parse(json), r("PutEnvironmentsEnvironmentIDResponse429"));
    }

    public static putEnvironmentsEnvironmentIDResponse429ToJson(value: PutEnvironmentsEnvironmentIDResponse429): string {
        return JSON.stringify(uncast(value, r("PutEnvironmentsEnvironmentIDResponse429")), null, 2);
    }

    public static toPutEnvironmentsEnvironmentIDResponse500(json: string): PutEnvironmentsEnvironmentIDResponse500 {
        return cast(JSON.parse(json), r("PutEnvironmentsEnvironmentIDResponse500"));
    }

    public static putEnvironmentsEnvironmentIDResponse500ToJson(value: PutEnvironmentsEnvironmentIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutEnvironmentsEnvironmentIDResponse500")), null, 2);
    }

    public static toPutMocksMockIDBody(json: string): PutMocksMockIDBody {
        return cast(JSON.parse(json), r("PutMocksMockIDBody"));
    }

    public static putMocksMockIDBodyToJson(value: PutMocksMockIDBody): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDBody")), null, 2);
    }

    public static toPutMocksMockIDResponse(json: string): PutMocksMockIDResponse {
        return cast(JSON.parse(json), r("PutMocksMockIDResponse"));
    }

    public static putMocksMockIDResponseToJson(value: PutMocksMockIDResponse): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDResponse")), null, 2);
    }

    public static toPutMocksMockIDResponse401(json: string): PutMocksMockIDResponse401 {
        return cast(JSON.parse(json), r("PutMocksMockIDResponse401"));
    }

    public static putMocksMockIDResponse401ToJson(value: PutMocksMockIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDResponse401")), null, 2);
    }

    public static toPutMocksMockIDResponse404(json: string): PutMocksMockIDResponse404 {
        return cast(JSON.parse(json), r("PutMocksMockIDResponse404"));
    }

    public static putMocksMockIDResponse404ToJson(value: PutMocksMockIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDResponse404")), null, 2);
    }

    public static toPutMocksMockIDResponse429(json: string): PutMocksMockIDResponse429 {
        return cast(JSON.parse(json), r("PutMocksMockIDResponse429"));
    }

    public static putMocksMockIDResponse429ToJson(value: PutMocksMockIDResponse429): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDResponse429")), null, 2);
    }

    public static toPutMocksMockIDResponse500(json: string): PutMocksMockIDResponse500 {
        return cast(JSON.parse(json), r("PutMocksMockIDResponse500"));
    }

    public static putMocksMockIDResponse500ToJson(value: PutMocksMockIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDResponse500")), null, 2);
    }

    public static toPutMocksMockIDServerResponsesServerResponseIDBody(json: string): PutMocksMockIDServerResponsesServerResponseIDBody {
        return cast(JSON.parse(json), r("PutMocksMockIDServerResponsesServerResponseIDBody"));
    }

    public static putMocksMockIDServerResponsesServerResponseIDBodyToJson(value: PutMocksMockIDServerResponsesServerResponseIDBody): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDServerResponsesServerResponseIDBody")), null, 2);
    }

    public static toPutMocksMockIDServerResponsesServerResponseIDResponse400(json: string): PutMocksMockIDServerResponsesServerResponseIDResponse400 {
        return cast(JSON.parse(json), r("PutMocksMockIDServerResponsesServerResponseIDResponse400"));
    }

    public static putMocksMockIDServerResponsesServerResponseIDResponse400ToJson(value: PutMocksMockIDServerResponsesServerResponseIDResponse400): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDServerResponsesServerResponseIDResponse400")), null, 2);
    }

    public static toPutMocksMockIDServerResponsesServerResponseIDResponse401(json: string): PutMocksMockIDServerResponsesServerResponseIDResponse401 {
        return cast(JSON.parse(json), r("PutMocksMockIDServerResponsesServerResponseIDResponse401"));
    }

    public static putMocksMockIDServerResponsesServerResponseIDResponse401ToJson(value: PutMocksMockIDServerResponsesServerResponseIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDServerResponsesServerResponseIDResponse401")), null, 2);
    }

    public static toPutMocksMockIDServerResponsesServerResponseIDResponse429(json: string): PutMocksMockIDServerResponsesServerResponseIDResponse429 {
        return cast(JSON.parse(json), r("PutMocksMockIDServerResponsesServerResponseIDResponse429"));
    }

    public static putMocksMockIDServerResponsesServerResponseIDResponse429ToJson(value: PutMocksMockIDServerResponsesServerResponseIDResponse429): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDServerResponsesServerResponseIDResponse429")), null, 2);
    }

    public static toPutMocksMockIDServerResponsesServerResponseIDResponse500(json: string): PutMocksMockIDServerResponsesServerResponseIDResponse500 {
        return cast(JSON.parse(json), r("PutMocksMockIDServerResponsesServerResponseIDResponse500"));
    }

    public static putMocksMockIDServerResponsesServerResponseIDResponse500ToJson(value: PutMocksMockIDServerResponsesServerResponseIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDServerResponsesServerResponseIDResponse500")), null, 2);
    }

    public static toPutMocksMockIDServerResponsesServerResponseIDResponseItem(json: string): PutMocksMockIDServerResponsesServerResponseIDResponseItem {
        return cast(JSON.parse(json), r("PutMocksMockIDServerResponsesServerResponseIDResponseItem"));
    }

    public static putMocksMockIDServerResponsesServerResponseIDResponseItemToJson(value: PutMocksMockIDServerResponsesServerResponseIDResponseItem): string {
        return JSON.stringify(uncast(value, r("PutMocksMockIDServerResponsesServerResponseIDResponseItem")), null, 2);
    }

    public static toPutMonitorsMonitorIDBody(json: string): PutMonitorsMonitorIDBody {
        return cast(JSON.parse(json), r("PutMonitorsMonitorIDBody"));
    }

    public static putMonitorsMonitorIDBodyToJson(value: PutMonitorsMonitorIDBody): string {
        return JSON.stringify(uncast(value, r("PutMonitorsMonitorIDBody")), null, 2);
    }

    public static toPutMonitorsMonitorIDResponse(json: string): PutMonitorsMonitorIDResponse {
        return cast(JSON.parse(json), r("PutMonitorsMonitorIDResponse"));
    }

    public static putMonitorsMonitorIDResponseToJson(value: PutMonitorsMonitorIDResponse): string {
        return JSON.stringify(uncast(value, r("PutMonitorsMonitorIDResponse")), null, 2);
    }

    public static toPutMonitorsMonitorIDResponse401(json: string): PutMonitorsMonitorIDResponse401 {
        return cast(JSON.parse(json), r("PutMonitorsMonitorIDResponse401"));
    }

    public static putMonitorsMonitorIDResponse401ToJson(value: PutMonitorsMonitorIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutMonitorsMonitorIDResponse401")), null, 2);
    }

    public static toPutMonitorsMonitorIDResponse404(json: string): PutMonitorsMonitorIDResponse404 {
        return cast(JSON.parse(json), r("PutMonitorsMonitorIDResponse404"));
    }

    public static putMonitorsMonitorIDResponse404ToJson(value: PutMonitorsMonitorIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutMonitorsMonitorIDResponse404")), null, 2);
    }

    public static toPutMonitorsMonitorIDResponse429(json: string): PutMonitorsMonitorIDResponse429 {
        return cast(JSON.parse(json), r("PutMonitorsMonitorIDResponse429"));
    }

    public static putMonitorsMonitorIDResponse429ToJson(value: PutMonitorsMonitorIDResponse429): string {
        return JSON.stringify(uncast(value, r("PutMonitorsMonitorIDResponse429")), null, 2);
    }

    public static toPutMonitorsMonitorIDResponse500(json: string): PutMonitorsMonitorIDResponse500 {
        return cast(JSON.parse(json), r("PutMonitorsMonitorIDResponse500"));
    }

    public static putMonitorsMonitorIDResponse500ToJson(value: PutMonitorsMonitorIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutMonitorsMonitorIDResponse500")), null, 2);
    }

    public static toPutNetworkPrivateElementTypeElementIDResponse401(json: string): PutNetworkPrivateElementTypeElementIDResponse401 {
        return cast(JSON.parse(json), r("PutNetworkPrivateElementTypeElementIDResponse401"));
    }

    public static putNetworkPrivateElementTypeElementIDResponse401ToJson(value: PutNetworkPrivateElementTypeElementIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateElementTypeElementIDResponse401")), null, 2);
    }

    public static toPutNetworkPrivateElementTypeElementIDResponse403(json: string): PutNetworkPrivateElementTypeElementIDResponse403 {
        return cast(JSON.parse(json), r("PutNetworkPrivateElementTypeElementIDResponse403"));
    }

    public static putNetworkPrivateElementTypeElementIDResponse403ToJson(value: PutNetworkPrivateElementTypeElementIDResponse403): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateElementTypeElementIDResponse403")), null, 2);
    }

    public static toPutNetworkPrivateElementTypeElementIDResponse404(json: string): PutNetworkPrivateElementTypeElementIDResponse404 {
        return cast(JSON.parse(json), r("PutNetworkPrivateElementTypeElementIDResponse404"));
    }

    public static putNetworkPrivateElementTypeElementIDResponse404ToJson(value: PutNetworkPrivateElementTypeElementIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateElementTypeElementIDResponse404")), null, 2);
    }

    public static toPutNetworkPrivateElementTypeElementIDResponse429(json: string): PutNetworkPrivateElementTypeElementIDResponse429 {
        return cast(JSON.parse(json), r("PutNetworkPrivateElementTypeElementIDResponse429"));
    }

    public static putNetworkPrivateElementTypeElementIDResponse429ToJson(value: PutNetworkPrivateElementTypeElementIDResponse429): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateElementTypeElementIDResponse429")), null, 2);
    }

    public static toPutNetworkPrivateElementTypeElementIDResponse500(json: string): PutNetworkPrivateElementTypeElementIDResponse500 {
        return cast(JSON.parse(json), r("PutNetworkPrivateElementTypeElementIDResponse500"));
    }

    public static putNetworkPrivateElementTypeElementIDResponse500ToJson(value: PutNetworkPrivateElementTypeElementIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateElementTypeElementIDResponse500")), null, 2);
    }

    public static toPutNetworkPrivateNetworkEntityRequestRequestIDBody(json: string): PutNetworkPrivateNetworkEntityRequestRequestIDBody {
        return cast(JSON.parse(json), r("PutNetworkPrivateNetworkEntityRequestRequestIDBody"));
    }

    public static putNetworkPrivateNetworkEntityRequestRequestIDBodyToJson(value: PutNetworkPrivateNetworkEntityRequestRequestIDBody): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateNetworkEntityRequestRequestIDBody")), null, 2);
    }

    public static toPutNetworkPrivateNetworkEntityRequestRequestIDResponse(json: string): PutNetworkPrivateNetworkEntityRequestRequestIDResponse {
        return cast(JSON.parse(json), r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse"));
    }

    public static putNetworkPrivateNetworkEntityRequestRequestIDResponseToJson(value: PutNetworkPrivateNetworkEntityRequestRequestIDResponse): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse")), null, 2);
    }

    public static toPutNetworkPrivateNetworkEntityRequestRequestIDResponse400(json: string): PutNetworkPrivateNetworkEntityRequestRequestIDResponse400 {
        return cast(JSON.parse(json), r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse400"));
    }

    public static putNetworkPrivateNetworkEntityRequestRequestIDResponse400ToJson(value: PutNetworkPrivateNetworkEntityRequestRequestIDResponse400): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse400")), null, 2);
    }

    public static toPutNetworkPrivateNetworkEntityRequestRequestIDResponse401(json: string): PutNetworkPrivateNetworkEntityRequestRequestIDResponse401 {
        return cast(JSON.parse(json), r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse401"));
    }

    public static putNetworkPrivateNetworkEntityRequestRequestIDResponse401ToJson(value: PutNetworkPrivateNetworkEntityRequestRequestIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse401")), null, 2);
    }

    public static toPutNetworkPrivateNetworkEntityRequestRequestIDResponse403(json: string): PutNetworkPrivateNetworkEntityRequestRequestIDResponse403 {
        return cast(JSON.parse(json), r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse403"));
    }

    public static putNetworkPrivateNetworkEntityRequestRequestIDResponse403ToJson(value: PutNetworkPrivateNetworkEntityRequestRequestIDResponse403): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse403")), null, 2);
    }

    public static toPutNetworkPrivateNetworkEntityRequestRequestIDResponse429(json: string): PutNetworkPrivateNetworkEntityRequestRequestIDResponse429 {
        return cast(JSON.parse(json), r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse429"));
    }

    public static putNetworkPrivateNetworkEntityRequestRequestIDResponse429ToJson(value: PutNetworkPrivateNetworkEntityRequestRequestIDResponse429): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse429")), null, 2);
    }

    public static toPutNetworkPrivateNetworkEntityRequestRequestIDResponse500(json: string): PutNetworkPrivateNetworkEntityRequestRequestIDResponse500 {
        return cast(JSON.parse(json), r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse500"));
    }

    public static putNetworkPrivateNetworkEntityRequestRequestIDResponse500ToJson(value: PutNetworkPrivateNetworkEntityRequestRequestIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse500")), null, 2);
    }

    public static toPutScimV2UsersUserIDBody(json: string): PutScimV2UsersUserIDBody {
        return cast(JSON.parse(json), r("PutScimV2UsersUserIDBody"));
    }

    public static putScimV2UsersUserIDBodyToJson(value: PutScimV2UsersUserIDBody): string {
        return JSON.stringify(uncast(value, r("PutScimV2UsersUserIDBody")), null, 2);
    }

    public static toPutScimV2UsersUserIDResponse(json: string): PutScimV2UsersUserIDResponse {
        return cast(JSON.parse(json), r("PutScimV2UsersUserIDResponse"));
    }

    public static putScimV2UsersUserIDResponseToJson(value: PutScimV2UsersUserIDResponse): string {
        return JSON.stringify(uncast(value, r("PutScimV2UsersUserIDResponse")), null, 2);
    }

    public static toPutScimV2UsersUserIDResponse400(json: string): PutScimV2UsersUserIDResponse400 {
        return cast(JSON.parse(json), r("PutScimV2UsersUserIDResponse400"));
    }

    public static putScimV2UsersUserIDResponse400ToJson(value: PutScimV2UsersUserIDResponse400): string {
        return JSON.stringify(uncast(value, r("PutScimV2UsersUserIDResponse400")), null, 2);
    }

    public static toPutScimV2UsersUserIDResponse401(json: string): PutScimV2UsersUserIDResponse401 {
        return cast(JSON.parse(json), r("PutScimV2UsersUserIDResponse401"));
    }

    public static putScimV2UsersUserIDResponse401ToJson(value: PutScimV2UsersUserIDResponse401): string {
        return JSON.stringify(uncast(value, r("PutScimV2UsersUserIDResponse401")), null, 2);
    }

    public static toPutScimV2UsersUserIDResponse403(json: string): PutScimV2UsersUserIDResponse403 {
        return cast(JSON.parse(json), r("PutScimV2UsersUserIDResponse403"));
    }

    public static putScimV2UsersUserIDResponse403ToJson(value: PutScimV2UsersUserIDResponse403): string {
        return JSON.stringify(uncast(value, r("PutScimV2UsersUserIDResponse403")), null, 2);
    }

    public static toPutScimV2UsersUserIDResponse404(json: string): PutScimV2UsersUserIDResponse404 {
        return cast(JSON.parse(json), r("PutScimV2UsersUserIDResponse404"));
    }

    public static putScimV2UsersUserIDResponse404ToJson(value: PutScimV2UsersUserIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutScimV2UsersUserIDResponse404")), null, 2);
    }

    public static toPutScimV2UsersUserIDResponse429(json: string): PutScimV2UsersUserIDResponse429 {
        return cast(JSON.parse(json), r("PutScimV2UsersUserIDResponse429"));
    }

    public static putScimV2UsersUserIDResponse429ToJson(value: PutScimV2UsersUserIDResponse429): string {
        return JSON.stringify(uncast(value, r("PutScimV2UsersUserIDResponse429")), null, 2);
    }

    public static toPutScimV2UsersUserIDResponse500(json: string): PutScimV2UsersUserIDResponse500 {
        return cast(JSON.parse(json), r("PutScimV2UsersUserIDResponse500"));
    }

    public static putScimV2UsersUserIDResponse500ToJson(value: PutScimV2UsersUserIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutScimV2UsersUserIDResponse500")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDBody(json: string): PutWorkspacesWorkspaceIDBody {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDBody"));
    }

    public static putWorkspacesWorkspaceIDBodyToJson(value: PutWorkspacesWorkspaceIDBody): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDBody")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDGlobalVariablesBody(json: string): PutWorkspacesWorkspaceIDGlobalVariablesBody {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDGlobalVariablesBody"));
    }

    public static putWorkspacesWorkspaceIDGlobalVariablesBodyToJson(value: PutWorkspacesWorkspaceIDGlobalVariablesBody): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDGlobalVariablesBody")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDGlobalVariablesResponse(json: string): PutWorkspacesWorkspaceIDGlobalVariablesResponse {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDGlobalVariablesResponse"));
    }

    public static putWorkspacesWorkspaceIDGlobalVariablesResponseToJson(value: PutWorkspacesWorkspaceIDGlobalVariablesResponse): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDGlobalVariablesResponse")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDGlobalVariablesResponse500(json: string): PutWorkspacesWorkspaceIDGlobalVariablesResponse500 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDGlobalVariablesResponse500"));
    }

    public static putWorkspacesWorkspaceIDGlobalVariablesResponse500ToJson(value: PutWorkspacesWorkspaceIDGlobalVariablesResponse500): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDGlobalVariablesResponse500")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDResponse(json: string): PutWorkspacesWorkspaceIDResponse {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDResponse"));
    }

    public static putWorkspacesWorkspaceIDResponseToJson(value: PutWorkspacesWorkspaceIDResponse): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDResponse")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDResponse400(json: string): PutWorkspacesWorkspaceIDResponse400 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDResponse400"));
    }

    public static putWorkspacesWorkspaceIDResponse400ToJson(value: PutWorkspacesWorkspaceIDResponse400): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDResponse400")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDResponse403(json: string): PutWorkspacesWorkspaceIDResponse403 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDResponse403"));
    }

    public static putWorkspacesWorkspaceIDResponse403ToJson(value: PutWorkspacesWorkspaceIDResponse403): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDResponse403")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDResponse404(json: string): PutWorkspacesWorkspaceIDResponse404 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDResponse404"));
    }

    public static putWorkspacesWorkspaceIDResponse404ToJson(value: PutWorkspacesWorkspaceIDResponse404): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDResponse404")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDResponse429(json: string): PutWorkspacesWorkspaceIDResponse429 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDResponse429"));
    }

    public static putWorkspacesWorkspaceIDResponse429ToJson(value: PutWorkspacesWorkspaceIDResponse429): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDResponse429")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDResponse500(json: string): PutWorkspacesWorkspaceIDResponse500 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDResponse500"));
    }

    public static putWorkspacesWorkspaceIDResponse500ToJson(value: PutWorkspacesWorkspaceIDResponse500): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDResponse500")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDTagsBody(json: string): PutWorkspacesWorkspaceIDTagsBody {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDTagsBody"));
    }

    public static putWorkspacesWorkspaceIDTagsBodyToJson(value: PutWorkspacesWorkspaceIDTagsBody): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDTagsBody")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDTagsResponse(json: string): PutWorkspacesWorkspaceIDTagsResponse {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDTagsResponse"));
    }

    public static putWorkspacesWorkspaceIDTagsResponseToJson(value: PutWorkspacesWorkspaceIDTagsResponse): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDTagsResponse")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDTagsResponse400(json: string): PutWorkspacesWorkspaceIDTagsResponse400 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDTagsResponse400"));
    }

    public static putWorkspacesWorkspaceIDTagsResponse400ToJson(value: PutWorkspacesWorkspaceIDTagsResponse400): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDTagsResponse400")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDTagsResponse401(json: string): PutWorkspacesWorkspaceIDTagsResponse401 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDTagsResponse401"));
    }

    public static putWorkspacesWorkspaceIDTagsResponse401ToJson(value: PutWorkspacesWorkspaceIDTagsResponse401): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDTagsResponse401")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDTagsResponse403(json: string): PutWorkspacesWorkspaceIDTagsResponse403 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDTagsResponse403"));
    }

    public static putWorkspacesWorkspaceIDTagsResponse403ToJson(value: PutWorkspacesWorkspaceIDTagsResponse403): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDTagsResponse403")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDTagsResponse404(json: string): PutWorkspacesWorkspaceIDTagsResponse404 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDTagsResponse404"));
    }

    public static putWorkspacesWorkspaceIDTagsResponse404ToJson(value: PutWorkspacesWorkspaceIDTagsResponse404): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDTagsResponse404")), null, 2);
    }

    public static toPutWorkspacesWorkspaceIDTagsResponse500(json: string): PutWorkspacesWorkspaceIDTagsResponse500 {
        return cast(JSON.parse(json), r("PutWorkspacesWorkspaceIDTagsResponse500"));
    }

    public static putWorkspacesWorkspaceIDTagsResponse500ToJson(value: PutWorkspacesWorkspaceIDTagsResponse500): string {
        return JSON.stringify(uncast(value, r("PutWorkspacesWorkspaceIDTagsResponse500")), null, 2);
    }

    public static toAPIBase(json: string): APIBase {
        return cast(JSON.parse(json), r("APIBase"));
    }

    public static aPIBaseToJson(value: APIBase): string {
        return JSON.stringify(uncast(value, r("APIBase")), null, 2);
    }

    public static toAPIDetails(json: string): APIDetails {
        return cast(JSON.parse(json), r("APIDetails"));
    }

    public static aPIDetailsToJson(value: APIDetails): string {
        return JSON.stringify(uncast(value, r("APIDetails")), null, 2);
    }

    public static toCreateAPIVersionGitLinked(json: string): CreateAPIVersionGitLinked {
        return cast(JSON.parse(json), r("CreateAPIVersionGitLinked"));
    }

    public static createAPIVersionGitLinkedToJson(value: CreateAPIVersionGitLinked): string {
        return JSON.stringify(uncast(value, r("CreateAPIVersionGitLinked")), null, 2);
    }

    public static toCreateAPIVersionNonGitLinked(json: string): CreateAPIVersionNonGitLinked {
        return cast(JSON.parse(json), r("CreateAPIVersionNonGitLinked"));
    }

    public static createAPIVersionNonGitLinkedToJson(value: CreateAPIVersionNonGitLinked): string {
        return JSON.stringify(uncast(value, r("CreateAPIVersionNonGitLinked")), null, 2);
    }

    public static toCreateAPISchema(json: string): CreateAPISchema {
        return cast(JSON.parse(json), r("CreateAPISchema"));
    }

    public static createAPISchemaToJson(value: CreateAPISchema): string {
        return JSON.stringify(uncast(value, r("CreateAPISchema")), null, 2);
    }

    public static toCreatePANAPI(json: string): CreatePANAPI {
        return cast(JSON.parse(json), r("CreatePANAPI"));
    }

    public static createPANAPIToJson(value: CreatePANAPI): string {
        return JSON.stringify(uncast(value, r("CreatePANAPI")), null, 2);
    }

    public static toCreatePANCollection(json: string): CreatePANCollection {
        return cast(JSON.parse(json), r("CreatePANCollection"));
    }

    public static createPANCollectionToJson(value: CreatePANCollection): string {
        return JSON.stringify(uncast(value, r("CreatePANCollection")), null, 2);
    }

    public static toCreatePANFolder(json: string): CreatePANFolder {
        return cast(JSON.parse(json), r("CreatePANFolder"));
    }

    public static createPANFolderToJson(value: CreatePANFolder): string {
        return JSON.stringify(uncast(value, r("CreatePANFolder")), null, 2);
    }

    public static toCreatePANWorkspace(json: string): CreatePANWorkspace {
        return cast(JSON.parse(json), r("CreatePANWorkspace"));
    }

    public static createPANWorkspaceToJson(value: CreatePANWorkspace): string {
        return JSON.stringify(uncast(value, r("CreatePANWorkspace")), null, 2);
    }

    public static toCreateUpdateAPI(json: string): CreateUpdateAPI {
        return cast(JSON.parse(json), r("CreateUpdateAPI"));
    }

    public static createUpdateAPIToJson(value: CreateUpdateAPI): string {
        return JSON.stringify(uncast(value, r("CreateUpdateAPI")), null, 2);
    }

    public static toGitInfo(json: string): GitInfo {
        return cast(JSON.parse(json), r("GitInfo"));
    }

    public static gitInfoToJson(value: GitInfo): string {
        return JSON.stringify(uncast(value, r("GitInfo")), null, 2);
    }

    public static toGlobalVariable(json: string): GlobalVariable {
        return cast(JSON.parse(json), r("GlobalVariable"));
    }

    public static globalVariableToJson(value: GlobalVariable): string {
        return JSON.stringify(uncast(value, r("GlobalVariable")), null, 2);
    }

    public static toImportExportFile(json: string): ImportExportFile {
        return cast(JSON.parse(json), r("ImportExportFile"));
    }

    public static importExportFileToJson(value: ImportExportFile): string {
        return JSON.stringify(uncast(value, r("ImportExportFile")), null, 2);
    }

    public static toJSONSchema(json: string): JSONSchema {
        return cast(JSON.parse(json), r("JSONSchema"));
    }

    public static jSONSchemaToJson(value: JSONSchema): string {
        return JSON.stringify(uncast(value, r("JSONSchema")), null, 2);
    }

    public static toJSONStringified(json: string): JSONStringified {
        return cast(JSON.parse(json), r("JSONStringified"));
    }

    public static jSONStringifiedToJson(value: JSONStringified): string {
        return JSON.stringify(uncast(value, r("JSONStringified")), null, 2);
    }

    public static toMeta(json: string): Meta {
        return cast(JSON.parse(json), r("Meta"));
    }

    public static metaToJson(value: Meta): string {
        return JSON.stringify(uncast(value, r("Meta")), null, 2);
    }

    public static toSchemaFileBase(json: string): SchemaFileBase {
        return cast(JSON.parse(json), r("SchemaFileBase"));
    }

    public static schemaFileBaseToJson(value: SchemaFileBase): string {
        return JSON.stringify(uncast(value, r("SchemaFileBase")), null, 2);
    }

    public static toSchemaFileContents(json: string): SchemaFileContents {
        return cast(JSON.parse(json), r("SchemaFileContents"));
    }

    public static schemaFileContentsToJson(value: SchemaFileContents): string {
        return JSON.stringify(uncast(value, r("SchemaFileContents")), null, 2);
    }

    public static toScimGroupResource(json: string): ScimGroupResource {
        return cast(JSON.parse(json), r("ScimGroupResource"));
    }

    public static scimGroupResourceToJson(value: ScimGroupResource): string {
        return JSON.stringify(uncast(value, r("ScimGroupResource")), null, 2);
    }

    public static toScimUserResource(json: string): ScimUserResource {
        return cast(JSON.parse(json), r("ScimUserResource"));
    }

    public static scimUserResourceToJson(value: ScimUserResource): string {
        return JSON.stringify(uncast(value, r("ScimUserResource")), null, 2);
    }

    public static toTaskError(json: string): TaskError {
        return cast(JSON.parse(json), r("TaskError"));
    }

    public static taskErrorToJson(value: TaskError): string {
        return JSON.stringify(uncast(value, r("TaskError")), null, 2);
    }

    public static toTaskResource(json: string): TaskResource {
        return cast(JSON.parse(json), r("TaskResource"));
    }

    public static taskResourceToJson(value: TaskResource): string {
        return JSON.stringify(uncast(value, r("TaskResource")), null, 2);
    }

    public static toUpdatePANAPI(json: string): UpdatePANAPI {
        return cast(JSON.parse(json), r("UpdatePANAPI"));
    }

    public static updatePANAPIToJson(value: UpdatePANAPI): string {
        return JSON.stringify(uncast(value, r("UpdatePANAPI")), null, 2);
    }

    public static toUpdatePANCollection(json: string): UpdatePANCollection {
        return cast(JSON.parse(json), r("UpdatePANCollection"));
    }

    public static updatePANCollectionToJson(value: UpdatePANCollection): string {
        return JSON.stringify(uncast(value, r("UpdatePANCollection")), null, 2);
    }

    public static toUpdatePANFolder(json: string): UpdatePANFolder {
        return cast(JSON.parse(json), r("UpdatePANFolder"));
    }

    public static updatePANFolderToJson(value: UpdatePANFolder): string {
        return JSON.stringify(uncast(value, r("UpdatePANFolder")), null, 2);
    }

    public static toUpdatePANWorkspace(json: string): UpdatePANWorkspace {
        return cast(JSON.parse(json), r("UpdatePANWorkspace"));
    }

    public static updatePANWorkspaceToJson(value: UpdatePANWorkspace): string {
        return JSON.stringify(uncast(value, r("UpdatePANWorkspace")), null, 2);
    }

    public static toVersionBase(json: string): VersionBase {
        return cast(JSON.parse(json), r("VersionBase"));
    }

    public static versionBaseToJson(value: VersionBase): string {
        return JSON.stringify(uncast(value, r("VersionBase")), null, 2);
    }

    public static toVersionExtended(json: string): VersionExtended {
        return cast(JSON.parse(json), r("VersionExtended"));
    }

    public static versionExtendedToJson(value: VersionExtended): string {
        return JSON.stringify(uncast(value, r("VersionExtended")), null, 2);
    }
}

function invalidValue(typ: any, val: any, key: any, parent: any = ''): never {
    const prettyTyp = prettyTypeName(typ);
    const parentText = parent ? ` on ${parent}` : '';
    const keyText = key ? ` for key "${key}"` : '';
    throw Error(`Invalid value${keyText}${parentText}. Expected ${prettyTyp} but got ${JSON.stringify(val)}`);
}

function prettyTypeName(typ: any): string {
    if (Array.isArray(typ)) {
        if (typ.length === 2 && typ[0] === undefined) {
            return `an optional ${prettyTypeName(typ[1])}`;
        } else {
            return `one of [${typ.map(a => { return prettyTypeName(a); }).join(", ")}]`;
        }
    } else if (typeof typ === "object" && typ.literal !== undefined) {
        return typ.literal;
    } else {
        return typeof typ;
    }
}

function jsonToJSProps(typ: any): any {
    if (typ.jsonToJS === undefined) {
        const map: any = {};
        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });
        typ.jsonToJS = map;
    }
    return typ.jsonToJS;
}

function jsToJSONProps(typ: any): any {
    if (typ.jsToJSON === undefined) {
        const map: any = {};
        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });
        typ.jsToJSON = map;
    }
    return typ.jsToJSON;
}

function transform(val: any, typ: any, getProps: any, key: any = '', parent: any = ''): any {
    function transformPrimitive(typ: string, val: any): any {
        if (typeof typ === typeof val) return val;
        return invalidValue(typ, val, key, parent);
    }

    function transformUnion(typs: any[], val: any): any {
        // val must validate against one typ in typs
        const l = typs.length;
        for (let i = 0; i < l; i++) {
            const typ = typs[i];
            try {
                return transform(val, typ, getProps);
            } catch (_) {}
        }
        return invalidValue(typs, val, key, parent);
    }

    function transformEnum(cases: string[], val: any): any {
        if (cases.indexOf(val) !== -1) return val;
        return invalidValue(cases.map(a => { return l(a); }), val, key, parent);
    }

    function transformArray(typ: any, val: any): any {
        // val must be an array with no invalid elements
        if (!Array.isArray(val)) return invalidValue(l("array"), val, key, parent);
        return val.map(el => transform(el, typ, getProps));
    }

    function transformDate(val: any): any {
        if (val === null) {
            return null;
        }
        const d = new Date(val);
        if (isNaN(d.valueOf())) {
            return invalidValue(l("Date"), val, key, parent);
        }
        return d;
    }

    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {
        if (val === null || typeof val !== "object" || Array.isArray(val)) {
            return invalidValue(l(ref || "object"), val, key, parent);
        }
        const result: any = {};
        Object.getOwnPropertyNames(props).forEach(key => {
            const prop = props[key];
            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;
            result[prop.key] = transform(v, prop.typ, getProps, key, ref);
        });
        Object.getOwnPropertyNames(val).forEach(key => {
            if (!Object.prototype.hasOwnProperty.call(props, key)) {
                result[key] = transform(val[key], additional, getProps, key, ref);
            }
        });
        return result;
    }

    if (typ === "any") return val;
    if (typ === null) {
        if (val === null) return val;
        return invalidValue(typ, val, key, parent);
    }
    if (typ === false) return invalidValue(typ, val, key, parent);
    let ref: any = undefined;
    while (typeof typ === "object" && typ.ref !== undefined) {
        ref = typ.ref;
        typ = typeMap[typ.ref];
    }
    if (Array.isArray(typ)) return transformEnum(typ, val);
    if (typeof typ === "object") {
        return typ.hasOwnProperty("unionMembers") ? transformUnion(typ.unionMembers, val)
            : typ.hasOwnProperty("arrayItems")    ? transformArray(typ.arrayItems, val)
            : typ.hasOwnProperty("props")         ? transformObject(getProps(typ), typ.additional, val)
            : invalidValue(typ, val, key, parent);
    }
    // Numbers can be parsed by Date but shouldn't be.
    if (typ === Date && typeof val !== "number") return transformDate(val);
    return transformPrimitive(typ, val);
}

function cast<T>(val: any, typ: any): T {
    return transform(val, typ, jsonToJSProps);
}

function uncast<T>(val: T, typ: any): any {
    return transform(val, typ, jsToJSONProps);
}

function l(typ: any) {
    return { literal: typ };
}

function a(typ: any) {
    return { arrayItems: typ };
}

function u(...typs: any[]) {
    return { unionMembers: typs };
}

function o(props: any[], additional: any) {
    return { props, additional };
}

function m(additional: any) {
    return { props: [], additional };
}

function r(name: string) {
    return { ref: name };
}

const typeMap: any = {
    "DeleteApisAPIIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDSchemasSchemaIDFilesFilePathResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDVersionsVersionIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteApisAPIIDVersionsVersionIDResponse400Error")) },
    ], "any"),
    "DeleteApisAPIIDVersionsVersionIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDVersionsVersionIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDVersionsVersionIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDVersionsVersionIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteApisAPIIDVersionsVersionIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDFoldersFolderIDResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("DeleteCollectionsCollectionIDFoldersFolderIDResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "revision", js: "revision", typ: u(null, undefined, 3.14) },
    ], "any"),
    "DeleteCollectionsCollectionIDFoldersFolderIDResponseData": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDFoldersFolderIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteCollectionsCollectionIDFoldersFolderIDResponse401Error")) },
    ], "any"),
    "DeleteCollectionsCollectionIDFoldersFolderIDResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("DeleteCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDFoldersFolderIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteCollectionsCollectionIDFoldersFolderIDResponse404Error")) },
    ], "any"),
    "DeleteCollectionsCollectionIDFoldersFolderIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("DeleteCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDFoldersFolderIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDRequestsRequestIDResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("DeleteCollectionsCollectionIDRequestsRequestIDResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "revision", js: "revision", typ: u(null, undefined, 3.14) },
    ], "any"),
    "DeleteCollectionsCollectionIDRequestsRequestIDResponseData": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDRequestsRequestIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteCollectionsCollectionIDRequestsRequestIDResponse401Error")) },
    ], "any"),
    "DeleteCollectionsCollectionIDRequestsRequestIDResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("DeleteCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDRequestsRequestIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteCollectionsCollectionIDRequestsRequestIDResponse404Error")) },
    ], "any"),
    "DeleteCollectionsCollectionIDRequestsRequestIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("DeleteCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDRequestsRequestIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponse": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponseCollection")) },
    ], "any"),
    "DeleteCollectionsCollectionIDResponseCollection": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponse401Error")) },
    ], "any"),
    "DeleteCollectionsCollectionIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponse404Error")) },
    ], "any"),
    "DeleteCollectionsCollectionIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponse404ErrorDetails": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "item", js: "item", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponse500Error")) },
    ], "any"),
    "DeleteCollectionsCollectionIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponsesResponseIDResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponsesResponseIDResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "revision", js: "revision", typ: u(null, undefined, 3.14) },
    ], "any"),
    "DeleteCollectionsCollectionIDResponsesResponseIDResponseData": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponsesResponseIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponsesResponseIDResponse401Error")) },
    ], "any"),
    "DeleteCollectionsCollectionIDResponsesResponseIDResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponsesResponseIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponsesResponseIDResponse404Error")) },
    ], "any"),
    "DeleteCollectionsCollectionIDResponsesResponseIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("DeleteCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteCollectionsCollectionIDResponsesResponseIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteEnvironmentsEnvironmentIDResponse": o([
        { json: "environment", js: "environment", typ: u(null, undefined, r("DeleteEnvironmentsEnvironmentIDResponseEnvironment")) },
    ], "any"),
    "DeleteEnvironmentsEnvironmentIDResponseEnvironment": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteEnvironmentsEnvironmentIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteEnvironmentsEnvironmentIDResponse401Error")) },
    ], "any"),
    "DeleteEnvironmentsEnvironmentIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteEnvironmentsEnvironmentIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteEnvironmentsEnvironmentIDResponse404Error")) },
    ], "any"),
    "DeleteEnvironmentsEnvironmentIDResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteEnvironmentsEnvironmentIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteEnvironmentsEnvironmentIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteEnvironmentsEnvironmentIDResponse500Error")) },
    ], "any"),
    "DeleteEnvironmentsEnvironmentIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDResponse": o([
        { json: "mock", js: "mock", typ: u(null, undefined, r("DeleteMocksMockIDResponseMock")) },
    ], "any"),
    "DeleteMocksMockIDResponseMock": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDResponse400Error")) },
    ], "any"),
    "DeleteMocksMockIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDResponse401Error")) },
    ], "any"),
    "DeleteMocksMockIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDResponse404Error")) },
    ], "any"),
    "DeleteMocksMockIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDResponse500Error")) },
    ], "any"),
    "DeleteMocksMockIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse": o([
        { json: "body", js: "body", typ: u(null, undefined, "") },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "headers", js: "headers", typ: u(null, undefined, a(r("DeleteMocksMockIDServerResponsesServerResponseIDResponseHeadersItem"))) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "language", js: "language", typ: u(null, undefined, r("DeleteMocksMockIDServerResponsesServerResponseIDResponseLanguage")) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "statusCode", js: "statusCode", typ: u(null, undefined, 3.14) },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponseHeadersItem": o([
        { json: "key", js: "key", typ: u(null, undefined, "") },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse400Error")) },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse401Error")) },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse404Error")) },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDServerResponsesServerResponseIDResponse500Error")) },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse": o([
        { json: "mock", js: "mock", typ: u(null, undefined, r("DeleteMocksMockIDUnpublishResponseMock")) },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponseMock": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDUnpublishResponse400Error")) },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDUnpublishResponse401Error")) },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDUnpublishResponse404Error")) },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMocksMockIDUnpublishResponse500Error")) },
    ], "any"),
    "DeleteMocksMockIDUnpublishResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMonitorsMonitorIDResponse": o([
        { json: "monitor", js: "monitor", typ: u(null, undefined, r("DeleteMonitorsMonitorIDResponseMonitor")) },
    ], "any"),
    "DeleteMonitorsMonitorIDResponseMonitor": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMonitorsMonitorIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMonitorsMonitorIDResponse400Error")) },
    ], "any"),
    "DeleteMonitorsMonitorIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMonitorsMonitorIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMonitorsMonitorIDResponse401Error")) },
    ], "any"),
    "DeleteMonitorsMonitorIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMonitorsMonitorIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteMonitorsMonitorIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteMonitorsMonitorIDResponse500Error")) },
    ], "any"),
    "DeleteMonitorsMonitorIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse": o([
        { json: "elementType", js: "elementType", typ: u(null, undefined, r("DeleteNetworkPrivateElementTypeElementIDResponseElementType")) },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponseElementType": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse400": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteNetworkPrivateElementTypeElementIDResponse401Error")) },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteNetworkPrivateElementTypeElementIDResponse403Error")) },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteNetworkPrivateElementTypeElementIDResponse404Error")) },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteNetworkPrivateElementTypeElementIDResponse500Error")) },
    ], "any"),
    "DeleteNetworkPrivateElementTypeElementIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteScimV2GroupsGroupIDResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteScimV2GroupsGroupIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteScimV2GroupsGroupIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteScimV2GroupsGroupIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteScimV2GroupsGroupIDResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "DeleteScimV2GroupsGroupIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteWorkspacesWorkspaceIDResponse": o([
        { json: "workspace", js: "workspace", typ: u(null, undefined, r("DeleteWorkspacesWorkspaceIDResponseWorkspace")) },
    ], "any"),
    "DeleteWorkspacesWorkspaceIDResponseWorkspace": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteWorkspacesWorkspaceIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteWorkspacesWorkspaceIDResponse400Error")) },
    ], "any"),
    "DeleteWorkspacesWorkspaceIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteWorkspacesWorkspaceIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteWorkspacesWorkspaceIDResponse401Error")) },
    ], "any"),
    "DeleteWorkspacesWorkspaceIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteWorkspacesWorkspaceIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "DeleteWorkspacesWorkspaceIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("DeleteWorkspacesWorkspaceIDResponse500Error")) },
    ], "any"),
    "DeleteWorkspacesWorkspaceIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDCollectionsCollectionIDResponse": o([
        { json: "info", js: "info", typ: u(null, undefined, r("GetApisAPIIDCollectionsCollectionIDResponseInfo")) },
        { json: "item", js: "item", typ: u(null, undefined, a(r("GetApisAPIIDCollectionsCollectionIDResponseItemItem"))) },
    ], "any"),
    "GetApisAPIIDCollectionsCollectionIDResponseInfo": o([
        { json: "_postman_id", js: "postmanID", typ: u(null, undefined, "") },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "schema", js: "schema", typ: u(null, undefined, r("Schema")) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDCollectionsCollectionIDResponseItemItem": o([
        { json: "event", js: "event", typ: u(null, undefined, a("any")) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "request", js: "request", typ: u(null, undefined, "any") },
        { json: "response", js: "response", typ: u(null, undefined, a("any")) },
    ], "any"),
    "GetApisAPIIDCollectionsCollectionIDResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDCollectionsCollectionIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDCollectionsCollectionIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDCollectionsCollectionIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDCollectionsCollectionIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesFilePathResponse": o([
        { json: "content", js: "content", typ: u(null, undefined, "") },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "path", js: "path", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesFilePathResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesFilePathResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesFilePathResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesFilePathResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesFilePathResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesResponse": o([
        { json: "files", js: "files", typ: u(null, undefined, a(r("GetApisAPIIDSchemasSchemaIDFilesResponseFilesItem"))) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetApisAPIIDSchemasSchemaIDFilesResponseMeta")) },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesResponseFilesItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 3.14) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "path", js: "path", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesResponseMeta": o([
        { json: "nextCursor", js: "nextCursor", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDFilesResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDSchemasSchemaIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTagsResponse": o([
        { json: "tags", js: "tags", typ: u(null, undefined, a(r("GetApisAPIIDTagsResponseTagsItem"))) },
    ], "any"),
    "GetApisAPIIDTagsResponseTagsItem": o([
        { json: "slug", js: "slug", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTagsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTagsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTagsResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTagsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTasksTaskIDResponse": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "details", js: "details", typ: u(null, undefined, "any") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetApisAPIIDTasksTaskIDResponseMeta")) },
        { json: "status", js: "status", typ: u(null, undefined, r("GetApisAPIIDTasksTaskIDResponseStatus")) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTasksTaskIDResponseMeta": o([
        { json: "action", js: "action", typ: u(null, undefined, r("Action")) },
        { json: "model", js: "model", typ: u(null, undefined, r("Model")) },
        { json: "url", js: "url", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTasksTaskIDResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTasksTaskIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTasksTaskIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDTasksTaskIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsResponse": o([
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetApisAPIIDVersionsResponseMeta")) },
        { json: "versions", js: "versions", typ: u(null, undefined, a(r("GetApisAPIIDVersionsResponseVersionsItem"))) },
    ], "any"),
    "GetApisAPIIDVersionsResponseMeta": o([
        { json: "limit", js: "limit", typ: u(null, undefined, 3.14) },
        { json: "nextCursor", js: "nextCursor", typ: u(null, undefined, "") },
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetApisAPIIDVersionsResponseVersionsItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "releaseNotes", js: "releaseNotes", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsVersionIDResponse": o([
        { json: "version", js: "version", typ: u(null, undefined, r("GetApisAPIIDVersionsVersionIDResponseVersion")) },
    ], "any"),
    "GetApisAPIIDVersionsVersionIDResponseVersion": o([
        { json: "collections", js: "collections", typ: u(null, undefined, a(r("GetApisAPIIDVersionsVersionIDResponseVersionCollectionsItem"))) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "releaseNotes", js: "releaseNotes", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a(r("GetApisAPIIDVersionsVersionIDResponseVersionSchemasItem"))) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsVersionIDResponseVersionCollectionsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsVersionIDResponseVersionSchemasItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsVersionIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsVersionIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisAPIIDVersionsVersionIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisResponse": o([
        { json: "apis", js: "apis", typ: u(null, undefined, a(r("GetApisResponseApisItem"))) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetApisResponseMeta")) },
    ], "any"),
    "GetApisResponseApisItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 3.14) },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetApisResponseMeta": o([
        { json: "limit", js: "limit", typ: u(null, undefined, 3.14) },
        { json: "nextCursor", js: "nextCursor", typ: u(null, undefined, "") },
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetApisResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetApisResponse401Error")) },
    ], "any"),
    "GetApisResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetApisResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetAuditLogsResponse": o([
        { json: "trails", js: "trails", typ: u(null, undefined, a(r("GetAuditLogsResponseTrailsItem"))) },
    ], "any"),
    "GetAuditLogsResponseTrailsItem": o([
        { json: "action", js: "action", typ: u(null, undefined, "") },
        { json: "data", js: "data", typ: u(null, undefined, r("GetAuditLogsResponseTrailsItemData")) },
        { json: "id", js: "id", typ: u(null, undefined, 3.14) },
        { json: "ip", js: "ip", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "timestamp", js: "timestamp", typ: u(null, undefined, "") },
        { json: "userAgent", js: "userAgent", typ: u(null, undefined, "") },
    ], "any"),
    "GetAuditLogsResponseTrailsItemData": o([
        { json: "actor", js: "actor", typ: u(null, undefined, r("GetAuditLogsResponseTrailsItemDataActor")) },
        { json: "team", js: "team", typ: u(null, undefined, r("GetAuditLogsResponseTrailsItemDataTeam")) },
        { json: "user", js: "user", typ: u(null, undefined, r("GetAuditLogsResponseTrailsItemDataUser")) },
        { json: "variables", js: "variables", typ: u(null, undefined, "any") },
    ], "any"),
    "GetAuditLogsResponseTrailsItemDataActor": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
        { json: "email", js: "email", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, 3.14) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "username", js: "username", typ: u(null, undefined, "") },
    ], "any"),
    "GetAuditLogsResponseTrailsItemDataTeam": o([
        { json: "id", js: "id", typ: u(null, undefined, 3.14) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetAuditLogsResponseTrailsItemDataUser": o([
        { json: "email", js: "email", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, 3.14) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "username", js: "username", typ: u(null, undefined, "") },
    ], "any"),
    "GetAuditLogsResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetAuditLogsResponse401Error")) },
    ], "any"),
    "GetAuditLogsResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetAuditLogsResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetAuditLogsResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetAuditLogsResponse500Error")) },
    ], "any"),
    "GetAuditLogsResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDFoldersFolderIDResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("GetCollectionsCollectionIDFoldersFolderIDResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDFoldersFolderIDResponseData": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastRevision", js: "lastRevision", typ: u(null, undefined, 0) },
        { json: "lastUpdatedBy", js: "lastUpdatedBy", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDFoldersFolderIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsCollectionIDFoldersFolderIDResponse401Error")) },
    ], "any"),
    "GetCollectionsCollectionIDFoldersFolderIDResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("GetCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDFoldersFolderIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsCollectionIDFoldersFolderIDResponse404Error")) },
    ], "any"),
    "GetCollectionsCollectionIDFoldersFolderIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("GetCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDFoldersFolderIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDRequestsRequestIDResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("GetCollectionsCollectionIDRequestsRequestIDResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDRequestsRequestIDResponseData": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastRevision", js: "lastRevision", typ: u(null, undefined, 0) },
        { json: "lastUpdatedBy", js: "lastUpdatedBy", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDRequestsRequestIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsCollectionIDRequestsRequestIDResponse401Error")) },
    ], "any"),
    "GetCollectionsCollectionIDRequestsRequestIDResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("GetCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDRequestsRequestIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsCollectionIDRequestsRequestIDResponse404Error")) },
    ], "any"),
    "GetCollectionsCollectionIDRequestsRequestIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("GetCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDRequestsRequestIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponse": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("GetCollectionsCollectionIDResponseCollection")) },
    ], "any"),
    "GetCollectionsCollectionIDResponseCollection": o([
        { json: "info", js: "info", typ: u(null, undefined, r("GetCollectionsCollectionIDResponseCollectionInfo")) },
    ], "any"),
    "GetCollectionsCollectionIDResponseCollectionInfo": o([
        { json: "_postman_id", js: "postmanID", typ: u(null, undefined, "") },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "schema", js: "schema", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsCollectionIDResponse400Error")) },
    ], "any"),
    "GetCollectionsCollectionIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsCollectionIDResponse401Error")) },
    ], "any"),
    "GetCollectionsCollectionIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsCollectionIDResponse500Error")) },
    ], "any"),
    "GetCollectionsCollectionIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponsesResponseIDResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("GetCollectionsCollectionIDResponsesResponseIDResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponsesResponseIDResponseData": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastRevision", js: "lastRevision", typ: u(null, undefined, 0) },
        { json: "lastUpdatedBy", js: "lastUpdatedBy", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "request", js: "request", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponsesResponseIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsCollectionIDResponsesResponseIDResponse401Error")) },
    ], "any"),
    "GetCollectionsCollectionIDResponsesResponseIDResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("GetCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponsesResponseIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsCollectionIDResponsesResponseIDResponse404Error")) },
    ], "any"),
    "GetCollectionsCollectionIDResponsesResponseIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("GetCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDResponsesResponseIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDTagsResponse": o([
        { json: "tags", js: "tags", typ: u(null, undefined, a(r("GetCollectionsCollectionIDTagsResponseTagsItem"))) },
    ], "any"),
    "GetCollectionsCollectionIDTagsResponseTagsItem": o([
        { json: "slug", js: "slug", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDTagsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDTagsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDTagsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDTransformationsResponse": o([
        { json: "output", js: "output", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDTransformationsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDTransformationsResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsCollectionIDTransformationsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsResponse": o([
        { json: "collections", js: "collections", typ: u(null, undefined, a(r("GetCollectionsResponseCollectionsItem"))) },
    ], "any"),
    "GetCollectionsResponseCollectionsItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "fork", js: "fork", typ: u(null, undefined, r("GetCollectionsResponseCollectionsItemFork")) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "isPublic", js: "isPublic", typ: u(null, undefined, true) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsResponseCollectionsItemFork": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "from", js: "from", typ: u(null, undefined, "") },
        { json: "label", js: "label", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsResponse401Error")) },
    ], "any"),
    "GetCollectionsResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetCollectionsResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetCollectionsResponse500Error")) },
    ], "any"),
    "GetCollectionsResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetDetectedSecretsSecretIDLocationsResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, a(r("GetDetectedSecretsSecretIDLocationsResponseDataItem"))) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetDetectedSecretsSecretIDLocationsResponseMeta")) },
    ], "any"),
    "GetDetectedSecretsSecretIDLocationsResponseDataItem": o([
        { json: "detectedAt", js: "detectedAt", typ: u(null, undefined, "") },
        { json: "isResourceDeleted", js: "isResourceDeleted", typ: u(null, undefined, true) },
        { json: "leakedBy", js: "leakedBy", typ: u(null, undefined, 3.14) },
        { json: "location", js: "location", typ: u(null, undefined, "") },
        { json: "occurrences", js: "occurrences", typ: u(null, undefined, 3.14) },
        { json: "parentResourceId", js: "parentResourceID", typ: u(null, undefined, "") },
        { json: "resourceId", js: "resourceID", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, r("DatumResourceType")) },
        { json: "url", js: "url", typ: u(null, undefined, "") },
    ], "any"),
    "GetDetectedSecretsSecretIDLocationsResponseMeta": o([
        { json: "activityFeed", js: "activityFeed", typ: u(null, undefined, a(r("GetDetectedSecretsSecretIDLocationsResponseMetaActivityFeedItem"))) },
        { json: "cursor", js: "cursor", typ: u(null, undefined, "") },
        { json: "limit", js: "limit", typ: u(null, undefined, 3.14) },
        { json: "nextCursor", js: "nextCursor", typ: u(null, undefined, "any") },
        { json: "obfuscatedSecret", js: "obfuscatedSecret", typ: u(null, undefined, "") },
        { json: "secretHash", js: "secretHash", typ: u(null, undefined, "") },
        { json: "secretType", js: "secretType", typ: u(null, undefined, "") },
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetDetectedSecretsSecretIDLocationsResponseMetaActivityFeedItem": o([
        { json: "resolvedAt", js: "resolvedAt", typ: u(null, undefined, "") },
        { json: "resolvedBy", js: "resolvedBy", typ: u(null, undefined, 3.14) },
        { json: "status", js: "status", typ: u(null, undefined, r("ResolutionEnum")) },
    ], "any"),
    "GetDetectedSecretsSecretIDLocationsResponse400": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetDetectedSecretsSecretIDLocationsResponse401": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetDetectedSecretsSecretIDLocationsResponse403": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetDetectedSecretsSecretIDLocationsResponse500": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponse": o([
        { json: "environment", js: "environment", typ: u(null, undefined, r("GetEnvironmentsEnvironmentIDResponseEnvironment")) },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponseEnvironment": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "isPublic", js: "isPublic", typ: u(null, undefined, true) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "values", js: "values", typ: u(null, undefined, a(a(r("GetEnvironmentsEnvironmentIDResponseEnvironmentValuesItemItem")))) },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponseEnvironmentValuesItemItem": o([
        { json: "enabled", js: "enabled", typ: u(null, undefined, true) },
        { json: "key", js: "key", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("PurpleType")) },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetEnvironmentsEnvironmentIDResponse400Error")) },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetEnvironmentsEnvironmentIDResponse401Error")) },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetEnvironmentsEnvironmentIDResponse500Error")) },
    ], "any"),
    "GetEnvironmentsEnvironmentIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsResponse": o([
        { json: "environments", js: "environments", typ: u(null, undefined, a(r("GetEnvironmentsResponseEnvironmentsItem"))) },
    ], "any"),
    "GetEnvironmentsResponseEnvironmentsItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "isPublic", js: "isPublic", typ: u(null, undefined, true) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetEnvironmentsResponse401Error")) },
    ], "any"),
    "GetEnvironmentsResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetEnvironmentsResponse404Error")) },
    ], "any"),
    "GetEnvironmentsResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetEnvironmentsResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetEnvironmentsResponse500Error")) },
    ], "any"),
    "GetEnvironmentsResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMeResponse": o([
        { json: "operations", js: "operations", typ: u(null, undefined, a(r("GetMeResponseOperationsItem"))) },
        { json: "user", js: "user", typ: u(null, undefined, r("GetMeResponseUser")) },
    ], "any"),
    "GetMeResponseOperationsItem": o([
        { json: "limit", js: "limit", typ: u(null, undefined, 3.14) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "overage", js: "overage", typ: u(null, undefined, 3.14) },
        { json: "usage", js: "usage", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetMeResponseUser": o([
        { json: "avatar", js: "avatar", typ: u(null, undefined, "") },
        { json: "email", js: "email", typ: u(null, undefined, "") },
        { json: "fullName", js: "fullName", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, 3.14) },
        { json: "isPublic", js: "isPublic", typ: u(null, undefined, true) },
        { json: "teamId", js: "teamID", typ: u(null, undefined, 0) },
        { json: "username", js: "username", typ: u(null, undefined, "") },
    ], "any"),
    "GetMeResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMeResponse401Error")) },
    ], "any"),
    "GetMeResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMeResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetMeResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMeResponse500Error")) },
    ], "any"),
    "GetMeResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponse": o([
        { json: "call-logs", js: "callLogs", typ: u(null, undefined, a(r("GetMocksMockIDCallLogsResponseCallLogsItem"))) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponseMeta")) },
    ], "any"),
    "GetMocksMockIDCallLogsResponseCallLogsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "request", js: "request", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponseCallLogsItemRequest")) },
        { json: "response", js: "response", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponseCallLogsItemResponse")) },
        { json: "responseName", js: "responseName", typ: u(null, undefined, "") },
        { json: "servedAt", js: "servedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponseCallLogsItemRequest": o([
        { json: "body", js: "body", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponseCallLogsItemRequestBody")) },
        { json: "headers", js: "headers", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponseCallLogsItemRequestHeaders")) },
        { json: "method", js: "method", typ: u(null, undefined, "") },
        { json: "path", js: "path", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponseCallLogsItemRequestBody": o([
        { json: "data", js: "data", typ: u(null, undefined, "") },
        { json: "mode", js: "mode", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponseCallLogsItemRequestHeaders": o([
        { json: "key", js: "key", typ: u(null, undefined, "") },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponseCallLogsItemResponse": o([
        { json: "body", js: "body", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponseCallLogsItemResponseBody")) },
        { json: "headers", js: "headers", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponseCallLogsItemResponseHeaders")) },
        { json: "statusCode", js: "statusCode", typ: u(null, undefined, 3.14) },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponseCallLogsItemResponseBody": o([
        { json: "data", js: "data", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponseCallLogsItemResponseHeaders": o([
        { json: "description", js: "description", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponseCallLogsItemResponseHeadersDescription")) },
        { json: "key", js: "key", typ: u(null, undefined, "") },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponseCallLogsItemResponseHeadersDescription": o([
        { json: "content", js: "content", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponseMeta": o([
        { json: "nextCursor", js: "nextCursor", typ: u(null, undefined, u(null, "")) },
    ], "any"),
    "GetMocksMockIDCallLogsResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponse400Error")) },
    ], "any"),
    "GetMocksMockIDCallLogsResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponse401Error")) },
    ], "any"),
    "GetMocksMockIDCallLogsResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponse404Error")) },
    ], "any"),
    "GetMocksMockIDCallLogsResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDCallLogsResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDCallLogsResponse500Error")) },
    ], "any"),
    "GetMocksMockIDCallLogsResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDResponse": o([
        { json: "mock", js: "mock", typ: u(null, undefined, r("GetMocksMockIDResponseMock")) },
    ], "any"),
    "GetMocksMockIDResponseMock": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "config", js: "config", typ: u(null, undefined, r("GetMocksMockIDResponseMockConfig")) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "deactivated", js: "deactivated", typ: u(null, undefined, true) },
        { json: "environment", js: "environment", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "isPublic", js: "isPublic", typ: u(null, undefined, true) },
        { json: "mockUrl", js: "mockURL", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDResponseMockConfig": o([
        { json: "headers", js: "headers", typ: u(null, undefined, a("any")) },
        { json: "matchBody", js: "matchBody", typ: u(null, undefined, true) },
        { json: "matchQueryParams", js: "matchQueryParams", typ: u(null, undefined, true) },
        { json: "matchWildcards", js: "matchWildcards", typ: u(null, undefined, true) },
        { json: "serverResponseId", js: "serverResponseID", typ: u(null, undefined, u(null, "")) },
    ], "any"),
    "GetMocksMockIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDResponse401Error")) },
    ], "any"),
    "GetMocksMockIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDResponse404Error")) },
    ], "any"),
    "GetMocksMockIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDResponse500Error")) },
    ], "any"),
    "GetMocksMockIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDServerResponsesResponse401Error")) },
    ], "any"),
    "GetMocksMockIDServerResponsesResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDServerResponsesResponse404Error")) },
    ], "any"),
    "GetMocksMockIDServerResponsesResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDServerResponsesResponse500Error")) },
    ], "any"),
    "GetMocksMockIDServerResponsesResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesResponseItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "statusCode", js: "statusCode", typ: u(null, undefined, 3.14) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDServerResponsesServerResponseIDResponse400Error")) },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDServerResponsesServerResponseIDResponse401Error")) },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDServerResponsesServerResponseIDResponse404Error")) },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksMockIDServerResponsesServerResponseIDResponse500Error")) },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksMockIDServerResponsesServerResponseIDResponseItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "statusCode", js: "statusCode", typ: u(null, undefined, 3.14) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksResponse": o([
        { json: "mocks", js: "mocks", typ: u(null, undefined, a(r("GetMocksResponseMocksItem"))) },
    ], "any"),
    "GetMocksResponseMocksItem": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "config", js: "config", typ: u(null, undefined, r("GetMocksResponseMocksItemConfig")) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "environment", js: "environment", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "isPublic", js: "isPublic", typ: u(null, undefined, true) },
        { json: "mockUrl", js: "mockURL", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksResponseMocksItemConfig": o([
        { json: "delay", js: "delay", typ: u(null, undefined, u(null, r("GetMocksResponseMocksItemConfigDelay"))) },
        { json: "headers", js: "headers", typ: u(null, undefined, a("")) },
        { json: "matchBody", js: "matchBody", typ: u(null, undefined, true) },
        { json: "matchQueryParams", js: "matchQueryParams", typ: u(null, undefined, true) },
        { json: "matchWildcards", js: "matchWildcards", typ: u(null, undefined, true) },
        { json: "serverResponseId", js: "serverResponseID", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksResponseMocksItemConfigDelay": o([
        { json: "duration", js: "duration", typ: u(null, undefined, 0) },
        { json: "preset", js: "preset", typ: u(null, undefined, r("Preset")) },
        { json: "type", js: "type", typ: u(null, undefined, r("GetMocksResponseMocksItemConfigDelayType")) },
    ], "any"),
    "GetMocksResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksResponse401Error")) },
    ], "any"),
    "GetMocksResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetMocksResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMocksResponse500Error")) },
    ], "any"),
    "GetMocksResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsMonitorIDResponse": o([
        { json: "monitor", js: "monitor", typ: u(null, undefined, r("GetMonitorsMonitorIDResponseMonitor")) },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitor": o([
        { json: "collectionUid", js: "collectionUid", typ: u(null, undefined, "") },
        { json: "distribution", js: "distribution", typ: u(null, undefined, a("any")) },
        { json: "environmentUid", js: "environmentUid", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastRun", js: "lastRun", typ: u(null, undefined, r("GetMonitorsMonitorIDResponseMonitorLastRun")) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "notifications", js: "notifications", typ: u(null, undefined, r("GetMonitorsMonitorIDResponseMonitorNotifications")) },
        { json: "options", js: "options", typ: u(null, undefined, r("GetMonitorsMonitorIDResponseMonitorOptions")) },
        { json: "owner", js: "owner", typ: u(null, undefined, 3.14) },
        { json: "schedule", js: "schedule", typ: u(null, undefined, r("GetMonitorsMonitorIDResponseMonitorSchedule")) },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitorLastRun": o([
        { json: "finishedAt", js: "finishedAt", typ: u(null, undefined, "") },
        { json: "startedAt", js: "startedAt", typ: u(null, undefined, "") },
        { json: "stats", js: "stats", typ: u(null, undefined, r("GetMonitorsMonitorIDResponseMonitorLastRunStats")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitorLastRunStats": o([
        { json: "assertions", js: "assertions", typ: u(null, undefined, r("GetMonitorsMonitorIDResponseMonitorLastRunStatsAssertions")) },
        { json: "requests", js: "requests", typ: u(null, undefined, r("GetMonitorsMonitorIDResponseMonitorLastRunStatsRequests")) },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitorLastRunStatsAssertions": o([
        { json: "failed", js: "failed", typ: u(null, undefined, 3.14) },
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitorLastRunStatsRequests": o([
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitorNotifications": o([
        { json: "onError", js: "onError", typ: u(null, undefined, a(r("GetMonitorsMonitorIDResponseMonitorNotificationsOnErrorItem"))) },
        { json: "onFailure", js: "onFailure", typ: u(null, undefined, a(r("GetMonitorsMonitorIDResponseMonitorNotificationsOnFailureItem"))) },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitorNotificationsOnErrorItem": o([
        { json: "email", js: "email", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitorNotificationsOnFailureItem": o([
        { json: "email", js: "email", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitorOptions": o([
        { json: "followRedirects", js: "followRedirects", typ: u(null, undefined, true) },
        { json: "requestDelay", js: "requestDelay", typ: u(null, undefined, 3.14) },
        { json: "requestTimeout", js: "requestTimeout", typ: u(null, undefined, 3.14) },
        { json: "strictSSL", js: "strictSSL", typ: u(null, undefined, true) },
    ], "any"),
    "GetMonitorsMonitorIDResponseMonitorSchedule": o([
        { json: "cron", js: "cron", typ: u(null, undefined, "") },
        { json: "nextRun", js: "nextRun", typ: u(null, undefined, "") },
        { json: "timezone", js: "timezone", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsMonitorIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMonitorsMonitorIDResponse401Error")) },
    ], "any"),
    "GetMonitorsMonitorIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsMonitorIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMonitorsMonitorIDResponse404Error")) },
    ], "any"),
    "GetMonitorsMonitorIDResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsMonitorIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsMonitorIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMonitorsMonitorIDResponse500Error")) },
    ], "any"),
    "GetMonitorsMonitorIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsResponse": o([
        { json: "monitors", js: "monitors", typ: u(null, undefined, a(r("GetMonitorsResponseMonitorsItem"))) },
    ], "any"),
    "GetMonitorsResponseMonitorsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMonitorsResponse401Error")) },
    ], "any"),
    "GetMonitorsResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetMonitorsResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetMonitorsResponse500Error")) },
    ], "any"),
    "GetMonitorsResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponse": o([
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetNetworkPrivateNetworkEntityRequestAllResponseMeta")) },
        { json: "requests", js: "requests", typ: u(null, undefined, a(r("GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItem"))) },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponseMeta": o([
        { json: "limit", js: "limit", typ: u(null, undefined, 0) },
        { json: "offset", js: "offset", typ: u(null, undefined, 0) },
        { json: "totalCount", js: "totalCount", typ: u(null, undefined, 0) },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 0) },
        { json: "element", js: "element", typ: u(null, undefined, r("GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItemElement")) },
        { json: "id", js: "id", typ: u(null, undefined, 0) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "response", js: "response", typ: u(null, undefined, r("GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItemResponse")) },
        { json: "status", js: "status", typ: u(null, undefined, r("PurpleStatus")) },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItemElement": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("EntityTypeEnum")) },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponseRequestsItemResponse": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 0) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponse400": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetNetworkPrivateNetworkEntityRequestAllResponse401Error")) },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetNetworkPrivateNetworkEntityRequestAllResponse403Error")) },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetNetworkPrivateNetworkEntityRequestAllResponse500Error")) },
    ], "any"),
    "GetNetworkPrivateNetworkEntityRequestAllResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateResponse": o([
        { json: "elements", js: "elements", typ: u(null, undefined, a(r("GetNetworkPrivateResponseElementsItem"))) },
        { json: "folders", js: "folders", typ: u(null, undefined, a(r("GetNetworkPrivateResponseFoldersItem"))) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetNetworkPrivateResponseMeta")) },
    ], "any"),
    "GetNetworkPrivateResponseElementsItem": o([
        { json: "addedAt", js: "addedAt", typ: u(null, undefined, "") },
        { json: "addedBy", js: "addedBy", typ: u(null, undefined, 0) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 0) },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "href", js: "href", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "parentFolderId", js: "parentFolderID", typ: u(null, undefined, 0) },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, 0) },
    ], "any"),
    "GetNetworkPrivateResponseFoldersItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 0) },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, 0) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "parentFolderId", js: "parentFolderID", typ: u(null, undefined, 0) },
        { json: "type", js: "type", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, 0) },
    ], "any"),
    "GetNetworkPrivateResponseMeta": o([
        { json: "limit", js: "limit", typ: u(null, undefined, 0) },
        { json: "offset", js: "offset", typ: u(null, undefined, 0) },
        { json: "totalCount", js: "totalCount", typ: u(null, undefined, 0) },
    ], "any"),
    "GetNetworkPrivateResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetNetworkPrivateResponse401Error")) },
    ], "any"),
    "GetNetworkPrivateResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetNetworkPrivateResponse403Error")) },
    ], "any"),
    "GetNetworkPrivateResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetNetworkPrivateResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetNetworkPrivateResponse500Error")) },
    ], "any"),
    "GetNetworkPrivateResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsGroupIDResponse": o([
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "members", js: "members", typ: u(null, undefined, r("GetScimV2GroupsGroupIDResponseMembers")) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetScimV2GroupsGroupIDResponseMeta")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "userName", js: "userName", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsGroupIDResponseMembers": o([
        { json: "display", js: "display", typ: u(null, undefined, "") },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsGroupIDResponseMeta": o([
        { json: "created", js: "created", typ: u(null, undefined, "") },
        { json: "lastModified", js: "lastModified", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsGroupIDResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsGroupIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsGroupIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsGroupIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsGroupIDResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetScimV2GroupsGroupIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsResponse": o([
        { json: "itemsPerPage", js: "itemsPerPage", typ: u(null, undefined, 3.14) },
        { json: "Resources", js: "resources", typ: u(null, undefined, a(r("ScimGroupResource"))) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "startIndex", js: "startIndex", typ: u(null, undefined, 3.14) },
        { json: "totalResults", js: "totalResults", typ: u(null, undefined, 3.14) },
    ], "any"),
    "ScimGroupResource": o([
        { json: "displayName", js: "displayName", typ: u(null, undefined, "") },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "members", js: "members", typ: u(null, undefined, r("ScimGroupResourceMembers")) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("ScimGroupResourceMeta")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
    ], "any"),
    "ScimGroupResourceMembers": o([
        { json: "display", js: "display", typ: u(null, undefined, "") },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "ScimGroupResourceMeta": o([
        { json: "created", js: "created", typ: u(null, undefined, "") },
        { json: "lastModified", js: "lastModified", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2GroupsResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetScimV2GroupsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2ResourceTypesResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetScimV2ResourceTypesResponse401Error")) },
    ], "any"),
    "GetScimV2ResourceTypesResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2ResourceTypesResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2ResourceTypesResponseItem": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "schema", js: "schema", typ: u(null, undefined, "") },
        { json: "schemaExtensions", js: "schemaExtensions", typ: u(null, undefined, a(r("GetScimV2ResourceTypesResponseItemSchemaExtensionsItem"))) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
    ], "any"),
    "GetScimV2ResourceTypesResponseItemSchemaExtensionsItem": o([
        { json: "required", js: "required", typ: u(null, undefined, true) },
        { json: "schema", js: "schema", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponse": o([
        { json: "authenticationSchemes", js: "authenticationSchemes", typ: u(null, undefined, a(r("GetScimV2ServiceProviderConfigResponseAuthenticationSchemesItem"))) },
        { json: "bulk", js: "bulk", typ: u(null, undefined, r("GetScimV2ServiceProviderConfigResponseBulk")) },
        { json: "changePassword", js: "changePassword", typ: u(null, undefined, r("GetScimV2ServiceProviderConfigResponseChangePassword")) },
        { json: "documentationUri", js: "documentationURI", typ: u(null, undefined, "") },
        { json: "etag", js: "etag", typ: u(null, undefined, r("GetScimV2ServiceProviderConfigResponseEtag")) },
        { json: "filter", js: "filter", typ: u(null, undefined, r("GetScimV2ServiceProviderConfigResponseFilter")) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetScimV2ServiceProviderConfigResponseMeta")) },
        { json: "patch", js: "patch", typ: u(null, undefined, r("GetScimV2ServiceProviderConfigResponsePatch")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "sort", js: "sort", typ: u(null, undefined, r("GetScimV2ServiceProviderConfigResponseSort")) },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponseAuthenticationSchemesItem": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "specUri", js: "specURI", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponseBulk": o([
        { json: "maxOperations", js: "maxOperations", typ: u(null, undefined, 3.14) },
        { json: "maxPayloadSize", js: "maxPayloadSize", typ: u(null, undefined, 3.14) },
        { json: "supported", js: "supported", typ: u(null, undefined, true) },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponseChangePassword": o([
        { json: "supported", js: "supported", typ: u(null, undefined, true) },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponseEtag": o([
        { json: "supported", js: "supported", typ: u(null, undefined, true) },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponseFilter": o([
        { json: "maxResults", js: "maxResults", typ: u(null, undefined, 3.14) },
        { json: "supported", js: "supported", typ: u(null, undefined, true) },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponseMeta": o([
        { json: "location", js: "location", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponsePatch": o([
        { json: "supported", js: "supported", typ: u(null, undefined, true) },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponseSort": o([
        { json: "supported", js: "supported", typ: u(null, undefined, true) },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2ServiceProviderConfigResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersResponse": o([
        { json: "itemsPerPage", js: "itemsPerPage", typ: u(null, undefined, 3.14) },
        { json: "Resources", js: "resources", typ: u(null, undefined, a(r("ScimUserResource"))) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "startIndex", js: "startIndex", typ: u(null, undefined, 3.14) },
        { json: "totalResults", js: "totalResults", typ: u(null, undefined, 3.14) },
    ], "any"),
    "ScimUserResource": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "meta", js: "meta", typ: u(null, undefined, r("ScimUserResourceMeta")) },
        { json: "name", js: "name", typ: u(null, undefined, r("ScimUserResourceName")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "userName", js: "userName", typ: u(null, undefined, "") },
    ], "any"),
    "ScimUserResourceMeta": o([
        { json: "created", js: "created", typ: u(null, undefined, "") },
        { json: "lastModified", js: "lastModified", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, "") },
    ], "any"),
    "ScimUserResourceName": o([
        { json: "familyName", js: "familyName", typ: u(null, undefined, "") },
        { json: "givenName", js: "givenName", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetScimV2UsersResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersUserIDResponse": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetScimV2UsersUserIDResponseMeta")) },
        { json: "name", js: "name", typ: u(null, undefined, r("GetScimV2UsersUserIDResponseName")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "userName", js: "userName", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersUserIDResponseMeta": o([
        { json: "created", js: "created", typ: u(null, undefined, "") },
        { json: "lastModified", js: "lastModified", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersUserIDResponseName": o([
        { json: "familyName", js: "familyName", typ: u(null, undefined, "") },
        { json: "givenName", js: "givenName", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersUserIDResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersUserIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersUserIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersUserIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetScimV2UsersUserIDResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetScimV2UsersUserIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "GetSecretTypesResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, a(r("GetSecretTypesResponseDataItem"))) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetSecretTypesResponseMeta")) },
    ], "any"),
    "GetSecretTypesResponseDataItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("DatumType")) },
    ], "any"),
    "GetSecretTypesResponseMeta": o([
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetSecretTypesResponse401": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetSecretTypesResponse403": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetSecretTypesResponse500": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetTagsSlugEntitiesResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("GetTagsSlugEntitiesResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("GetTagsSlugEntitiesResponseMeta")) },
    ], "any"),
    "GetTagsSlugEntitiesResponseData": o([
        { json: "entities", js: "entities", typ: a(r("GetTagsSlugEntitiesResponseDataEntitiesItem")) },
    ], "any"),
    "GetTagsSlugEntitiesResponseDataEntitiesItem": o([
        { json: "entityId", js: "entityID", typ: u(null, undefined, "") },
        { json: "entityType", js: "entityType", typ: u(null, undefined, r("EntityTypeEnum")) },
    ], "any"),
    "GetTagsSlugEntitiesResponseMeta": o([
        { json: "count", js: "count", typ: 0 },
        { json: "nextCursor", js: "nextCursor", typ: u(null, undefined, "") },
    ], "any"),
    "GetTagsSlugEntitiesResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "statusCode", js: "statusCode", typ: u(null, undefined, 0) },
    ], "any"),
    "GetTagsSlugEntitiesResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetTagsSlugEntitiesResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetTagsSlugEntitiesResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetTagsSlugEntitiesResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesResponse": o([
        { json: "workspaces", js: "workspaces", typ: u(null, undefined, a(r("GetWorkspacesResponseWorkspacesItem"))) },
    ], "any"),
    "GetWorkspacesResponseWorkspacesItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("VisibilityEnum")) },
        { json: "visibility", js: "visibility", typ: u(null, undefined, r("VisibilityEnum")) },
    ], "any"),
    "GetWorkspacesResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetWorkspacesResponse401Error")) },
    ], "any"),
    "GetWorkspacesResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetWorkspacesResponse500Error")) },
    ], "any"),
    "GetWorkspacesResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDGlobalVariablesResponse": o([
        { json: "values", js: "values", typ: u(null, undefined, a(r("GlobalVariable"))) },
    ], "any"),
    "GlobalVariable": o([
        { json: "enabled", js: "enabled", typ: u(null, undefined, true) },
        { json: "key", js: "key", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("GlobalVariableType")) },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDGlobalVariablesResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponse": o([
        { json: "workspace", js: "workspace", typ: u(null, undefined, r("GetWorkspacesWorkspaceIDResponseWorkspace")) },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponseWorkspace": o([
        { json: "apis", js: "apis", typ: u(null, undefined, a(r("GetWorkspacesWorkspaceIDResponseWorkspaceApisItem"))) },
        { json: "collections", js: "collections", typ: u(null, undefined, a(r("GetWorkspacesWorkspaceIDResponseWorkspaceCollectionsItem"))) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "environments", js: "environments", typ: u(null, undefined, a(r("GetWorkspacesWorkspaceIDResponseWorkspaceEnvironmentsItem"))) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "mocks", js: "mocks", typ: u(null, undefined, a(r("GetWorkspacesWorkspaceIDResponseWorkspaceMocksItem"))) },
        { json: "monitors", js: "monitors", typ: u(null, undefined, a(r("GetWorkspacesWorkspaceIDResponseWorkspaceMonitorsItem"))) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("VisibilityEnum")) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
        { json: "visibility", js: "visibility", typ: u(null, undefined, r("VisibilityEnum")) },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponseWorkspaceApisItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponseWorkspaceCollectionsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponseWorkspaceEnvironmentsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponseWorkspaceMocksItem": o([
        { json: "deactivated", js: "deactivated", typ: u(null, undefined, true) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponseWorkspaceMonitorsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetWorkspacesWorkspaceIDResponse401Error")) },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetWorkspacesWorkspaceIDResponse404Error")) },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "statusCode", js: "statusCode", typ: u(null, undefined, 3.14) },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("GetWorkspacesWorkspaceIDResponse500Error")) },
    ], "any"),
    "GetWorkspacesWorkspaceIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDTagsResponse": o([
        { json: "tags", js: "tags", typ: u(null, undefined, a(r("GetWorkspacesWorkspaceIDTagsResponseTagsItem"))) },
    ], "any"),
    "GetWorkspacesWorkspaceIDTagsResponseTagsItem": o([
        { json: "slug", js: "slug", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDTagsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDTagsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDTagsResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "GetWorkspacesWorkspaceIDTagsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PANElementCreated": o([
        { json: "addedAt", js: "addedAt", typ: u(null, undefined, "") },
        { json: "addedBy", js: "addedBy", typ: u(null, undefined, 0) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 0) },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "environments", js: "environments", typ: u(null, undefined, a("")) },
        { json: "href", js: "href", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "parentFolderId", js: "parentFolderID", typ: u(null, undefined, 0) },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, 0) },
    ], "any"),
    "PANFolderCreated": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 0) },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, 0) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "parentFolderId", js: "parentFolderID", typ: u(null, undefined, 0) },
        { json: "type", js: "type", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, 0) },
    ], "any"),
    "PatchCollectionsCollectionIDBody": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("PatchCollectionsCollectionIDBodyCollection")) },
    ], "any"),
    "PatchCollectionsCollectionIDBodyCollection": o([
        { json: "auth", js: "auth", typ: u(null, undefined, "any") },
        { json: "events", js: "events", typ: u(null, undefined, "any") },
        { json: "info", js: "info", typ: u(null, undefined, r("PatchCollectionsCollectionIDBodyCollectionInfo")) },
        { json: "variables", js: "variables", typ: u(null, undefined, "any") },
    ], "any"),
    "PatchCollectionsCollectionIDBodyCollectionInfo": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PatchCollectionsCollectionIDResponse": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("PatchCollectionsCollectionIDResponseCollection")) },
    ], "any"),
    "PatchCollectionsCollectionIDResponseCollection": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PatchCollectionsCollectionIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PatchCollectionsCollectionIDResponse400Error")) },
    ], "any"),
    "PatchCollectionsCollectionIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PatchCollectionsCollectionIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PatchCollectionsCollectionIDResponse401Error")) },
    ], "any"),
    "PatchCollectionsCollectionIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PatchCollectionsCollectionIDResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PatchCollectionsCollectionIDResponse403Error")) },
    ], "any"),
    "PatchCollectionsCollectionIDResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PatchCollectionsCollectionIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PatchCollectionsCollectionIDResponse404Error")) },
    ], "any"),
    "PatchCollectionsCollectionIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PatchCollectionsCollectionIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PatchCollectionsCollectionIDResponse404ErrorDetails": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "item", js: "item", typ: u(null, undefined, "") },
    ], "any"),
    "PatchCollectionsCollectionIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PatchCollectionsCollectionIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PatchCollectionsCollectionIDResponse500Error")) },
    ], "any"),
    "PatchCollectionsCollectionIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2GroupsGroupIDBody": o([
        { json: "Operations", js: "operations", typ: u(null, undefined, a(r("PatchScimV2GroupsGroupIDBodyOperationsItem"))) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
    ], "any"),
    "PatchScimV2GroupsGroupIDBodyOperationsItem": o([
        { json: "op", js: "op", typ: u(null, undefined, r("PurpleOp")) },
        { json: "path", js: "path", typ: u(null, undefined, "") },
        { json: "value", js: "value", typ: u(null, undefined, r("PatchScimV2GroupsGroupIDBodyOperationsItemValue")) },
    ], "any"),
    "PatchScimV2GroupsGroupIDBodyOperationsItemValue": o([
        { json: "displayName", js: "displayName", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2GroupsGroupIDResponse": o([
        { json: "displayName", js: "displayName", typ: u(null, undefined, "") },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "meta", js: "meta", typ: u(null, undefined, r("PatchScimV2GroupsGroupIDResponseMeta")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
    ], "any"),
    "PatchScimV2GroupsGroupIDResponseMeta": o([
        { json: "created", js: "created", typ: u(null, undefined, "") },
        { json: "lastModified", js: "lastModified", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2GroupsGroupIDResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "scimType", js: "scimType", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2GroupsGroupIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2GroupsGroupIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2GroupsGroupIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2GroupsGroupIDResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PatchScimV2GroupsGroupIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2UsersUserIDBody": o([
        { json: "Operations", js: "operations", typ: u(null, undefined, a(r("PatchScimV2UsersUserIDBodyOperationsItem"))) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
    ], "any"),
    "PatchScimV2UsersUserIDBodyOperationsItem": o([
        { json: "op", js: "op", typ: u(null, undefined, r("FluffyOp")) },
        { json: "value", js: "value", typ: u(null, undefined, r("PatchScimV2UsersUserIDBodyOperationsItemValue")) },
    ], "any"),
    "PatchScimV2UsersUserIDBodyOperationsItemValue": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
    ], "any"),
    "PatchScimV2UsersUserIDResponse": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "meta", js: "meta", typ: u(null, undefined, r("PatchScimV2UsersUserIDResponseMeta")) },
        { json: "name", js: "name", typ: u(null, undefined, r("PatchScimV2UsersUserIDResponseName")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "userName", js: "userName", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2UsersUserIDResponseMeta": o([
        { json: "created", js: "created", typ: u(null, undefined, "") },
        { json: "lastModified", js: "lastModified", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2UsersUserIDResponseName": o([
        { json: "familyName", js: "familyName", typ: u(null, undefined, "") },
        { json: "givenName", js: "givenName", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2UsersUserIDResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2UsersUserIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2UsersUserIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2UsersUserIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PatchScimV2UsersUserIDResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PatchScimV2UsersUserIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDCollectionsResponse": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDCollectionsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDCollectionsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDCollectionsResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDCollectionsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDSchemasBody": o([
        { json: "files", js: "files", typ: a(r("PostApisAPIIDSchemasBodyFilesItem")) },
        { json: "type", js: "type", typ: r("PostApisAPIIDSchemasBodyType") },
    ], "any"),
    "PostApisAPIIDSchemasBodyFilesItem": o([
        { json: "content", js: "content", typ: u(null, undefined, "") },
        { json: "path", js: "path", typ: u(null, undefined, "") },
        { json: "root", js: "root", typ: u(null, undefined, r("PostApisAPIIDSchemasBodyFilesItemRoot")) },
    ], "any"),
    "PostApisAPIIDSchemasBodyFilesItemRoot": o([
        { json: "enabled", js: "enabled", typ: u(null, undefined, true) },
    ], "any"),
    "PostApisAPIIDSchemasResponse": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "files", js: "files", typ: u(null, undefined, a(r("PostApisAPIIDSchemasResponseFilesItem"))) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("PostApisAPIIDSchemasBodyType")) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDSchemasResponseFilesItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "path", js: "path", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDSchemasResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDSchemasResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDSchemasResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDSchemasResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDSchemasResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDSchemasResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDVersionsResponse": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "releaseNotes", js: "releaseNotes", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDVersionsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDVersionsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDVersionsResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDVersionsResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisAPIIDVersionsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisBody": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisResponse": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 3.14) },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostApisResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostApisResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsBody": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("PostCollectionsBodyCollection")) },
    ], "any"),
    "PostCollectionsBodyCollection": o([
        { json: "info", js: "info", typ: r("PostCollectionsBodyCollectionInfo") },
        { json: "item", js: "item", typ: u(null, undefined, a(r("PostCollectionsBodyCollectionItemItem"))) },
    ], "any"),
    "PostCollectionsBodyCollectionInfo": o([
        { json: "name", js: "name", typ: "" },
        { json: "schema", js: "schema", typ: "" },
    ], "any"),
    "PostCollectionsBodyCollectionItemItem": o([
        { json: "request", js: "request", typ: "any" },
    ], "any"),
    "PostCollectionsCollectionIDFoldersBody": o([
        { json: "folder", js: "folder", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDFoldersResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("PostCollectionsCollectionIDFoldersResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "revision", js: "revision", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostCollectionsCollectionIDFoldersResponseData": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "folder", js: "folder", typ: u(null, undefined, "") },
        { json: "folders", js: "folders", typ: u(null, undefined, a("")) },
        { json: "folders_order", js: "foldersOrder", typ: u(null, undefined, a("")) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastUpdatedBy", js: "lastUpdatedBy", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "order", js: "order", typ: u(null, undefined, a("")) },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "requests", js: "requests", typ: u(null, undefined, a("")) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDFoldersResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsCollectionIDFoldersResponse400Error")) },
    ], "any"),
    "PostCollectionsCollectionIDFoldersResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostCollectionsCollectionIDFoldersResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDFoldersResponse400ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDFoldersResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsCollectionIDFoldersResponse401Error")) },
    ], "any"),
    "PostCollectionsCollectionIDFoldersResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostCollectionsCollectionIDFoldersResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDFoldersResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDFoldersResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDRequestsBody": o([
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDRequestsResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("PostCollectionsCollectionIDRequestsResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "revision", js: "revision", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostCollectionsCollectionIDRequestsResponseData": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "folder", js: "folder", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastUpdatedBy", js: "lastUpdatedBy", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "responses", js: "responses", typ: u(null, undefined, a("")) },
        { json: "responses_order", js: "responsesOrder", typ: u(null, undefined, a("")) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDRequestsResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsCollectionIDRequestsResponse400Error")) },
    ], "any"),
    "PostCollectionsCollectionIDRequestsResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostCollectionsCollectionIDRequestsResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDRequestsResponse400ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDRequestsResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsCollectionIDRequestsResponse401Error")) },
    ], "any"),
    "PostCollectionsCollectionIDRequestsResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostCollectionsCollectionIDRequestsResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDRequestsResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDRequestsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDResponsesBody": o([
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDResponsesResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("PostCollectionsCollectionIDResponsesResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "revision", js: "revision", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostCollectionsCollectionIDResponsesResponseData": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastUpdatedBy", js: "lastUpdatedBy", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "request", js: "request", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDResponsesResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsCollectionIDResponsesResponse400Error")) },
    ], "any"),
    "PostCollectionsCollectionIDResponsesResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostCollectionsCollectionIDResponsesResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDResponsesResponse400ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDResponsesResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsCollectionIDResponsesResponse401Error")) },
    ], "any"),
    "PostCollectionsCollectionIDResponsesResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostCollectionsCollectionIDResponsesResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDResponsesResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsCollectionIDResponsesResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsForkCollectionIDBody": o([
        { json: "label", js: "label", typ: "" },
    ], "any"),
    "PostCollectionsForkCollectionIDResponse": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("PostCollectionsForkCollectionIDResponseCollection")) },
    ], "any"),
    "PostCollectionsForkCollectionIDResponseCollection": o([
        { json: "fork", js: "fork", typ: u(null, undefined, r("PostCollectionsForkCollectionIDResponseCollectionFork")) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsForkCollectionIDResponseCollectionFork": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "from", js: "from", typ: u(null, undefined, "") },
        { json: "label", js: "label", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsForkCollectionIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsForkCollectionIDResponse401Error")) },
    ], "any"),
    "PostCollectionsForkCollectionIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsForkCollectionIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsForkCollectionIDResponse404Error")) },
    ], "any"),
    "PostCollectionsForkCollectionIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostCollectionsForkCollectionIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsForkCollectionIDResponse404ErrorDetails": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "item", js: "item", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsForkCollectionIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsForkCollectionIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsForkCollectionIDResponse500Error")) },
    ], "any"),
    "PostCollectionsForkCollectionIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsMergeBody": o([
        { json: "destination", js: "destination", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "strategy", js: "strategy", typ: u(null, undefined, r("Strategy")) },
    ], "any"),
    "PostCollectionsMergeResponse": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("PostCollectionsMergeResponseCollection")) },
    ], "any"),
    "PostCollectionsMergeResponseCollection": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsMergeResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsMergeResponse401Error")) },
    ], "any"),
    "PostCollectionsMergeResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsMergeResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsMergeResponse404Error")) },
    ], "any"),
    "PostCollectionsMergeResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostCollectionsMergeResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsMergeResponse404ErrorDetails": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "item", js: "item", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsMergeResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsMergeResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsMergeResponse500Error")) },
    ], "any"),
    "PostCollectionsMergeResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsResponse": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("PostCollectionsResponseCollection")) },
    ], "any"),
    "PostCollectionsResponseCollection": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsResponse400Error")) },
    ], "any"),
    "PostCollectionsResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsResponse401Error")) },
    ], "any"),
    "PostCollectionsResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostCollectionsResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostCollectionsResponse500Error")) },
    ], "any"),
    "PostCollectionsResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostDetectedSecretsQueriesBody": o([
        { json: "resolved", js: "resolved", typ: u(null, undefined, true) },
        { json: "secretTypes", js: "secretTypes", typ: u(null, undefined, a("")) },
        { json: "statuses", js: "statuses", typ: u(null, undefined, a(r("Resolution"))) },
        { json: "workspaceIds", js: "workspaceIDS", typ: u(null, undefined, a("")) },
        { json: "workspaceVisiblities", js: "workspaceVisiblities", typ: u(null, undefined, a("")) },
    ], "any"),
    "PostDetectedSecretsQueriesResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, a(r("PostDetectedSecretsQueriesResponseDataItem"))) },
        { json: "meta", js: "meta", typ: u(null, undefined, r("PostDetectedSecretsQueriesResponseMeta")) },
    ], "any"),
    "PostDetectedSecretsQueriesResponseDataItem": o([
        { json: "detectedAt", js: "detectedAt", typ: u(null, undefined, "") },
        { json: "obfuscatedSecret", js: "obfuscatedSecret", typ: u(null, undefined, "") },
        { json: "occurrences", js: "occurrences", typ: u(null, undefined, 3.14) },
        { json: "resolution", js: "resolution", typ: u(null, undefined, r("ResolutionEnum")) },
        { json: "secretHash", js: "secretHash", typ: u(null, undefined, "") },
        { json: "secretId", js: "secretID", typ: u(null, undefined, "") },
        { json: "secretType", js: "secretType", typ: u(null, undefined, "") },
        { json: "workspaceId", js: "workspaceID", typ: u(null, undefined, "") },
        { json: "workspaceVisibility", js: "workspaceVisibility", typ: u(null, undefined, r("WorkspaceVisibility")) },
    ], "any"),
    "PostDetectedSecretsQueriesResponseMeta": o([
        { json: "limit", js: "limit", typ: u(null, undefined, 3.14) },
        { json: "nextCursor", js: "nextCursor", typ: u(null, undefined, u(null, "")) },
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostDetectedSecretsQueriesResponse400": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostDetectedSecretsQueriesResponse401": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostDetectedSecretsQueriesResponse403": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostDetectedSecretsQueriesResponse500": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PostEnvironmentsBody": o([
        { json: "environment", js: "environment", typ: u(null, undefined, r("PostEnvironmentsBodyEnvironment")) },
    ], "any"),
    "PostEnvironmentsBodyEnvironment": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: u(null, undefined, a(a(r("PostEnvironmentsBodyEnvironmentValuesItemItem")))) },
    ], "any"),
    "PostEnvironmentsBodyEnvironmentValuesItemItem": o([
        { json: "enabled", js: "enabled", typ: u(null, undefined, true) },
        { json: "key", js: "key", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("PurpleType")) },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "PostEnvironmentsResponse": o([
        { json: "environment", js: "environment", typ: u(null, undefined, r("PostEnvironmentsResponseEnvironment")) },
    ], "any"),
    "PostEnvironmentsResponseEnvironment": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PostEnvironmentsResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostEnvironmentsResponse400Error")) },
    ], "any"),
    "PostEnvironmentsResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostEnvironmentsResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostEnvironmentsResponse401Error")) },
    ], "any"),
    "PostEnvironmentsResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostEnvironmentsResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostEnvironmentsResponse403Error")) },
    ], "any"),
    "PostEnvironmentsResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostEnvironmentsResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostEnvironmentsResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostEnvironmentsResponse500Error")) },
    ], "any"),
    "PostEnvironmentsResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostImportOpenapiResponse": o([
        { json: "collections", js: "collections", typ: u(null, undefined, a(r("PostImportOpenapiResponseCollectionsItem"))) },
    ], "any"),
    "PostImportOpenapiResponseCollectionsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PostImportOpenapiResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostImportOpenapiResponse400Error")) },
    ], "any"),
    "PostImportOpenapiResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostImportOpenapiResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostImportOpenapiResponse400ErrorDetails": o([
        { json: "param", js: "param", typ: u(null, undefined, "") },
    ], "any"),
    "PostImportOpenapiResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostImportOpenapiResponse401Error")) },
    ], "any"),
    "PostImportOpenapiResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostImportOpenapiResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostImportOpenapiResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostImportOpenapiResponse500Error")) },
    ], "any"),
    "PostImportOpenapiResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksBody": o([
        { json: "mock", js: "mock", typ: u(null, undefined, r("PostMocksBodyMock")) },
    ], "any"),
    "PostMocksBodyMock": o([
        { json: "collection", js: "collection", typ: "" },
        { json: "environment", js: "environment", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "private", js: "private", typ: u(null, undefined, true) },
    ], "any"),
    "PostMocksMockIDPublishResponse": o([
        { json: "mock", js: "mock", typ: u(null, undefined, r("PostMocksMockIDPublishResponseMock")) },
    ], "any"),
    "PostMocksMockIDPublishResponseMock": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDPublishResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksMockIDPublishResponse400Error")) },
    ], "any"),
    "PostMocksMockIDPublishResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDPublishResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksMockIDPublishResponse401Error")) },
    ], "any"),
    "PostMocksMockIDPublishResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDPublishResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksMockIDPublishResponse404Error")) },
    ], "any"),
    "PostMocksMockIDPublishResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDPublishResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDPublishResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksMockIDPublishResponse500Error")) },
    ], "any"),
    "PostMocksMockIDPublishResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDServerResponsesBody": o([
        { json: "serverResponse", js: "serverResponse", typ: u(null, undefined, r("PostMocksMockIDServerResponsesBodyServerResponse")) },
    ], "any"),
    "PostMocksMockIDServerResponsesBodyServerResponse": o([
        { json: "body", js: "body", typ: u(null, undefined, "") },
        { json: "headers", js: "headers", typ: u(null, undefined, a(r("PostMocksMockIDServerResponsesBodyServerResponseHeadersItem"))) },
        { json: "language", js: "language", typ: u(null, undefined, r("DeleteMocksMockIDServerResponsesServerResponseIDResponseLanguage")) },
        { json: "name", js: "name", typ: "" },
        { json: "statusCode", js: "statusCode", typ: 0 },
    ], "any"),
    "PostMocksMockIDServerResponsesBodyServerResponseHeadersItem": o([
        { json: "key", js: "key", typ: u(null, undefined, "") },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDServerResponsesResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksMockIDServerResponsesResponse400Error")) },
    ], "any"),
    "PostMocksMockIDServerResponsesResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostMocksMockIDServerResponsesResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDServerResponsesResponse400ErrorDetails": o([
        { json: "param", js: "param", typ: u(null, undefined, a("")) },
    ], "any"),
    "PostMocksMockIDServerResponsesResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksMockIDServerResponsesResponse401Error")) },
    ], "any"),
    "PostMocksMockIDServerResponsesResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDServerResponsesResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDServerResponsesResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksMockIDServerResponsesResponse500Error")) },
    ], "any"),
    "PostMocksMockIDServerResponsesResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksMockIDServerResponsesResponseItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "statusCode", js: "statusCode", typ: u(null, undefined, 3.14) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksResponse": o([
        { json: "mock", js: "mock", typ: u(null, undefined, r("PostMocksResponseMock")) },
    ], "any"),
    "PostMocksResponseMock": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "config", js: "config", typ: u(null, undefined, r("PostMocksResponseMockConfig")) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "environment", js: "environment", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "mockUrl", js: "mockURL", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksResponseMockConfig": o([
        { json: "delay", js: "delay", typ: u(null, undefined, u(null, r("PostMocksResponseMockConfigDelay"))) },
        { json: "headers", js: "headers", typ: u(null, undefined, a("")) },
        { json: "matchBody", js: "matchBody", typ: u(null, undefined, true) },
        { json: "matchQueryParams", js: "matchQueryParams", typ: u(null, undefined, true) },
        { json: "matchWildcards", js: "matchWildcards", typ: u(null, undefined, true) },
        { json: "serverResponseId", js: "serverResponseID", typ: u(null, undefined, u(null, "")) },
    ], "any"),
    "PostMocksResponseMockConfigDelay": o([
        { json: "duration", js: "duration", typ: u(null, undefined, 0) },
        { json: "preset", js: "preset", typ: u(null, undefined, r("Preset")) },
        { json: "type", js: "type", typ: u(null, undefined, r("GetMocksResponseMocksItemConfigDelayType")) },
    ], "any"),
    "PostMocksResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksResponse400Error")) },
    ], "any"),
    "PostMocksResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PostMocksResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksResponse400ErrorDetails": o([
        { json: "param", js: "param", typ: u(null, undefined, a("")) },
    ], "any"),
    "PostMocksResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksResponse401Error")) },
    ], "any"),
    "PostMocksResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostMocksResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMocksResponse500Error")) },
    ], "any"),
    "PostMocksResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsBody": o([
        { json: "monitor", js: "monitor", typ: u(null, undefined, r("PostMonitorsBodyMonitor")) },
    ], "any"),
    "PostMonitorsBodyMonitor": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "environment", js: "environment", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "schedule", js: "schedule", typ: u(null, undefined, r("PostMonitorsBodyMonitorSchedule")) },
    ], "any"),
    "PostMonitorsBodyMonitorSchedule": o([
        { json: "cron", js: "cron", typ: u(null, undefined, "") },
        { json: "timezone", js: "timezone", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsMonitorIDRunResponse": o([
        { json: "run", js: "run", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponseRun")) },
    ], "any"),
    "PostMonitorsMonitorIDRunResponseRun": o([
        { json: "executions", js: "executions", typ: u(null, undefined, a(r("PostMonitorsMonitorIDRunResponseRunExecutionsItem"))) },
        { json: "failures", js: "failures", typ: u(null, undefined, a("any")) },
        { json: "info", js: "info", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponseRunInfo")) },
        { json: "stats", js: "stats", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponseRunStats")) },
    ], "any"),
    "PostMonitorsMonitorIDRunResponseRunExecutionsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, 3.14) },
        { json: "item", js: "item", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponseRunExecutionsItemItem")) },
        { json: "request", js: "request", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponseRunExecutionsItemRequest")) },
        { json: "response", js: "response", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponseRunExecutionsItemResponse")) },
    ], "any"),
    "PostMonitorsMonitorIDRunResponseRunExecutionsItemItem": o([
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsMonitorIDRunResponseRunExecutionsItemRequest": o([
        { json: "body", js: "body", typ: u(null, undefined, "any") },
        { json: "headers", js: "headers", typ: u(null, undefined, "any") },
        { json: "method", js: "method", typ: u(null, undefined, "") },
        { json: "timestamp", js: "timestamp", typ: u(null, undefined, "") },
        { json: "url", js: "url", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsMonitorIDRunResponseRunExecutionsItemResponse": o([
        { json: "body", js: "body", typ: u(null, undefined, "any") },
        { json: "code", js: "code", typ: u(null, undefined, 3.14) },
        { json: "headers", js: "headers", typ: u(null, undefined, "any") },
        { json: "responseSize", js: "responseSize", typ: u(null, undefined, 3.14) },
        { json: "responseTime", js: "responseTime", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostMonitorsMonitorIDRunResponseRunInfo": o([
        { json: "collectionUid", js: "collectionUid", typ: u(null, undefined, "") },
        { json: "environmentUid", js: "environmentUid", typ: u(null, undefined, "") },
        { json: "finishedAt", js: "finishedAt", typ: u(null, undefined, "") },
        { json: "jobId", js: "jobID", typ: u(null, undefined, "") },
        { json: "monitorId", js: "monitorID", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "startedAt", js: "startedAt", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsMonitorIDRunResponseRunStats": o([
        { json: "assertions", js: "assertions", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponseRunStatsAssertions")) },
        { json: "requests", js: "requests", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponseRunStatsRequests")) },
    ], "any"),
    "PostMonitorsMonitorIDRunResponseRunStatsAssertions": o([
        { json: "failed", js: "failed", typ: u(null, undefined, 3.14) },
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostMonitorsMonitorIDRunResponseRunStatsRequests": o([
        { json: "failed", js: "failed", typ: u(null, undefined, 3.14) },
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostMonitorsMonitorIDRunResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponse401Error")) },
    ], "any"),
    "PostMonitorsMonitorIDRunResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsMonitorIDRunResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsMonitorIDRunResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMonitorsMonitorIDRunResponse500Error")) },
    ], "any"),
    "PostMonitorsMonitorIDRunResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsResponse": o([
        { json: "monitor", js: "monitor", typ: u(null, undefined, r("PostMonitorsResponseMonitor")) },
    ], "any"),
    "PostMonitorsResponseMonitor": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMonitorsResponse400Error")) },
    ], "any"),
    "PostMonitorsResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, "any") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMonitorsResponse401Error")) },
    ], "any"),
    "PostMonitorsResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMonitorsResponse403Error")) },
    ], "any"),
    "PostMonitorsResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostMonitorsResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostMonitorsResponse500Error")) },
    ], "any"),
    "PostMonitorsResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostNetworkPrivateResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostNetworkPrivateResponse401Error")) },
    ], "any"),
    "PostNetworkPrivateResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostNetworkPrivateResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostNetworkPrivateResponse403Error")) },
    ], "any"),
    "PostNetworkPrivateResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostNetworkPrivateResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostNetworkPrivateResponse404Error")) },
    ], "any"),
    "PostNetworkPrivateResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostNetworkPrivateResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostNetworkPrivateResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostNetworkPrivateResponse500Error")) },
    ], "any"),
    "PostNetworkPrivateResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2GroupsBody": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "groups", js: "groups", typ: u(null, undefined, a("")) },
        { json: "locale", js: "locale", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, r("PostScimV2GroupsBodyName")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "userName", js: "userName", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2GroupsBodyName": o([
        { json: "familyName", js: "familyName", typ: u(null, undefined, "") },
        { json: "givenName", js: "givenName", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2GroupsResponse": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "meta", js: "meta", typ: u(null, undefined, r("PostScimV2GroupsResponseMeta")) },
        { json: "name", js: "name", typ: u(null, undefined, r("PostScimV2GroupsResponseName")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "userName", js: "userName", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2GroupsResponseMeta": o([
        { json: "created", js: "created", typ: u(null, undefined, "") },
        { json: "lastModified", js: "lastModified", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, r("MetaResourceType")) },
    ], "any"),
    "PostScimV2GroupsResponseName": o([
        { json: "familyName", js: "familyName", typ: u(null, undefined, "") },
        { json: "givenName", js: "givenName", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2GroupsResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "scimType", js: "scimType", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2GroupsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2GroupsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2GroupsResponse409": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "scimType", js: "scimType", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2GroupsResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostScimV2GroupsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2UsersBody": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "groups", js: "groups", typ: u(null, undefined, a("")) },
        { json: "locale", js: "locale", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, r("PostScimV2UsersBodyName")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "userName", js: "userName", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2UsersBodyName": o([
        { json: "familyName", js: "familyName", typ: u(null, undefined, "") },
        { json: "givenName", js: "givenName", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2UsersResponse": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "meta", js: "meta", typ: u(null, undefined, r("PostScimV2UsersResponseMeta")) },
        { json: "name", js: "name", typ: u(null, undefined, r("PostScimV2UsersResponseName")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "userName", js: "userName", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2UsersResponseMeta": o([
        { json: "created", js: "created", typ: u(null, undefined, "") },
        { json: "lastModified", js: "lastModified", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, r("MetaResourceType")) },
    ], "any"),
    "PostScimV2UsersResponseName": o([
        { json: "familyName", js: "familyName", typ: u(null, undefined, "") },
        { json: "givenName", js: "givenName", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2UsersResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "scimType", js: "scimType", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2UsersResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2UsersResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2UsersResponse409": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "scimType", js: "scimType", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostScimV2UsersResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PostScimV2UsersResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PostSecurityAPIValidationBody": o([
        { json: "schema", js: "schema", typ: u(null, undefined, r("PostSecurityAPIValidationBodySchema")) },
    ], "any"),
    "PostSecurityAPIValidationBodySchema": o([
        { json: "language", js: "language", typ: r("SchemaLanguage") },
        { json: "schema", js: "schema", typ: "" },
        { json: "type", js: "type", typ: r("FluffyType") },
    ], "any"),
    "PostSecurityAPIValidationResponse": o([
        { json: "warnings", js: "warnings", typ: u(null, undefined, a("any")) },
    ], "any"),
    "PostSecurityAPIValidationResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostSecurityAPIValidationResponse400Error")) },
    ], "any"),
    "PostSecurityAPIValidationResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostSecurityAPIValidationResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostSecurityAPIValidationResponse401Error")) },
    ], "any"),
    "PostSecurityAPIValidationResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostSecurityAPIValidationResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostSecurityAPIValidationResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostSecurityAPIValidationResponse500Error")) },
    ], "any"),
    "PostSecurityAPIValidationResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostWebhooksBody": o([
        { json: "webhook", js: "webhook", typ: u(null, undefined, r("PostWebhooksBodyWebhook")) },
    ], "any"),
    "PostWebhooksBodyWebhook": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostWebhooksResponse": o([
        { json: "webhook", js: "webhook", typ: u(null, undefined, r("PostWebhooksResponseWebhook")) },
    ], "any"),
    "PostWebhooksResponseWebhook": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
        { json: "webhookUrl", js: "webhookURL", typ: u(null, undefined, "") },
    ], "any"),
    "PostWebhooksResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostWebhooksResponse401Error")) },
    ], "any"),
    "PostWebhooksResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostWebhooksResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostWebhooksResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostWebhooksResponse500Error")) },
    ], "any"),
    "PostWebhooksResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostWorkspacesBody": o([
        { json: "workspace", js: "workspace", typ: u(null, undefined, r("PostWorkspacesBodyWorkspace")) },
    ], "any"),
    "PostWorkspacesBodyWorkspace": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: r("VisibilityEnum") },
    ], "any"),
    "PostWorkspacesResponse": o([
        { json: "workspace", js: "workspace", typ: u(null, undefined, r("PostWorkspacesResponseWorkspace")) },
    ], "any"),
    "PostWorkspacesResponseWorkspace": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostWorkspacesResponse400": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostWorkspacesResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostWorkspacesResponse401Error")) },
    ], "any"),
    "PostWorkspacesResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostWorkspacesResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostWorkspacesResponse404Error")) },
    ], "any"),
    "PostWorkspacesResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PostWorkspacesResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PostWorkspacesResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PostWorkspacesResponse500Error")) },
    ], "any"),
    "PostWorkspacesResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDBody": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse": o([
        { json: "taskId", js: "taskID", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDCollectionsCollectionIDSyncWithSchemaTasksResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDResponse": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDSchemasSchemaIDFilesFilePathBody": o([
        { json: "content", js: "content", typ: "" },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "root", js: "root", typ: u(null, undefined, r("PutApisAPIIDSchemasSchemaIDFilesFilePathBodyRoot")) },
    ], "any"),
    "PutApisAPIIDSchemasSchemaIDFilesFilePathBodyRoot": o([
        { json: "enabled", js: "enabled", typ: u(null, undefined, true) },
    ], "any"),
    "PutApisAPIIDSchemasSchemaIDFilesFilePathResponse": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "path", js: "path", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDSchemasSchemaIDFilesFilePathResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDSchemasSchemaIDFilesFilePathResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDSchemasSchemaIDFilesFilePathResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDSchemasSchemaIDFilesFilePathResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDSchemasSchemaIDFilesFilePathResponse422": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDSchemasSchemaIDFilesFilePathResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDTagsBody": o([
        { json: "tags", js: "tags", typ: a(r("PutApisAPIIDTagsBodyTagsItem")) },
    ], "any"),
    "PutApisAPIIDTagsBodyTagsItem": o([
        { json: "slug", js: "slug", typ: "" },
    ], "any"),
    "PutApisAPIIDTagsResponse": o([
        { json: "tags", js: "tags", typ: u(null, undefined, a(r("PutApisAPIIDTagsResponseTagsItem"))) },
    ], "any"),
    "PutApisAPIIDTagsResponseTagsItem": o([
        { json: "slug", js: "slug", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDTagsResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDTagsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDTagsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDTagsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDVersionsVersionIDBody": o([
        { json: "name", js: "name", typ: "" },
        { json: "releaseNotes", js: "releaseNotes", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDVersionsVersionIDResponse": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "releaseNotes", js: "releaseNotes", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDVersionsVersionIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDVersionsVersionIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDVersionsVersionIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutApisAPIIDVersionsVersionIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDBody": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("PutCollectionsCollectionIDBodyCollection")) },
    ], "any"),
    "PutCollectionsCollectionIDBodyCollection": o([
        { json: "info", js: "info", typ: r("PutCollectionsCollectionIDBodyCollectionInfo") },
        { json: "item", js: "item", typ: a(r("PutCollectionsCollectionIDBodyCollectionItemItem")) },
    ], "any"),
    "PutCollectionsCollectionIDBodyCollectionInfo": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "schema", js: "schema", typ: "" },
    ], "any"),
    "PutCollectionsCollectionIDBodyCollectionItemItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDBody": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("PutCollectionsCollectionIDFoldersFolderIDResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "revision", js: "revision", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponseData": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "folder", js: "folder", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastRevision", js: "lastRevision", typ: u(null, undefined, 3.14) },
        { json: "lastUpdatedBy", js: "lastUpdatedBy", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDFoldersFolderIDResponse400Error")) },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDFoldersFolderIDResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse400ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDFoldersFolderIDResponse401Error")) },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDFoldersFolderIDResponse404Error")) },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse404ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDFoldersFolderIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDBody": o([
        { json: "method", js: "method", typ: u(null, undefined, r("Method")) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("PutCollectionsCollectionIDRequestsRequestIDResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "revision", js: "revision", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponseData": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastRevision", js: "lastRevision", typ: u(null, undefined, 3.14) },
        { json: "lastUpdatedBy", js: "lastUpdatedBy", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDRequestsRequestIDResponse400Error")) },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDRequestsRequestIDResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse400ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDRequestsRequestIDResponse401Error")) },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDRequestsRequestIDResponse404Error")) },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse404ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDRequestsRequestIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponse": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("PutCollectionsCollectionIDResponseCollection")) },
    ], "any"),
    "PutCollectionsCollectionIDResponseCollection": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDResponse400Error")) },
    ], "any"),
    "PutCollectionsCollectionIDResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDResponse401Error")) },
    ], "any"),
    "PutCollectionsCollectionIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDResponse403Error")) },
    ], "any"),
    "PutCollectionsCollectionIDResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDResponse404Error")) },
    ], "any"),
    "PutCollectionsCollectionIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponse404ErrorDetails": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "item", js: "item", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDResponse500Error")) },
    ], "any"),
    "PutCollectionsCollectionIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDBody": o([
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "responseCode", js: "responseCode", typ: u(null, undefined, r("PutCollectionsCollectionIDResponsesResponseIDBodyResponseCode")) },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDBodyResponseCode": o([
        { json: "code", js: "code", typ: u(null, undefined, 3.14) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse": o([
        { json: "data", js: "data", typ: u(null, undefined, r("PutCollectionsCollectionIDResponsesResponseIDResponseData")) },
        { json: "meta", js: "meta", typ: u(null, undefined, "any") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponseData": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "lastRevision", js: "lastRevision", typ: u(null, undefined, 0) },
        { json: "lastUpdatedBy", js: "lastUpdatedBy", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDResponsesResponseIDResponse400Error")) },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDResponsesResponseIDResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse400ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDResponsesResponseIDResponse401Error")) },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse401Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse401ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutCollectionsCollectionIDResponsesResponseIDResponse404Error")) },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse404ErrorDetails": o([
        { json: "model", js: "model", typ: u(null, undefined, "") },
        { json: "model_id", js: "modelID", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDResponsesResponseIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDTagsBody": o([
        { json: "tags", js: "tags", typ: a(r("PutCollectionsCollectionIDTagsBodyTagsItem")) },
    ], "any"),
    "PutCollectionsCollectionIDTagsBodyTagsItem": o([
        { json: "slug", js: "slug", typ: "" },
    ], "any"),
    "PutCollectionsCollectionIDTagsResponse": o([
        { json: "tags", js: "tags", typ: u(null, undefined, a(r("PutCollectionsCollectionIDTagsResponseTagsItem"))) },
    ], "any"),
    "PutCollectionsCollectionIDTagsResponseTagsItem": o([
        { json: "slug", js: "slug", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDTagsResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDTagsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDTagsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDTagsResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutCollectionsCollectionIDTagsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutDetectedSecretsSecretIDBody": o([
        { json: "resolution", js: "resolution", typ: r("Resolution") },
        { json: "workspaceId", js: "workspaceID", typ: "" },
    ], "any"),
    "PutDetectedSecretsSecretIDResponse": o([
        { json: "history", js: "history", typ: u(null, undefined, a(r("PutDetectedSecretsSecretIDResponseHistoryItem"))) },
        { json: "resolution", js: "resolution", typ: u(null, undefined, r("ResolutionEnum")) },
        { json: "secretHash", js: "secretHash", typ: u(null, undefined, "") },
        { json: "workspaceId", js: "workspaceID", typ: u(null, undefined, "") },
    ], "any"),
    "PutDetectedSecretsSecretIDResponseHistoryItem": o([
        { json: "actor", js: "actor", typ: u(null, undefined, 3.14) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "resolution", js: "resolution", typ: u(null, undefined, r("ResolutionEnum")) },
    ], "any"),
    "PutDetectedSecretsSecretIDResponse401": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutDetectedSecretsSecretIDResponse403": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutDetectedSecretsSecretIDResponse500": o([
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutEnvironmentsEnvironmentIDBody": o([
        { json: "environment", js: "environment", typ: u(null, undefined, r("PutEnvironmentsEnvironmentIDBodyEnvironment")) },
    ], "any"),
    "PutEnvironmentsEnvironmentIDBodyEnvironment": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: u(null, undefined, a(a(r("PutEnvironmentsEnvironmentIDBodyEnvironmentValuesItemItem")))) },
    ], "any"),
    "PutEnvironmentsEnvironmentIDBodyEnvironmentValuesItemItem": o([
        { json: "enabled", js: "enabled", typ: u(null, undefined, true) },
        { json: "key", js: "key", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("PurpleType")) },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "PutEnvironmentsEnvironmentIDResponse": o([
        { json: "environment", js: "environment", typ: u(null, undefined, r("PutEnvironmentsEnvironmentIDResponseEnvironment")) },
    ], "any"),
    "PutEnvironmentsEnvironmentIDResponseEnvironment": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PutEnvironmentsEnvironmentIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutEnvironmentsEnvironmentIDResponse400Error")) },
    ], "any"),
    "PutEnvironmentsEnvironmentIDResponse400Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutEnvironmentsEnvironmentIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutEnvironmentsEnvironmentIDResponse401Error")) },
    ], "any"),
    "PutEnvironmentsEnvironmentIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutEnvironmentsEnvironmentIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutEnvironmentsEnvironmentIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutEnvironmentsEnvironmentIDResponse500Error")) },
    ], "any"),
    "PutEnvironmentsEnvironmentIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDBody": o([
        { json: "mock", js: "mock", typ: u(null, undefined, r("PutMocksMockIDBodyMock")) },
    ], "any"),
    "PutMocksMockIDBodyMock": o([
        { json: "config", js: "config", typ: u(null, undefined, r("PutMocksMockIDBodyMockConfig")) },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "environment", js: "environment", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "private", js: "private", typ: u(null, undefined, true) },
        { json: "versionTag", js: "versionTag", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDBodyMockConfig": o([
        { json: "serverResponseId", js: "serverResponseID", typ: u(null, undefined, u(null, "")) },
    ], "any"),
    "PutMocksMockIDResponse": o([
        { json: "mock", js: "mock", typ: u(null, undefined, r("PutMocksMockIDResponseMock")) },
    ], "any"),
    "PutMocksMockIDResponseMock": o([
        { json: "collection", js: "collection", typ: u(null, undefined, "") },
        { json: "config", js: "config", typ: u(null, undefined, r("PutMocksMockIDResponseMockConfig")) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "environment", js: "environment", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "mockUrl", js: "mockURL", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "owner", js: "owner", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDResponseMockConfig": o([
        { json: "headers", js: "headers", typ: u(null, undefined, a("any")) },
        { json: "matchBody", js: "matchBody", typ: u(null, undefined, true) },
        { json: "matchQueryParams", js: "matchQueryParams", typ: u(null, undefined, true) },
        { json: "matchWildcards", js: "matchWildcards", typ: u(null, undefined, true) },
    ], "any"),
    "PutMocksMockIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutMocksMockIDResponse401Error")) },
    ], "any"),
    "PutMocksMockIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutMocksMockIDResponse404Error")) },
    ], "any"),
    "PutMocksMockIDResponse404Error": o([
        { json: "details", js: "details", typ: u(null, undefined, a("")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutMocksMockIDResponse500Error")) },
    ], "any"),
    "PutMocksMockIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDBody": o([
        { json: "serverResponse", js: "serverResponse", typ: u(null, undefined, r("PutMocksMockIDServerResponsesServerResponseIDBodyServerResponse")) },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDBodyServerResponse": o([
        { json: "body", js: "body", typ: u(null, undefined, "") },
        { json: "headers", js: "headers", typ: u(null, undefined, a(r("PutMocksMockIDServerResponsesServerResponseIDBodyServerResponseHeadersItem"))) },
        { json: "language", js: "language", typ: u(null, undefined, r("DeleteMocksMockIDServerResponsesServerResponseIDResponseLanguage")) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "statusCode", js: "statusCode", typ: u(null, undefined, 0) },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDBodyServerResponseHeadersItem": o([
        { json: "key", js: "key", typ: u(null, undefined, "") },
        { json: "value", js: "value", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDResponse400": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutMocksMockIDServerResponsesServerResponseIDResponse400Error")) },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDResponse400Error": o([
        { json: "details", js: "details", typ: u(null, undefined, r("PutMocksMockIDServerResponsesServerResponseIDResponse400ErrorDetails")) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDResponse400ErrorDetails": o([
        { json: "param", js: "param", typ: u(null, undefined, a("")) },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutMocksMockIDServerResponsesServerResponseIDResponse401Error")) },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutMocksMockIDServerResponsesServerResponseIDResponse500Error")) },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutMocksMockIDServerResponsesServerResponseIDResponseItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "statusCode", js: "statusCode", typ: u(null, undefined, 3.14) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "PutMonitorsMonitorIDBody": o([
        { json: "monitor", js: "monitor", typ: u(null, undefined, r("PutMonitorsMonitorIDBodyMonitor")) },
    ], "any"),
    "PutMonitorsMonitorIDBodyMonitor": o([
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "schedule", js: "schedule", typ: u(null, undefined, r("PutMonitorsMonitorIDBodyMonitorSchedule")) },
    ], "any"),
    "PutMonitorsMonitorIDBodyMonitorSchedule": o([
        { json: "cron", js: "cron", typ: u(null, undefined, "any") },
        { json: "timezone", js: "timezone", typ: u(null, undefined, "") },
    ], "any"),
    "PutMonitorsMonitorIDResponse": o([
        { json: "monitor", js: "monitor", typ: u(null, undefined, r("PutMonitorsMonitorIDResponseMonitor")) },
    ], "any"),
    "PutMonitorsMonitorIDResponseMonitor": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "uid", js: "uid", typ: u(null, undefined, "") },
    ], "any"),
    "PutMonitorsMonitorIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutMonitorsMonitorIDResponse401Error")) },
    ], "any"),
    "PutMonitorsMonitorIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutMonitorsMonitorIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutMonitorsMonitorIDResponse404Error")) },
    ], "any"),
    "PutMonitorsMonitorIDResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutMonitorsMonitorIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutMonitorsMonitorIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutMonitorsMonitorIDResponse500Error")) },
    ], "any"),
    "PutMonitorsMonitorIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateElementTypeElementIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutNetworkPrivateElementTypeElementIDResponse401Error")) },
    ], "any"),
    "PutNetworkPrivateElementTypeElementIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateElementTypeElementIDResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutNetworkPrivateElementTypeElementIDResponse403Error")) },
    ], "any"),
    "PutNetworkPrivateElementTypeElementIDResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateElementTypeElementIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutNetworkPrivateElementTypeElementIDResponse404Error")) },
    ], "any"),
    "PutNetworkPrivateElementTypeElementIDResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateElementTypeElementIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateElementTypeElementIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutNetworkPrivateElementTypeElementIDResponse500Error")) },
    ], "any"),
    "PutNetworkPrivateElementTypeElementIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDBody": o([
        { json: "response", js: "response", typ: u(null, undefined, r("PutNetworkPrivateNetworkEntityRequestRequestIDBodyResponse")) },
        { json: "status", js: "status", typ: r("PutNetworkPrivateNetworkEntityRequestRequestIDBodyStatus") },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDBodyResponse": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponse": o([
        { json: "request", js: "request", typ: u(null, undefined, a(r("PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItem"))) },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItem": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 0) },
        { json: "element", js: "element", typ: u(null, undefined, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItemElement")) },
        { json: "id", js: "id", typ: u(null, undefined, 0) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "response", js: "response", typ: u(null, undefined, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItemResponse")) },
        { json: "status", js: "status", typ: u(null, undefined, r("PutNetworkPrivateNetworkEntityRequestRequestIDBodyStatus")) },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItemElement": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 0) },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("EntityTypeEnum")) },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponseRequestItemResponse": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 0) },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponse400": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, r("Name")) },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponse401": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse401Error")) },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponse401Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse403Error")) },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutNetworkPrivateNetworkEntityRequestRequestIDResponse500Error")) },
    ], "any"),
    "PutNetworkPrivateNetworkEntityRequestRequestIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutScimV2UsersUserIDBody": o([
        { json: "name", js: "name", typ: u(null, undefined, r("PutScimV2UsersUserIDBodyName")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
    ], "any"),
    "PutScimV2UsersUserIDBodyName": o([
        { json: "familyName", js: "familyName", typ: u(null, undefined, "") },
        { json: "givenName", js: "givenName", typ: u(null, undefined, "") },
    ], "any"),
    "PutScimV2UsersUserIDResponse": o([
        { json: "active", js: "active", typ: u(null, undefined, true) },
        { json: "externalId", js: "externalID", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "meta", js: "meta", typ: u(null, undefined, r("PutScimV2UsersUserIDResponseMeta")) },
        { json: "name", js: "name", typ: u(null, undefined, r("PutScimV2UsersUserIDResponseName")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "userName", js: "userName", typ: u(null, undefined, "") },
    ], "any"),
    "PutScimV2UsersUserIDResponseMeta": o([
        { json: "created", js: "created", typ: u(null, undefined, "") },
        { json: "lastModified", js: "lastModified", typ: u(null, undefined, "") },
        { json: "resourceType", js: "resourceType", typ: u(null, undefined, "") },
    ], "any"),
    "PutScimV2UsersUserIDResponseName": o([
        { json: "familyName", js: "familyName", typ: u(null, undefined, "") },
        { json: "givenName", js: "givenName", typ: u(null, undefined, "") },
    ], "any"),
    "PutScimV2UsersUserIDResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "scimType", js: "scimType", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PutScimV2UsersUserIDResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PutScimV2UsersUserIDResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PutScimV2UsersUserIDResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PutScimV2UsersUserIDResponse429": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, 3.14) },
    ], "any"),
    "PutScimV2UsersUserIDResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a("")) },
        { json: "status", js: "status", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDBody": o([
        { json: "workspace", js: "workspace", typ: u(null, undefined, r("PutWorkspacesWorkspaceIDBodyWorkspace")) },
    ], "any"),
    "PutWorkspacesWorkspaceIDBodyWorkspace": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("WorkspaceVisibility")) },
    ], "any"),
    "PutWorkspacesWorkspaceIDGlobalVariablesBody": o([
        { json: "values", js: "values", typ: u(null, undefined, a(r("GlobalVariable"))) },
    ], "any"),
    "PutWorkspacesWorkspaceIDGlobalVariablesResponse": o([
        { json: "values", js: "values", typ: u(null, undefined, a(a(r("GlobalVariable")))) },
    ], "any"),
    "PutWorkspacesWorkspaceIDGlobalVariablesResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponse": o([
        { json: "workspace", js: "workspace", typ: u(null, undefined, r("PutWorkspacesWorkspaceIDResponseWorkspace")) },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponseWorkspace": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponse400": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponse403": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutWorkspacesWorkspaceIDResponse403Error")) },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponse403Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponse404": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutWorkspacesWorkspaceIDResponse404Error")) },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponse404Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponse429": o([
        { json: "error", js: "error", typ: u(null, undefined, "") },
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponse500": o([
        { json: "error", js: "error", typ: u(null, undefined, r("PutWorkspacesWorkspaceIDResponse500Error")) },
    ], "any"),
    "PutWorkspacesWorkspaceIDResponse500Error": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDTagsBody": o([
        { json: "tags", js: "tags", typ: a(r("PutWorkspacesWorkspaceIDTagsBodyTagsItem")) },
    ], "any"),
    "PutWorkspacesWorkspaceIDTagsBodyTagsItem": o([
        { json: "slug", js: "slug", typ: "" },
    ], "any"),
    "PutWorkspacesWorkspaceIDTagsResponse": o([
        { json: "tags", js: "tags", typ: u(null, undefined, a(r("PutWorkspacesWorkspaceIDTagsResponseTagsItem"))) },
    ], "any"),
    "PutWorkspacesWorkspaceIDTagsResponseTagsItem": o([
        { json: "slug", js: "slug", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDTagsResponse400": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDTagsResponse401": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDTagsResponse403": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDTagsResponse404": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "PutWorkspacesWorkspaceIDTagsResponse500": o([
        { json: "detail", js: "detail", typ: u(null, undefined, "") },
        { json: "instance", js: "instance", typ: u(null, undefined, "") },
        { json: "status", js: "status", typ: u(null, undefined, 0) },
        { json: "title", js: "title", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, "") },
    ], "any"),
    "APIBase": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, 3.14) },
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, 3.14) },
    ], "any"),
    "APIDetails": o([
        { json: "collections", js: "collections", typ: u(null, undefined, a(r("APIDetailsCollectionsItem"))) },
        { json: "gitInfo", js: "gitInfo", typ: u(null, undefined, r("APIDetailsGitInfo")) },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a(r("APIDetailsSchemasItem"))) },
        { json: "versions", js: "versions", typ: u(null, undefined, a(r("APIDetailsVersionsItem"))) },
    ], "any"),
    "APIDetailsCollectionsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "APIDetailsGitInfo": o([
        { json: "collectionFolder", js: "collectionFolder", typ: u(null, undefined, "") },
        { json: "domain", js: "domain", typ: u(null, undefined, u(null, "")) },
        { json: "organization", js: "organization", typ: u(null, undefined, "") },
        { json: "repository", js: "repository", typ: u(null, undefined, "") },
        { json: "schemaFolder", js: "schemaFolder", typ: u(null, undefined, "") },
    ], "any"),
    "APIDetailsSchemasItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "APIDetailsVersionsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "CreateAPIVersionGitLinked": o([
        { json: "branch", js: "branch", typ: u(null, undefined, "") },
        { json: "collections", js: "collections", typ: u(null, undefined, a(r("CreateAPIVersionGitLinkedCollectionsItem"))) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "releaseNotes", js: "releaseNotes", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a(r("CreateAPIVersionGitLinkedSchemasItem"))) },
    ], "any"),
    "CreateAPIVersionGitLinkedCollectionsItem": o([
        { json: "filePath", js: "filePath", typ: u(null, undefined, "") },
    ], "any"),
    "CreateAPIVersionGitLinkedSchemasItem": o([
        { json: "directoryPath", js: "directoryPath", typ: u(null, undefined, "") },
    ], "any"),
    "CreateAPIVersionNonGitLinked": o([
        { json: "collections", js: "collections", typ: u(null, undefined, a(r("CreateAPIVersionNonGitLinkedCollectionsItem"))) },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "releaseNotes", js: "releaseNotes", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a(r("CreateAPIVersionNonGitLinkedSchemasItem"))) },
    ], "any"),
    "CreateAPIVersionNonGitLinkedCollectionsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "CreateAPIVersionNonGitLinkedSchemasItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
    ], "any"),
    "CreateAPISchema": o([
        { json: "files", js: "files", typ: a(r("CreateAPISchemaFilesItem")) },
        { json: "type", js: "type", typ: r("PostApisAPIIDSchemasBodyType") },
    ], "any"),
    "CreateAPISchemaFilesItem": o([
        { json: "content", js: "content", typ: u(null, undefined, "") },
        { json: "path", js: "path", typ: u(null, undefined, "") },
        { json: "root", js: "root", typ: u(null, undefined, r("CreateAPISchemaFilesItemRoot")) },
    ], "any"),
    "CreateAPISchemaFilesItemRoot": o([
        { json: "enabled", js: "enabled", typ: u(null, undefined, true) },
    ], "any"),
    "CreatePANAPI": o([
        { json: "api", js: "api", typ: u(null, undefined, r("CreatePanAPIAPI")) },
    ], "any"),
    "CreatePanAPIAPI": o([
        { json: "id", js: "id", typ: "" },
        { json: "parentFolderId", js: "parentFolderID", typ: 0 },
    ], "any"),
    "CreatePANCollection": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("CreatePanCollectionCollection")) },
    ], "any"),
    "CreatePanCollectionCollection": o([
        { json: "environments", js: "environments", typ: u(null, undefined, a("")) },
        { json: "id", js: "id", typ: "" },
        { json: "parentFolderId", js: "parentFolderID", typ: 0 },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
    ], "any"),
    "CreatePANFolder": o([
        { json: "folder", js: "folder", typ: u(null, undefined, r("CreatePanFolderFolder")) },
    ], "any"),
    "CreatePanFolderFolder": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "parentFolderId", js: "parentFolderID", typ: u(null, undefined, 0) },
    ], "any"),
    "CreatePANWorkspace": o([
        { json: "workspace", js: "workspace", typ: u(null, undefined, r("CreatePanWorkspaceWorkspace")) },
    ], "any"),
    "CreatePanWorkspaceWorkspace": o([
        { json: "id", js: "id", typ: "" },
        { json: "parentFolderId", js: "parentFolderID", typ: 0 },
    ], "any"),
    "CreateUpdateAPI": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
    ], "any"),
    "GitInfo": o([
        { json: "collectionFolder", js: "collectionFolder", typ: u(null, undefined, "") },
        { json: "domain", js: "domain", typ: u(null, undefined, u(null, "")) },
        { json: "organization", js: "organization", typ: u(null, undefined, "") },
        { json: "repository", js: "repository", typ: u(null, undefined, "") },
        { json: "schemaFolder", js: "schemaFolder", typ: u(null, undefined, "") },
    ], "any"),
    "ImportExportFile": o([
        { json: "input", js: "input", typ: "" },
        { json: "type", js: "type", typ: r("ImportExportFileType") },
    ], "any"),
    "JSONSchema": o([
        { json: "input", js: "input", typ: u(null, undefined, "any") },
        { json: "options", js: "options", typ: u(null, undefined, "any") },
        { json: "type", js: "type", typ: u(null, undefined, r("JSONSchemaType")) },
    ], "any"),
    "JSONStringified": o([
        { json: "input", js: "input", typ: u(null, undefined, "") },
        { json: "options", js: "options", typ: u(null, undefined, "any") },
        { json: "type", js: "type", typ: u(null, undefined, r("JSONSchemaType")) },
    ], "any"),
    "Meta": o([
        { json: "limit", js: "limit", typ: u(null, undefined, 3.14) },
        { json: "nextCursor", js: "nextCursor", typ: u(null, undefined, "") },
        { json: "total", js: "total", typ: u(null, undefined, 3.14) },
    ], "any"),
    "SchemaFileBase": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "path", js: "path", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "SchemaFileContents": o([
        { json: "content", js: "content", typ: u(null, undefined, "") },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "createdBy", js: "createdBy", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "path", js: "path", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
        { json: "updatedBy", js: "updatedBy", typ: u(null, undefined, "") },
    ], "any"),
    "TaskError": o([
        { json: "error", js: "error", typ: u(null, undefined, r("TaskErrorError")) },
    ], "any"),
    "TaskErrorError": o([
        { json: "message", js: "message", typ: u(null, undefined, "") },
    ], "any"),
    "TaskResource": o([
        { json: "resources", js: "resources", typ: u(null, undefined, a(r("TaskResourceResourcesItem"))) },
    ], "any"),
    "TaskResourceResourcesItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "url", js: "url", typ: u(null, undefined, "") },
    ], "any"),
    "UpdatePANAPI": o([
        { json: "api", js: "api", typ: u(null, undefined, r("UpdatePanAPIAPI")) },
    ], "any"),
    "UpdatePanAPIAPI": o([
        { json: "parentFolderId", js: "parentFolderID", typ: u(null, undefined, 0) },
    ], "any"),
    "UpdatePANCollection": o([
        { json: "collection", js: "collection", typ: u(null, undefined, r("UpdatePanCollectionCollection")) },
    ], "any"),
    "UpdatePanCollectionCollection": o([
        { json: "environments", js: "environments", typ: u(null, undefined, r("UpdatePanCollectionCollectionEnvironments")) },
        { json: "parentFolderId", js: "parentFolderID", typ: u(null, undefined, 0) },
        { json: "summary", js: "summary", typ: u(null, undefined, "") },
    ], "any"),
    "UpdatePanCollectionCollectionEnvironments": o([
        { json: "$add", js: "add", typ: u(null, undefined, a("")) },
        { json: "$remove", js: "remove", typ: u(null, undefined, a("")) },
    ], "any"),
    "UpdatePANFolder": o([
        { json: "folder", js: "folder", typ: u(null, undefined, r("UpdatePanFolderFolder")) },
    ], "any"),
    "UpdatePanFolderFolder": o([
        { json: "description", js: "description", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "parentFolderId", js: "parentFolderID", typ: u(null, undefined, 0) },
    ], "any"),
    "UpdatePANWorkspace": o([
        { json: "workspace", js: "workspace", typ: u(null, undefined, r("UpdatePanWorkspaceWorkspace")) },
    ], "any"),
    "UpdatePanWorkspaceWorkspace": o([
        { json: "parentFolderId", js: "parentFolderID", typ: u(null, undefined, 0) },
    ], "any"),
    "VersionBase": o([
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "releaseNotes", js: "releaseNotes", typ: u(null, undefined, "") },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "VersionExtended": o([
        { json: "collections", js: "collections", typ: u(null, undefined, a(r("VersionExtendedCollectionsItem"))) },
        { json: "createdAt", js: "createdAt", typ: u(null, undefined, "") },
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
        { json: "releaseNotes", js: "releaseNotes", typ: u(null, undefined, "") },
        { json: "schemas", js: "schemas", typ: u(null, undefined, a(r("VersionExtendedSchemasItem"))) },
        { json: "updatedAt", js: "updatedAt", typ: u(null, undefined, "") },
    ], "any"),
    "VersionExtendedCollectionsItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "name", js: "name", typ: u(null, undefined, "") },
    ], "any"),
    "VersionExtendedSchemasItem": o([
        { json: "id", js: "id", typ: u(null, undefined, "") },
        { json: "type", js: "type", typ: u(null, undefined, r("PostApisAPIIDSchemasBodyType")) },
    ], "any"),
    "DeleteMocksMockIDServerResponsesServerResponseIDResponseLanguage": [
        "html",
        "json",
        "javascript",
        "text",
        "xml",
    ],
    "Schema": [
        "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    ],
    "Action": [
        "create",
        "update",
    ],
    "Model": [
        "api-version",
        "collection",
    ],
    "GetApisAPIIDTasksTaskIDResponseStatus": [
        "completed",
        "failed",
        "pending",
    ],
    "DatumResourceType": [
        "api",
        "collection",
        "environment",
        "example",
        "folder",
        "globals",
        "request",
    ],
    "ResolutionEnum": [
        "ACCEPTED_RISK",
        "ACTIVE",
        "FALSE_POSITIVE",
        "REVOKED",
    ],
    "PurpleType": [
        "any",
        "default",
        "secret",
    ],
    "Preset": [
        "1",
        "2",
    ],
    "GetMocksResponseMocksItemConfigDelayType": [
        "fixed",
    ],
    "EntityTypeEnum": [
        "api",
        "collection",
        "workspace",
    ],
    "PurpleStatus": [
        "denied",
        "pending",
    ],
    "DatumType": [
        "DEFAULT",
        "TEAM_REGEX",
    ],
    "VisibilityEnum": [
        "partner",
        "personal",
        "private",
        "public",
        "team",
    ],
    "GlobalVariableType": [
        "default",
        "secret",
    ],
    "PurpleOp": [
        "add",
        "remove",
        "replace",
    ],
    "FluffyOp": [
        "replace",
    ],
    "PostApisAPIIDSchemasBodyType": [
        "asyncapi:2",
        "graphql",
        "openapi:1",
        "openapi:2",
        "openapi:3",
        "openapi:3_1",
        "proto:2",
        "proto:3",
        "raml:0_8",
        "raml:1",
        "wsdl:1",
        "wsdl:2",
    ],
    "Strategy": [
        "deleteSource",
        "updateSourceWithDestination",
    ],
    "Resolution": [
        "ACCEPTED_RISK",
        "FALSE_POSITIVE",
        "REVOKED",
    ],
    "WorkspaceVisibility": [
        "personal",
        "private",
        "public",
        "team",
    ],
    "MetaResourceType": [
        "User",
    ],
    "SchemaLanguage": [
        "json",
        "yaml",
    ],
    "FluffyType": [
        "openapi2",
        "openapi3",
    ],
    "Method": [
        "COPY",
        "DELETE",
        "GET",
        "HEAD",
        "LINK",
        "LOCK",
        "OPTIONS",
        "PATCH",
        "POST",
        "PROPFIND",
        "PURGE",
        "PUT",
        "UNLINK",
        "UNLOCK",
        "VIEW",
    ],
    "PutNetworkPrivateNetworkEntityRequestRequestIDBodyStatus": [
        "approved",
        "denied",
    ],
    "Name": [
        "invalidParamsError",
        "requestAlreadyResponded",
        "requestEntityAlreadyPublished",
        "RequestNotFound",
    ],
    "ImportExportFileType": [
        "file",
    ],
    "JSONSchemaType": [
        "json",
    ],
};
